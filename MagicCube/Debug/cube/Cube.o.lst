   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "Cube.cpp"
  16              	 .text
  17              	.Ltext0:
 505              	 .section .text._ZnwjPv,"axG",%progbits,_ZnwjPv,comdat
 506              	 .align 2
 509              	 .weak _ZnwjPv
 510              	 .code 16
 511              	 .thumb_func
 513              	_ZnwjPv:
 514              	 .stabd 46,0,0
 516              	.Ltext1:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // Copyright (C) 1994-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // This file is part of GCC.
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** //
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // it under the terms of the GNU General Public License as published by
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // any later version.
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // 
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // GNU General Public License for more details.
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // 
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // You should have received a copy of the GNU General Public License and
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // <http://www.gnu.org/licenses/>.
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** /** @file new
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  This is a Standard C++ Library header.
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  handling memory allocation errors; see
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  */
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #ifndef _NEW
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #define _NEW
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #pragma GCC system_header
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #include <bits/c++config.h>
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #include <exception>
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #pragma GCC visibility push(default)
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** extern "C++" {
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** namespace std 
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** {
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   /**
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****    *  @brief  Exception possibly thrown by @c new.
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****    *  @ingroup exceptions
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****    *
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****    *  errors from the throwing forms of @c new.  */
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   class bad_alloc : public exception 
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   {
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   public:
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     bad_alloc() throw() { }
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // This declaration is not useless:
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     virtual ~bad_alloc() throw();
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // See comment in eh_exception.cc.
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     virtual const char* what() const throw();
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   };
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #if __cplusplus >= 201103L
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   class bad_array_new_length : public bad_alloc
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   {
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   public:
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     bad_array_new_length() throw() { };
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // This declaration is not useless:
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     virtual ~bad_array_new_length() throw();
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // See comment in eh_exception.cc.
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     virtual const char* what() const throw();
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   };
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #endif
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   // We throw this exception for GNU VLAs of negative length in all C++
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   // dialects, so declare it if we aren't in strict conformance mode.
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #if __cplusplus > 201103L || !defined(__STRICT_ANSI__)
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   class bad_array_length : public bad_alloc
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   {
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   public:
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     bad_array_length() throw() { };
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // This declaration is not useless:
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     virtual ~bad_array_length() throw();
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     // See comment in eh_exception.cc.
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****     virtual const char* what() const throw();
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   };
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #endif
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   struct nothrow_t { };
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   extern const nothrow_t nothrow;
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   /** If you write your own error handler to be called by @c new, it must
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****    *  be of this type.  */
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   typedef void (*new_handler)();
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   /// Takes a replacement handler as the argument, returns the
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   /// previous handler.
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   new_handler set_new_handler(new_handler) throw();
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #if __cplusplus >= 201103L
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   /// Return the current new handler.
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   new_handler get_new_handler() noexcept;
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** #endif
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** } // namespace std
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** //@{
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** /** These are replaceable signatures:
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  - normal array new and delete (same)
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *    @c NULL on error)
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  - @c nothrow array new and delete (same)
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  Placement new and delete signatures (take a memory address argument,
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****  *  does nothing) may not be replaced by a user's program.
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** */
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new ****   __attribute__((__externally_visible__));
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** 
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** // Default placement versions of operator new.
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\new **** { return __p; }
 518              	.LM0:
 519              	.LFBB1:
 520 0000 80B5     	 push {r7,lr}
 521 0002 82B0     	 sub sp,sp,#8
 522 0004 00AF     	 add r7,sp,#0
 523 0006 7860     	 str r0,[r7,#4]
 524 0008 3960     	 str r1,[r7]
 526              	.LM1:
 527 000a 3B68     	 ldr r3,[r7]
 528 000c 181C     	 mov r0,r3
 529 000e BD46     	 mov sp,r7
 530 0010 02B0     	 add sp,sp,#8
 531              	 
 532 0012 80BD     	 pop {r7,pc}
 534              	.Lscope1:
 536              	 .stabd 78,0,0
 537              	 .section .text._ZL20__gthread_key_deletei,"ax",%progbits
 538              	 .align 2
 541              	 .code 16
 542              	 .thumb_func
 544              	_ZL20__gthread_key_deletei:
 545              	 .stabd 46,0,0
 547              	.Ltext2:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Compile this one with gcc.  */
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Copyright (C) 1997-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** This file is part of GCC.
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** version.
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** for more details.
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_key_t;
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_once_t;
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_mutex_t;
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx)
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((unused))
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #ifdef _LIBOBJC
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Thread local storage for a single thread */
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static void *thread_local_storage = NULL;
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend initialization functions */
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Initialize the threads subsystem.  */
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Close the threads subsystem.  */
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend thread functions */
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Create a new thread of execution.  */
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline objc_thread_t
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return NULL;
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Set the current thread's priority.  */
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Return the current thread's priority.  */
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Yield our process time to another thread.  */
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline void
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_yield (void)
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return;
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Terminate the current thread.  */
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_exit (void)
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* Should we really exit the program */
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline objc_thread_t
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_id (void)
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support, use 1.  */
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return (objc_thread_t) 1;
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   thread_local_storage = value;
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline void *
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return thread_local_storage;
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend mutex functions */
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Allocate a mutex.  */
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Deallocate a mutex.  */
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Grab a lock on a mutex.  */
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Unlock the mutex */
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend condition mutex functions */
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Allocate a condition.  */
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Deallocate a condition.  */
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Wait on the condition */
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #else /* _LIBOBJC */
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_active_p (void)
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static int _GLIBCXX_UNUSED
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 549              	.LM2:
 550              	.LFBB2:
 551 0000 80B5     	 push {r7,lr}
 552 0002 82B0     	 sub sp,sp,#8
 553 0004 00AF     	 add r7,sp,#0
 554 0006 7860     	 str r0,[r7,#4]
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 556              	.LM3:
 557 0008 0023     	 mov r3,#0
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 559              	.LM4:
 560 000a 181C     	 mov r0,r3
 561 000c BD46     	 mov sp,r7
 562 000e 02B0     	 add sp,sp,#8
 563              	 
 564 0010 80BD     	 pop {r7,pc}
 566              	.Lscope2:
 568              	 .stabd 78,0,0
 569 0012 C046     	 .section .text._ZN4CubeC2Ev,"ax",%progbits
 570              	 .align 2
 573              	 .global _ZN4CubeC2Ev
 574              	 .code 16
 575              	 .thumb_func
 577              	_ZN4CubeC2Ev:
 578              	 .stabd 46,0,0
 580              	.Ltext3:
   1:../cube/Cube.cpp **** /*
   2:../cube/Cube.cpp ****  * Cube.cpp
   3:../cube/Cube.cpp ****  *
   4:../cube/Cube.cpp ****  *  Created on: Dec 30, 2016
   5:../cube/Cube.cpp ****  *      Author: alex
   6:../cube/Cube.cpp ****  */
   7:../cube/Cube.cpp **** 
   8:../cube/Cube.cpp **** #include <cube/Cube.h>
   9:../cube/Cube.cpp **** 
  10:../cube/Cube.cpp **** Cube::Cube() {
 582              	.LM5:
 583              	.LFBB3:
 584 0000 80B5     	 push {r7,lr}
 585 0002 82B0     	 sub sp,sp,#8
 586 0004 00AF     	 add r7,sp,#0
 587 0006 7860     	 str r0,[r7,#4]
 588              	.LBB2:
 590              	.LM6:
 591 0008 7B68     	 ldr r3,[r7,#4]
 592 000a 181C     	 mov r0,r3
 593 000c FFF7FEFF 	 bl _ZN7XObjectC2Ev
 594 0010 7B68     	 ldr r3,[r7,#4]
 595 0012 064A     	 ldr r2,.L8
 596 0014 1A60     	 str r2,[r3]
 597 0016 7B68     	 ldr r3,[r7,#4]
 598 0018 0433     	 add r3,r3,#4
 599 001a 181C     	 mov r0,r3
 600 001c FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EEC1Ev
 601              	.LBE2:
  11:../cube/Cube.cpp **** }
 603              	.LM7:
 604 0020 7B68     	 ldr r3,[r7,#4]
 605 0022 181C     	 mov r0,r3
 606 0024 BD46     	 mov sp,r7
 607 0026 02B0     	 add sp,sp,#8
 608              	 
 609 0028 80BD     	 pop {r7,pc}
 610              	.L9:
 611 002a C046     	 .align 2
 612              	.L8:
 613 002c 08000000 	 .word _ZTV4Cube+8
 615              	.Lscope3:
 617              	 .stabd 78,0,0
 618              	 .global _ZN4CubeC1Ev
 619              	 .thumb_set _ZN4CubeC1Ev,_ZN4CubeC2Ev
 620              	 .section .text._ZN4CubeD2Ev,"ax",%progbits
 621              	 .align 2
 624              	 .global _ZN4CubeD2Ev
 625              	 .code 16
 626              	 .thumb_func
 628              	_ZN4CubeD2Ev:
 629              	 .stabd 46,0,0
  12:../cube/Cube.cpp **** 
  13:../cube/Cube.cpp **** Cube::~Cube() {
 631              	.LM8:
 632              	.LFBB4:
 633 0000 80B5     	 push {r7,lr}
 634 0002 82B0     	 sub sp,sp,#8
 635 0004 00AF     	 add r7,sp,#0
 636 0006 7860     	 str r0,[r7,#4]
 637              	.LBB3:
 639              	.LM9:
 640 0008 7B68     	 ldr r3,[r7,#4]
 641 000a 0B4A     	 ldr r2,.L14
 642 000c 1A60     	 str r2,[r3]
 643 000e 7B68     	 ldr r3,[r7,#4]
 644 0010 0433     	 add r3,r3,#4
 645 0012 181C     	 mov r0,r3
 646 0014 FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EED1Ev
 647 0018 7B68     	 ldr r3,[r7,#4]
 648 001a 181C     	 mov r0,r3
 649 001c FFF7FEFF 	 bl _ZN7XObjectD2Ev
 650              	.LBE3:
  14:../cube/Cube.cpp **** }
 652              	.LM10:
 653 0020 0023     	 mov r3,#0
 654 0022 002B     	 cmp r3,#0
 655 0024 03D0     	 beq .L12
 657              	.LM11:
 658 0026 7B68     	 ldr r3,[r7,#4]
 659 0028 181C     	 mov r0,r3
 660 002a FFF7FEFF 	 bl _ZdlPv
 661              	.L12:
 663              	.LM12:
 664 002e 7B68     	 ldr r3,[r7,#4]
 665 0030 181C     	 mov r0,r3
 666 0032 BD46     	 mov sp,r7
 667 0034 02B0     	 add sp,sp,#8
 668              	 
 669 0036 80BD     	 pop {r7,pc}
 670              	.L15:
 671              	 .align 2
 672              	.L14:
 673 0038 08000000 	 .word _ZTV4Cube+8
 675              	.Lscope4:
 677              	 .stabd 78,0,0
 678              	 .global _ZN4CubeD1Ev
 679              	 .thumb_set _ZN4CubeD1Ev,_ZN4CubeD2Ev
 680              	 .section .text._ZN4CubeD0Ev,"ax",%progbits
 681              	 .align 2
 684              	 .global _ZN4CubeD0Ev
 685              	 .code 16
 686              	 .thumb_func
 688              	_ZN4CubeD0Ev:
 689              	 .stabd 46,0,0
  13:../cube/Cube.cpp **** }
 691              	.LM13:
 692              	.LFBB5:
 693 0000 80B5     	 push {r7,lr}
 694 0002 82B0     	 sub sp,sp,#8
 695 0004 00AF     	 add r7,sp,#0
 696 0006 7860     	 str r0,[r7,#4]
 698              	.LM14:
 699 0008 7B68     	 ldr r3,[r7,#4]
 700 000a 181C     	 mov r0,r3
 701 000c FFF7FEFF 	 bl _ZN4CubeD2Ev
 702 0010 7B68     	 ldr r3,[r7,#4]
 703 0012 181C     	 mov r0,r3
 704 0014 FFF7FEFF 	 bl _ZdlPv
 705 0018 7B68     	 ldr r3,[r7,#4]
 706 001a 181C     	 mov r0,r3
 707 001c BD46     	 mov sp,r7
 708 001e 02B0     	 add sp,sp,#8
 709              	 
 710 0020 80BD     	 pop {r7,pc}
 712              	.Lscope5:
 714              	 .stabd 78,0,0
 715 0022 C046     	 .section .text._ZN4Cube8addFloorEP5Floor,"ax",%progbits
 716              	 .align 2
 720              	 .global _ZN4Cube8addFloorEP5Floor
 721              	 .code 16
 722              	 .thumb_func
 724              	_ZN4Cube8addFloorEP5Floor:
 725              	 .stabd 46,0,0
  15:../cube/Cube.cpp **** 
  16:../cube/Cube.cpp **** void Cube::addFloor(Floor* floor){
 727              	.LM15:
 728              	.LFBB6:
 729 0000 80B5     	 push {r7,lr}
 730 0002 82B0     	 sub sp,sp,#8
 731 0004 00AF     	 add r7,sp,#0
 732 0006 7860     	 str r0,[r7,#4]
 733 0008 3960     	 str r1,[r7]
  17:../cube/Cube.cpp **** 	floors_.push_back(floor);
 735              	.LM16:
 736 000a 7B68     	 ldr r3,[r7,#4]
 737 000c 1A1D     	 add r2,r3,#4
 738 000e 3B1C     	 mov r3,r7
 739 0010 101C     	 mov r0,r2
 740 0012 191C     	 mov r1,r3
 741 0014 FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_
  18:../cube/Cube.cpp **** }
 743              	.LM17:
 744 0018 BD46     	 mov sp,r7
 745 001a 02B0     	 add sp,sp,#8
 746              	 
 747 001c 80BD     	 pop {r7,pc}
 749              	.Lscope6:
 751              	 .stabd 78,0,0
 752 001e C046     	 .section .text._ZN4Cube4playEP5FloorP13FloorRegister,"ax",%progbits
 753              	 .align 2
 758              	 .global _ZN4Cube4playEP5FloorP13FloorRegister
 759              	 .code 16
 760              	 .thumb_func
 762              	_ZN4Cube4playEP5FloorP13FloorRegister:
 763              	 .stabd 46,0,0
  19:../cube/Cube.cpp **** 
  20:../cube/Cube.cpp **** void Cube::play(Floor* floor, FloorRegister* reg){
 765              	.LM18:
 766              	.LFBB7:
 767 0000 80B5     	 push {r7,lr}
 768 0002 86B0     	 sub sp,sp,#24
 769 0004 00AF     	 add r7,sp,#0
 770 0006 F860     	 str r0,[r7,#12]
 771 0008 B960     	 str r1,[r7,#8]
 772 000a 7A60     	 str r2,[r7,#4]
 773              	.LBB4:
 774              	.LBB5:
  21:../cube/Cube.cpp **** 	for(unsigned int i = 0; i < reg->count(); i++){
 776              	.LM19:
 777 000c 0023     	 mov r3,#0
 778 000e 7B61     	 str r3,[r7,#20]
 779 0010 17E0     	 b .L21
 780              	.L22:
  22:../cube/Cube.cpp **** 		floor->begin();
 782              	.LM20:
 783 0012 BB68     	 ldr r3,[r7,#8]
 784 0014 181C     	 mov r0,r3
 785 0016 FFF7FEFF 	 bl _ZN5Floor5beginEv
  23:../cube/Cube.cpp **** 		floor->push(reg->getValue(i));
 787              	.LM21:
 788 001a 7B69     	 ldr r3,[r7,#20]
 789 001c 7A68     	 ldr r2,[r7,#4]
 790 001e 101C     	 mov r0,r2
 791 0020 191C     	 mov r1,r3
 792 0022 FFF7FEFF 	 bl _ZN13FloorRegister8getValueEi
 793 0026 031C     	 mov r3,r0
 794 0028 1A1C     	 mov r2,r3
 795 002a BB68     	 ldr r3,[r7,#8]
 796 002c 181C     	 mov r0,r3
 797 002e 111C     	 mov r1,r2
 798 0030 FFF7FEFF 	 bl _ZN5Floor4pushEh
  24:../cube/Cube.cpp **** 		floor->end();
 800              	.LM22:
 801 0034 BB68     	 ldr r3,[r7,#8]
 802 0036 181C     	 mov r0,r3
 803 0038 FFF7FEFF 	 bl _ZN5Floor3endEv
  21:../cube/Cube.cpp **** 		floor->begin();
 805              	.LM23:
 806 003c 7B69     	 ldr r3,[r7,#20]
 807 003e 0133     	 add r3,r3,#1
 808 0040 7B61     	 str r3,[r7,#20]
 809              	.L21:
  21:../cube/Cube.cpp **** 		floor->begin();
 811              	.LM24:
 812 0042 7B68     	 ldr r3,[r7,#4]
 813 0044 181C     	 mov r0,r3
 814 0046 FFF7FEFF 	 bl _ZN13FloorRegister5countEv
 815 004a 021C     	 mov r2,r0
 816 004c 7B69     	 ldr r3,[r7,#20]
 817 004e 9342     	 cmp r3,r2
 818 0050 9B41     	 sbc r3,r3,r3
 819 0052 5B42     	 neg r3,r3
 820 0054 DBB2     	 uxtb r3,r3
 821 0056 002B     	 cmp r3,#0
 822 0058 DBD1     	 bne .L22
 823              	.LBE5:
 824              	.LBE4:
  25:../cube/Cube.cpp **** 	}
  26:../cube/Cube.cpp **** }
 826              	.LM25:
 827 005a BD46     	 mov sp,r7
 828 005c 06B0     	 add sp,sp,#24
 829              	 
 830 005e 80BD     	 pop {r7,pc}
 835              	.Lscope7:
 837              	 .stabd 78,0,0
 838              	 .section .text._ZN4Cube4playEP5Frame,"ax",%progbits
 839              	 .align 2
 843              	 .global _ZN4Cube4playEP5Frame
 844              	 .code 16
 845              	 .thumb_func
 847              	_ZN4Cube4playEP5Frame:
 848              	 .stabd 46,0,0
  27:../cube/Cube.cpp **** 
  28:../cube/Cube.cpp **** void Cube::play(Frame* frame){
 850              	.LM26:
 851              	.LFBB8:
 852 0000 80B5     	 push {r7,lr}
 853 0002 86B0     	 sub sp,sp,#24
 854 0004 00AF     	 add r7,sp,#0
 855 0006 7860     	 str r0,[r7,#4]
 856 0008 3960     	 str r1,[r7]
 857              	.L26:
 858              	.LBB6:
 859              	.LBB7:
 860              	.LBB8:
  29:../cube/Cube.cpp **** 	do{
  30:../cube/Cube.cpp **** 		for(unsigned int floorIndex = 0; floorIndex < frame->getFloorsCount(); floorIndex++){
 862              	.LM27:
 863 000a 0023     	 mov r3,#0
 864 000c 7B61     	 str r3,[r7,#20]
 865 000e 1CE0     	 b .L24
 866              	.L25:
 867              	.LBB9:
  31:../cube/Cube.cpp **** 			FloorRegister* reg = frame->getFloorData(floorIndex);
 869              	.LM28:
 870 0010 3A68     	 ldr r2,[r7]
 871 0012 7B69     	 ldr r3,[r7,#20]
 872 0014 101C     	 mov r0,r2
 873 0016 191C     	 mov r1,r3
 874 0018 FFF7FEFF 	 bl _ZN5Frame12getFloorDataEj
 875 001c 031C     	 mov r3,r0
 876 001e 3B61     	 str r3,[r7,#16]
  32:../cube/Cube.cpp **** 			Floor* floor = floors_[floorIndex];
 878              	.LM29:
 879 0020 7B68     	 ldr r3,[r7,#4]
 880 0022 1A1D     	 add r2,r3,#4
 881 0024 7B69     	 ldr r3,[r7,#20]
 882 0026 101C     	 mov r0,r2
 883 0028 191C     	 mov r1,r3
 884 002a FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EEixEj
 885 002e 031C     	 mov r3,r0
 886 0030 1B68     	 ldr r3,[r3]
 887 0032 FB60     	 str r3,[r7,#12]
  33:../cube/Cube.cpp **** 			play(floor, reg);
 889              	.LM30:
 890 0034 7968     	 ldr r1,[r7,#4]
 891 0036 FA68     	 ldr r2,[r7,#12]
 892 0038 3B69     	 ldr r3,[r7,#16]
 893 003a 081C     	 mov r0,r1
 894 003c 111C     	 mov r1,r2
 895 003e 1A1C     	 mov r2,r3
 896 0040 FFF7FEFF 	 bl _ZN4Cube4playEP5FloorP13FloorRegister
 897              	.LBE9:
  30:../cube/Cube.cpp **** 			FloorRegister* reg = frame->getFloorData(floorIndex);
 899              	.LM31:
 900 0044 7B69     	 ldr r3,[r7,#20]
 901 0046 0133     	 add r3,r3,#1
 902 0048 7B61     	 str r3,[r7,#20]
 903              	.L24:
  30:../cube/Cube.cpp **** 			FloorRegister* reg = frame->getFloorData(floorIndex);
 905              	.LM32:
 906 004a 3B68     	 ldr r3,[r7]
 907 004c 181C     	 mov r0,r3
 908 004e FFF7FEFF 	 bl _ZN5Frame14getFloorsCountEv
 909 0052 021C     	 mov r2,r0
 910 0054 7B69     	 ldr r3,[r7,#20]
 911 0056 9342     	 cmp r3,r2
 912 0058 9B41     	 sbc r3,r3,r3
 913 005a 5B42     	 neg r3,r3
 914 005c DBB2     	 uxtb r3,r3
 915 005e 002B     	 cmp r3,#0
 916 0060 D6D1     	 bne .L25
 917              	.LBE8:
  34:../cube/Cube.cpp **** 		}
  35:../cube/Cube.cpp **** 
  36:../cube/Cube.cpp **** 		delay(100000);
 919              	.LM33:
 920 0062 7B68     	 ldr r3,[r7,#4]
 921 0064 024A     	 ldr r2,.L27
 922 0066 181C     	 mov r0,r3
 923 0068 111C     	 mov r1,r2
 924 006a FFF7FEFF 	 bl _ZN7XObject5delayEj
 925              	.LBE7:
  37:../cube/Cube.cpp **** 	}while(1U);
 927              	.LM34:
 928 006e CCE7     	 b .L26
 929              	.L28:
 930              	 .align 2
 931              	.L27:
 932 0070 A0860100 	 .word 100000
 933              	.LBE6:
 942              	.Lscope8:
 944              	 .stabd 78,0,0
 945              	 .section .text._ZN4Cube4playESt6vectorIP5FrameSaIS2_EE,"ax",%progbits
 946              	 .align 2
 950              	 .global _ZN4Cube4playESt6vectorIP5FrameSaIS2_EE
 951              	 .code 16
 952              	 .thumb_func
 954              	_ZN4Cube4playESt6vectorIP5FrameSaIS2_EE:
 955              	 .stabd 46,0,0
  38:../cube/Cube.cpp **** }
  39:../cube/Cube.cpp **** 
  40:../cube/Cube.cpp **** void Cube::play(std::vector<Frame*> frames){
 957              	.LM35:
 958              	.LFBB9:
 959 0000 80B5     	 push {r7,lr}
 960 0002 84B0     	 sub sp,sp,#16
 961 0004 00AF     	 add r7,sp,#0
 962 0006 7860     	 str r0,[r7,#4]
 963 0008 3960     	 str r1,[r7]
 964              	.L32:
 965              	.LBB10:
 966              	.LBB11:
 967              	.LBB12:
  41:../cube/Cube.cpp **** 	while (1U) {
  42:../cube/Cube.cpp **** 		for(unsigned int i = 0; i < frames.size(); i++){
 969              	.LM36:
 970 000a 0023     	 mov r3,#0
 971 000c FB60     	 str r3,[r7,#12]
 972 000e 0FE0     	 b .L30
 973              	.L31:
  43:../cube/Cube.cpp **** 			play(frames[i]);
 975              	.LM37:
 976 0010 3A68     	 ldr r2,[r7]
 977 0012 FB68     	 ldr r3,[r7,#12]
 978 0014 101C     	 mov r0,r2
 979 0016 191C     	 mov r1,r3
 980 0018 FFF7FEFF 	 bl _ZNSt6vectorIP5FrameSaIS1_EEixEj
 981 001c 031C     	 mov r3,r0
 982 001e 1B68     	 ldr r3,[r3]
 983 0020 7A68     	 ldr r2,[r7,#4]
 984 0022 101C     	 mov r0,r2
 985 0024 191C     	 mov r1,r3
 986 0026 FFF7FEFF 	 bl _ZN4Cube4playEP5Frame
  42:../cube/Cube.cpp **** 			play(frames[i]);
 988              	.LM38:
 989 002a FB68     	 ldr r3,[r7,#12]
 990 002c 0133     	 add r3,r3,#1
 991 002e FB60     	 str r3,[r7,#12]
 992              	.L30:
  42:../cube/Cube.cpp **** 			play(frames[i]);
 994              	.LM39:
 995 0030 3B68     	 ldr r3,[r7]
 996 0032 181C     	 mov r0,r3
 997 0034 FFF7FEFF 	 bl _ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv
 998 0038 021C     	 mov r2,r0
 999 003a FB68     	 ldr r3,[r7,#12]
 1000 003c 9342     	 cmp r3,r2
 1001 003e 9B41     	 sbc r3,r3,r3
 1002 0040 5B42     	 neg r3,r3
 1003 0042 DBB2     	 uxtb r3,r3
 1004 0044 002B     	 cmp r3,#0
 1005 0046 E3D1     	 bne .L31
 1006              	.LBE12:
 1007              	.LBE11:
  44:../cube/Cube.cpp **** 		}
  45:../cube/Cube.cpp **** 	}
 1009              	.LM40:
 1010 0048 DFE7     	 b .L32
 1011              	.LBE10:
 1016              	.Lscope9:
 1018              	 .stabd 78,0,0
 1019 004a C046     	 .section .text._ZNSt6vectorIP5FloorSaIS1_EEC2Ev,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EEC5Ev,comdat
 1020              	 .align 2
 1023              	 .weak _ZNSt6vectorIP5FloorSaIS1_EEC2Ev
 1024              	 .code 16
 1025              	 .thumb_func
 1027              	_ZNSt6vectorIP5FloorSaIS1_EEC2Ev:
 1028              	 .stabd 46,0,0
 1030              	.Ltext4:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****  */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #include <initializer_list>
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** {
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     struct _Vector_base
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     {
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        	pointer;
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       struct _Vector_impl 
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : public _Tp_alloc_type
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	pointer _M_start;
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	pointer _M_finish;
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_Vector_impl()
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	{ }
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	{ }
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	{ }
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	{
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       };
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     public:
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Tp_alloc_type&
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const _Tp_alloc_type&
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       allocator_type
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base()
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl() { }
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl(__a) { }
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base(size_t __n)
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl()
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_create_storage(__n); }
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl(__a)
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_create_storage(__n); }
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl(__a)
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	else
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  {
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    _M_create_storage(__n);
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  }
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     public:
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Vector_impl _M_impl;
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       pointer
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_allocate(size_t __n)
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__p)
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     private:
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     };
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****   /**
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  individual elements in any order.
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  @ingroup sequences
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****   */
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     {
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Concept requirements.
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     public:
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef _Tp					 value_type;
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_iterator;
 234:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef size_t					 size_type;
 237:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 240:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     protected:
 241:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       using _Base::_M_allocate;
 242:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       using _Base::_M_deallocate;
 243:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       using _Base::_M_impl;
 244:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 246:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     public:
 247:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 250:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 251:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 253:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector()
 1032              	.LM41:
 1033              	.LFBB10:
 1034 0000 80B5     	 push {r7,lr}
 1035 0002 82B0     	 sub sp,sp,#8
 1036 0004 00AF     	 add r7,sp,#0
 1037 0006 7860     	 str r0,[r7,#4]
 1038              	.LBB13:
 254:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 255:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 257:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base() { }
 1040              	.LM42:
 1041 0008 7B68     	 ldr r3,[r7,#4]
 1042 000a 181C     	 mov r0,r3
 1043 000c FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev
 1044              	.LBE13:
 1045 0010 7B68     	 ldr r3,[r7,#4]
 1046 0012 181C     	 mov r0,r3
 1047 0014 BD46     	 mov sp,r7
 1048 0016 02B0     	 add sp,sp,#8
 1049              	 
 1050 0018 80BD     	 pop {r7,pc}
 1052              	.Lscope10:
 1054              	 .stabd 78,0,0
 1055              	 .weak _ZNSt6vectorIP5FloorSaIS1_EEC1Ev
 1056              	 .thumb_set _ZNSt6vectorIP5FloorSaIS1_EEC1Ev,_ZNSt6vectorIP5FloorSaIS1_EEC2Ev
 1057 001a C046     	 .section .text._ZNSt6vectorIP5FloorSaIS1_EED2Ev,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EED5Ev,comdat
 1058              	 .align 2
 1061              	 .weak _ZNSt6vectorIP5FloorSaIS1_EED2Ev
 1062              	 .code 16
 1063              	 .thumb_func
 1065              	_ZNSt6vectorIP5FloorSaIS1_EED2Ev:
 1066              	 .stabd 46,0,0
 258:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 259:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 260:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 262:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 263:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       explicit
 264:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__a) { }
 266:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 267:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 268:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 269:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __a  An allocator.
 272:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 273:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  constructed elements.
 275:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       explicit
 277:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__n, __a)
 279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 280:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 281:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 282:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 285:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __a  An allocator.
 286:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 287:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__n, __a)
 292:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 294:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 295:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 298:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __a  An allocator.
 299:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 300:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 302:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       explicit
 303:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 304:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__n, __a)
 306:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 307:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 308:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 309:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 310:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 313:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  but any extra memory in
 316:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 318:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(const vector& __x)
 319:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__x.size(),
 320:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { this->_M_impl._M_finish =
 322:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 324:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 325:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 326:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 327:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 328:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 329:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 330:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 332:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 335:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(vector&& __x) noexcept
 336:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(std::move(__x)) { }
 337:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 338:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 339:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 341:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { this->_M_impl._M_finish =
 342:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 344:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 345:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 346:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 347:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 348:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 352:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  {
 354:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 355:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 357:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 358:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    __rv.clear();
 359:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  }
 360:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 361:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 362:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 363:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 365:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __a  An allocator.
 366:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 367:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  initializer_list @a __l.
 369:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 370:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 373:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _Base(__a)
 376:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			    random_access_iterator_tag());
 379:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 380:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 381:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 382:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 383:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 385:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 386:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __a  An allocator.
 387:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 388:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  [first,last).
 390:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 391:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 398:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 399:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator,
 400:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	: _Base(__a)
 404:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 406:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
 407:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	: _Base(__a)
 410:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
 411:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
 415:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 416:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 417:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 418:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  responsibility.
 422:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 423:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 1068              	.LM43:
 1069              	.LFBB11:
 1070 0000 B0B5     	 push {r4,r5,r7,lr}
 1071 0002 82B0     	 sub sp,sp,#8
 1072 0004 00AF     	 add r7,sp,#0
 1073 0006 7860     	 str r0,[r7,#4]
 1074              	.LBB14:
 424:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 		      _M_get_Tp_allocator()); }
 1076              	.LM44:
 1077 0008 7B68     	 ldr r3,[r7,#4]
 1078 000a 1D68     	 ldr r5,[r3]
 1079 000c 7B68     	 ldr r3,[r7,#4]
 1080 000e 5C68     	 ldr r4,[r3,#4]
 1081 0010 7B68     	 ldr r3,[r7,#4]
 1082 0012 181C     	 mov r0,r3
 1083 0014 FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 1084 0018 031C     	 mov r3,r0
 424:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 1086              	.LM45:
 1087 001a 281C     	 mov r0,r5
 1088 001c 211C     	 mov r1,r4
 1089 001e 1A1C     	 mov r2,r3
 1090 0020 FFF7FEFF 	 bl _ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E
 1092              	.LM46:
 1093 0024 7B68     	 ldr r3,[r7,#4]
 1094 0026 181C     	 mov r0,r3
 1095 0028 FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev
 1096              	.LBE14:
 1097 002c 7B68     	 ldr r3,[r7,#4]
 1098 002e 181C     	 mov r0,r3
 1099 0030 BD46     	 mov sp,r7
 1100 0032 02B0     	 add sp,sp,#8
 1101              	 
 1102 0034 B0BD     	 pop {r4,r5,r7,pc}
 1104              	.Lscope11:
 1106              	 .stabd 78,0,0
 1107              	 .weak _ZNSt6vectorIP5FloorSaIS1_EED1Ev
 1108              	 .thumb_set _ZNSt6vectorIP5FloorSaIS1_EED1Ev,_ZNSt6vectorIP5FloorSaIS1_EED2Ev
 1109 0036 C046     	 .section .text._ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_,comdat
 1110              	 .align 2
 1114              	 .weak _ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_
 1115              	 .code 16
 1116              	 .thumb_func
 1118              	_ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_:
 1119              	 .stabd 46,0,0
 426:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 427:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 428:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 429:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 430:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 431:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 432:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 433:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 434:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 435:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector&
 436:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       operator=(const vector& __x);
 437:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 438:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 439:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 440:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 441:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 442:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 443:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 444:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  if the allocators permit it).
 445:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 446:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 447:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector&
 448:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 449:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 450:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         constexpr bool __move_storage =
 451:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 452:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 453:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_move_assign(std::move(__x),
 454:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****                        integral_constant<bool, __move_storage>());
 455:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return *this;
 456:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 457:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 458:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 459:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 460:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 461:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 462:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 463:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  initializer list @a __l.
 464:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 465:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 466:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 467:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 468:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 469:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       vector&
 470:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 471:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 472:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 473:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return *this;
 474:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 475:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 476:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 477:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 478:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 479:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 480:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 481:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 482:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 483:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 484:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 485:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 486:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 487:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 488:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 489:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 490:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 491:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 492:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 493:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 494:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 495:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 496:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 497:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  range [__first,__last).
 498:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 499:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 500:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 501:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 502:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 503:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 504:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator,
 505:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 506:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
 507:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 508:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 509:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 510:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
 511:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
 512:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 513:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
 514:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 515:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 516:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 517:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
 518:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 519:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 520:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 521:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 522:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 523:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 524:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 525:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 526:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  initializer list @a __l.
 527:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 528:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 529:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 530:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 531:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 532:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 533:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 534:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 535:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 536:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 537:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 538:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       using _Base::get_allocator;
 539:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 540:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // iterators
 541:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 542:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 543:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 544:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element order.
 545:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 546:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
 547:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 548:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 549:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 550:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 551:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 552:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 553:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element order.
 554:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 555:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_iterator
 556:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 557:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 558:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 559:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 560:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 561:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 562:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element order.
 563:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 564:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
 565:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 566:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 567:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 568:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 569:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 570:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 571:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  ordinary element order.
 572:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 573:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_iterator
 574:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 575:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 576:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 577:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 578:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 579:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 580:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element order.
 581:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 582:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reverse_iterator
 583:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 584:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 585:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 586:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 587:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 588:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 589:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  reverse element order.
 590:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 591:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reverse_iterator
 592:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 593:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 594:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 595:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 596:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 597:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 598:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  in reverse element order.
 599:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 600:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reverse_iterator
 601:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 602:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 603:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 604:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 605:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 606:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 607:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  is done in reverse element order.
 608:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 609:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reverse_iterator
 610:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 611:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 612:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 613:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 614:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 615:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 616:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 617:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element order.
 618:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 619:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_iterator
 620:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       cbegin() const noexcept
 621:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 622:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 623:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 624:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 625:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 626:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  ordinary element order.
 627:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 628:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_iterator
 629:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       cend() const noexcept
 630:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 631:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 632:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 633:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 635:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  reverse element order.
 636:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 637:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reverse_iterator
 638:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       crbegin() const noexcept
 639:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 640:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 641:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 642:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 643:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 644:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  is done in reverse element order.
 645:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 646:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reverse_iterator
 647:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       crend() const noexcept
 648:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 649:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 650:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 651:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // [23.2.4.2] capacity
 652:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 653:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       size_type
 654:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 655:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 656:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 657:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 658:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       size_type
 659:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 660:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 661:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 662:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 663:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 664:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 665:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 666:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 667:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 668:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 669:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 670:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  default constructed elements are appended.
 671:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 672:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 673:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       resize(size_type __new_size)
 674:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 675:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__new_size > size())
 676:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 677:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	else if (__new_size < size())
 678:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 679:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 680:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 681:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 682:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 683:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 684:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 685:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 686:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 687:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 688:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 689:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 690:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  given data.
 691:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 692:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 693:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 694:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 695:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__new_size > size())
 696:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 697:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	else if (__new_size < size())
 698:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 699:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 700:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 701:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 702:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 703:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 704:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 705:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 706:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 707:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 708:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 709:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 710:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  given data.
 711:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 712:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 713:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 714:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 715:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__new_size > size())
 716:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 717:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	else if (__new_size < size())
 718:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 719:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 720:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 721:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 722:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 723:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 724:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 725:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       shrink_to_fit()
 726:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 727:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 728:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 729:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 730:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 731:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 732:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 733:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       size_type
 734:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 735:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 736:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
 737:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 738:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 739:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 740:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  equal end().)
 741:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 742:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       bool
 743:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 744:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return begin() == end(); }
 745:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 746:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 747:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 748:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *          elements.
 749:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
 750:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 751:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 752:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
 753:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 754:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
 755:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  thrown.
 756:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 757:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 758:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
 759:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
 760:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 761:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  and copying of %vector data.
 762:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 763:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 764:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reserve(size_type __n);
 765:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 766:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // element access
 767:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 768:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 769:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 770:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  accessed.
 771:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  Read/write reference to data.
 772:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 773:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 774:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
 775:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 776:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  see at().)
 777:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 778:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reference
 779:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 780:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 781:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 782:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 783:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 784:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 785:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  accessed.
 786:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 787:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 788:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 789:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
 790:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 791:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  see at().)
 792:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 793:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reference
 794:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 795:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 796:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 797:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     protected:
 798:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /// Safety check used only from at().
 799:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 800:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_range_check(size_type __n) const
 801:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 802:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (__n >= this->size())
 803:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 804:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
 805:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				       "(which is %zu)"),
 806:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				   __n, this->size());
 807:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 808:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 809:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     public:
 810:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 811:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 812:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 813:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  accessed.
 814:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  Read/write reference to data.
 815:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 816:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 817:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
 818:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 819:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
 820:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 821:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reference
 822:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       at(size_type __n)
 823:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 824:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_M_range_check(__n);
 825:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return (*this)[__n]; 
 826:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 827:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 828:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 829:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 830:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 831:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  accessed.
 832:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 833:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 834:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 835:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
 836:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 837:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
 838:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 839:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reference
 840:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       at(size_type __n) const
 841:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 842:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_M_range_check(__n);
 843:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return (*this)[__n];
 844:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 845:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 846:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 847:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
 848:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element of the %vector.
 849:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 850:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reference
 851:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 852:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *begin(); }
 853:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 854:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 855:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 856:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element of the %vector.
 857:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 858:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reference
 859:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 860:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *begin(); }
 861:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 862:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 863:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
 864:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element of the %vector.
 865:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 866:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       reference
 867:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 868:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *(end() - 1); }
 869:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       
 870:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 871:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 872:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  last element of the %vector.
 873:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 874:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_reference
 875:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 876:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *(end() - 1); }
 877:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 878:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 879:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 880:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // data access
 881:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 882:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 883:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 884:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 885:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 886:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _Tp*
 887:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 888:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       pointer
 889:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 890:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 891:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 892:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 893:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 894:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const _Tp*
 895:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 896:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       const_pointer
 897:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 898:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 899:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 900:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 901:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // [23.2.4.3] modifiers
 902:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 903:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 904:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data to be added.
 905:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 906:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 907:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 908:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 909:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 910:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  available.
 911:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 912:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 913:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       push_back(const value_type& __x)
 1121              	.LM47:
 1122              	.LFBB12:
 1123 0000 80B5     	 push {r7,lr}
 1124 0002 82B0     	 sub sp,sp,#8
 1125 0004 00AF     	 add r7,sp,#0
 1126 0006 7860     	 str r0,[r7,#4]
 1127 0008 3960     	 str r1,[r7]
 914:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 915:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 1129              	.LM48:
 1130 000a 7B68     	 ldr r3,[r7,#4]
 1131 000c 5A68     	 ldr r2,[r3,#4]
 1132 000e 7B68     	 ldr r3,[r7,#4]
 1133 0010 9B68     	 ldr r3,[r3,#8]
 1134 0012 9A42     	 cmp r2,r3
 1135 0014 0ED0     	 beq .L40
 916:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  {
 917:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 918:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	                             __x);
 1137              	.LM49:
 1138 0016 7968     	 ldr r1,[r7,#4]
 1139 0018 7B68     	 ldr r3,[r7,#4]
 1140 001a 5A68     	 ldr r2,[r3,#4]
 917:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	                             __x);
 1142              	.LM50:
 1143 001c 3B68     	 ldr r3,[r7]
 1144 001e 081C     	 mov r0,r1
 1145 0020 111C     	 mov r1,r2
 1146 0022 1A1C     	 mov r2,r3
 1147 0024 FFF7FEFF 	 bl _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_
 919:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
 1149              	.LM51:
 1150 0028 7B68     	 ldr r3,[r7,#4]
 1151 002a 5B68     	 ldr r3,[r3,#4]
 1152 002c 1A1D     	 add r2,r3,#4
 1153 002e 7B68     	 ldr r3,[r7,#4]
 1154 0030 5A60     	 str r2,[r3,#4]
 1155 0032 0AE0     	 b .L39
 1156              	.L40:
 920:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  }
 921:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	else
 922:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 923:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_emplace_back_aux(__x);
 924:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 925:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_insert_aux(end(), __x);
 1158              	.LM52:
 1159 0034 7B68     	 ldr r3,[r7,#4]
 1160 0036 181C     	 mov r0,r3
 1161 0038 FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EE3endEv
 1162 003c 011C     	 mov r1,r0
 1163 003e 7A68     	 ldr r2,[r7,#4]
 1164 0040 3B68     	 ldr r3,[r7]
 1165 0042 101C     	 mov r0,r2
 1166 0044 1A1C     	 mov r2,r3
 1167 0046 FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
 1168              	.L39:
 926:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 927:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 1170              	.LM53:
 1171 004a BD46     	 mov sp,r7
 1172 004c 02B0     	 add sp,sp,#8
 1173              	 
 1174 004e 80BD     	 pop {r7,pc}
 1176              	.Lscope12:
 1178              	 .stabd 78,0,0
 1179              	 .section .text._ZNSt6vectorIP5FloorSaIS1_EEixEj,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EEixEj,comdat
 1180              	 .align 2
 1184              	 .weak _ZNSt6vectorIP5FloorSaIS1_EEixEj
 1185              	 .code 16
 1186              	 .thumb_func
 1188              	_ZNSt6vectorIP5FloorSaIS1_EEixEj:
 1189              	 .stabd 46,0,0
 779:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 1191              	.LM54:
 1192              	.LFBB13:
 1193 0000 80B5     	 push {r7,lr}
 1194 0002 82B0     	 sub sp,sp,#8
 1195 0004 00AF     	 add r7,sp,#0
 1196 0006 7860     	 str r0,[r7,#4]
 1197 0008 3960     	 str r1,[r7]
 780:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1199              	.LM55:
 1200 000a 7B68     	 ldr r3,[r7,#4]
 1201 000c 1A68     	 ldr r2,[r3]
 1202 000e 3B68     	 ldr r3,[r7]
 1203 0010 9B00     	 lsl r3,r3,#2
 1204 0012 D318     	 add r3,r2,r3
 1205 0014 181C     	 mov r0,r3
 1206 0016 BD46     	 mov sp,r7
 1207 0018 02B0     	 add sp,sp,#8
 1208              	 
 1209 001a 80BD     	 pop {r7,pc}
 1211              	.Lscope13:
 1213              	 .stabd 78,0,0
 1214              	 .section .text._ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv,"axG",%progbits,_ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv,comdat
 1215              	 .align 2
 1218              	 .weak _ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv
 1219              	 .code 16
 1220              	 .thumb_func
 1222              	_ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv:
 1223              	 .stabd 46,0,0
 654:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1225              	.LM56:
 1226              	.LFBB14:
 1227 0000 80B5     	 push {r7,lr}
 1228 0002 82B0     	 sub sp,sp,#8
 1229 0004 00AF     	 add r7,sp,#0
 1230 0006 7860     	 str r0,[r7,#4]
 655:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1232              	.LM57:
 1233 0008 7B68     	 ldr r3,[r7,#4]
 1234 000a 5B68     	 ldr r3,[r3,#4]
 1235 000c 1A1C     	 mov r2,r3
 1236 000e 7B68     	 ldr r3,[r7,#4]
 1237 0010 1B68     	 ldr r3,[r3]
 1238 0012 D31A     	 sub r3,r2,r3
 1239 0014 9B10     	 asr r3,r3,#2
 1240 0016 181C     	 mov r0,r3
 1241 0018 BD46     	 mov sp,r7
 1242 001a 02B0     	 add sp,sp,#8
 1243              	 
 1244 001c 80BD     	 pop {r7,pc}
 1246              	.Lscope14:
 1248              	 .stabd 78,0,0
 1249 001e C046     	 .section .text._ZNSt6vectorIP5FrameSaIS1_EEixEj,"axG",%progbits,_ZNSt6vectorIP5FrameSaIS1_EEixEj,comdat
 1250              	 .align 2
 1254              	 .weak _ZNSt6vectorIP5FrameSaIS1_EEixEj
 1255              	 .code 16
 1256              	 .thumb_func
 1258              	_ZNSt6vectorIP5FrameSaIS1_EEixEj:
 1259              	 .stabd 46,0,0
 779:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 1261              	.LM58:
 1262              	.LFBB15:
 1263 0000 80B5     	 push {r7,lr}
 1264 0002 82B0     	 sub sp,sp,#8
 1265 0004 00AF     	 add r7,sp,#0
 1266 0006 7860     	 str r0,[r7,#4]
 1267 0008 3960     	 str r1,[r7]
 780:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1269              	.LM59:
 1270 000a 7B68     	 ldr r3,[r7,#4]
 1271 000c 1A68     	 ldr r2,[r3]
 1272 000e 3B68     	 ldr r3,[r7]
 1273 0010 9B00     	 lsl r3,r3,#2
 1274 0012 D318     	 add r3,r2,r3
 1275 0014 181C     	 mov r0,r3
 1276 0016 BD46     	 mov sp,r7
 1277 0018 02B0     	 add sp,sp,#8
 1278              	 
 1279 001a 80BD     	 pop {r7,pc}
 1281              	.Lscope15:
 1283              	 .stabd 78,0,0
 1284              	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD5Ev,comdat
 1285              	 .align 2
 1288              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev
 1289              	 .code 16
 1290              	 .thumb_func
 1292              	_ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev:
 1293              	 .stabd 46,0,0
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : public _Tp_alloc_type
 1295              	.LM60:
 1296              	.LFBB16:
 1297 0000 80B5     	 push {r7,lr}
 1298 0002 82B0     	 sub sp,sp,#8
 1299 0004 00AF     	 add r7,sp,#0
 1300 0006 7860     	 str r0,[r7,#4]
 1301              	.LBB15:
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : public _Tp_alloc_type
 1303              	.LM61:
 1304 0008 7B68     	 ldr r3,[r7,#4]
 1305 000a 181C     	 mov r0,r3
 1306 000c FFF7FEFF 	 bl _ZNSaIP5FloorED2Ev
 1307              	.LBE15:
 1308 0010 7B68     	 ldr r3,[r7,#4]
 1309 0012 181C     	 mov r0,r3
 1310 0014 BD46     	 mov sp,r7
 1311 0016 02B0     	 add sp,sp,#8
 1312              	 
 1313 0018 80BD     	 pop {r7,pc}
 1315              	.Lscope16:
 1317              	 .stabd 78,0,0
 1318              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD1Ev
 1319              	 .thumb_set _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev
 1320 001a C046     	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EEC5Ev,comdat
 1321              	 .align 2
 1324              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev
 1325              	 .code 16
 1326              	 .thumb_func
 1328              	_ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev:
 1329              	 .stabd 46,0,0
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       : _M_impl() { }
 1331              	.LM62:
 1332              	.LFBB17:
 1333 0000 80B5     	 push {r7,lr}
 1334 0002 82B0     	 sub sp,sp,#8
 1335 0004 00AF     	 add r7,sp,#0
 1336 0006 7860     	 str r0,[r7,#4]
 1337              	.LBB16:
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1339              	.LM63:
 1340 0008 7B68     	 ldr r3,[r7,#4]
 1341 000a 181C     	 mov r0,r3
 1342 000c FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC1Ev
 1343              	.LBE16:
 1344 0010 7B68     	 ldr r3,[r7,#4]
 1345 0012 181C     	 mov r0,r3
 1346 0014 BD46     	 mov sp,r7
 1347 0016 02B0     	 add sp,sp,#8
 1348              	 
 1349 0018 80BD     	 pop {r7,pc}
 1351              	.Lscope17:
 1353              	 .stabd 78,0,0
 1354              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EEC1Ev
 1355              	 .thumb_set _ZNSt12_Vector_baseIP5FloorSaIS1_EEC1Ev,_ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev
 1356 001a C046     	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EED5Ev,comdat
 1357              	 .align 2
 1360              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev
 1361              	 .code 16
 1362              	 .thumb_func
 1364              	_ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev:
 1365              	 .stabd 46,0,0
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 1367              	.LM64:
 1368              	.LFBB18:
 1369 0000 90B5     	 push {r4,r7,lr}
 1370 0002 83B0     	 sub sp,sp,#12
 1371 0004 00AF     	 add r7,sp,#0
 1372 0006 7860     	 str r0,[r7,#4]
 1373              	.LBB17:
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1375              	.LM65:
 1376 0008 7B68     	 ldr r3,[r7,#4]
 1377 000a 1A68     	 ldr r2,[r3]
 1378 000c 7B68     	 ldr r3,[r7,#4]
 1379 000e 9B68     	 ldr r3,[r3,#8]
 1380 0010 191C     	 mov r1,r3
 1381 0012 7B68     	 ldr r3,[r7,#4]
 1382 0014 1B68     	 ldr r3,[r3]
 1383 0016 CB1A     	 sub r3,r1,r3
 1384 0018 9B10     	 asr r3,r3,#2
 1385 001a 1C1C     	 mov r4,r3
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 		      - this->_M_impl._M_start); }
 1387              	.LM66:
 1388 001c 7B68     	 ldr r3,[r7,#4]
 1389 001e 181C     	 mov r0,r3
 1390 0020 111C     	 mov r1,r2
 1391 0022 221C     	 mov r2,r4
 1392 0024 FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1394              	.LM67:
 1395 0028 7B68     	 ldr r3,[r7,#4]
 1396 002a 181C     	 mov r0,r3
 1397 002c FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD1Ev
 1398              	.LBE17:
 1399 0030 7B68     	 ldr r3,[r7,#4]
 1400 0032 181C     	 mov r0,r3
 1401 0034 BD46     	 mov sp,r7
 1402 0036 03B0     	 add sp,sp,#12
 1403              	 
 1404 0038 90BD     	 pop {r4,r7,pc}
 1406              	.Lscope18:
 1408              	 .stabd 78,0,0
 1409              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EED1Ev
 1410              	 .thumb_set _ZNSt12_Vector_baseIP5FloorSaIS1_EED1Ev,_ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev
 1411 003a C046     	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv,comdat
 1412              	 .align 2
 1415              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 1416              	 .code 16
 1417              	 .thumb_func
 1419              	_ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv:
 1420              	 .stabd 46,0,0
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 1422              	.LM68:
 1423              	.LFBB19:
 1424 0000 80B5     	 push {r7,lr}
 1425 0002 82B0     	 sub sp,sp,#8
 1426 0004 00AF     	 add r7,sp,#0
 1427 0006 7860     	 str r0,[r7,#4]
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1429              	.LM69:
 1430 0008 7B68     	 ldr r3,[r7,#4]
 1431 000a 181C     	 mov r0,r3
 1432 000c BD46     	 mov sp,r7
 1433 000e 02B0     	 add sp,sp,#8
 1434              	 
 1435 0010 80BD     	 pop {r7,pc}
 1437              	.Lscope19:
 1439              	 .stabd 78,0,0
 1440 0012 C046     	 .section .text._ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E,"axG",%progbits,_ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E,comdat
 1441              	 .align 2
 1445              	 .weak _ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E
 1446              	 .code 16
 1447              	 .thumb_func
 1449              	_ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E:
 1450              	 .stabd 46,0,0
 1452              	.Ltext5:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * representations about the suitability of this software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****  */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #include <new>
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #include <bits/move.h>
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #include <ext/alloc_traits.h>
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** {
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   /**
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * object's constructor with an initializer.
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    */
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #if __cplusplus >= 201103L
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<typename _T1, typename... _Args>
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     inline void
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #else
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<typename _T1, typename _T2>
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     inline void
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     }
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** #endif
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   /**
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    */
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<typename _Tp>
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     inline void
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     { __pointer->~_Tp(); }
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<bool>
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     struct _Destroy_aux
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       template<typename _ForwardIterator>
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****         static void
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	{
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	}
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     };
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<>
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     struct _Destroy_aux<true>
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       template<typename _ForwardIterator>
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****         static void
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     };
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   /**
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    */
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<typename _ForwardIterator>
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     inline void
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****                        _Value_type;
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	__destroy(__first, __last);
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     }
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   /**
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****    */
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     void
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	     _Allocator& __alloc)
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       for (; __first != __last; ++__first)
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     }
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     inline void
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1454              	.LM70:
 1455              	.LFBB20:
 1456 0000 80B5     	 push {r7,lr}
 1457 0002 84B0     	 sub sp,sp,#16
 1458 0004 00AF     	 add r7,sp,#0
 1459 0006 F860     	 str r0,[r7,#12]
 1460 0008 B960     	 str r1,[r7,#8]
 1461 000a 7A60     	 str r2,[r7,#4]
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	     allocator<_Tp>&)
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****       _Destroy(__first, __last);
 1463              	.LM71:
 1464 000c FA68     	 ldr r2,[r7,#12]
 1465 000e BB68     	 ldr r3,[r7,#8]
 1466 0010 101C     	 mov r0,r2
 1467 0012 191C     	 mov r1,r3
 1468 0014 FFF7FEFF 	 bl _ZSt8_DestroyIPP5FloorEvT_S3_
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     }
 1470              	.LM72:
 1471 0018 BD46     	 mov sp,r7
 1472 001a 04B0     	 add sp,sp,#16
 1473              	 
 1474 001c 80BD     	 pop {r7,pc}
 1476              	.Lscope20:
 1478              	 .stabd 78,0,0
 1479 001e C046     	 .section .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_,"axG",%progbits,_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_,comdat
 1480              	 .align 2
 1485              	 .weak _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_
 1486              	 .code 16
 1487              	 .thumb_func
 1489              	_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_:
 1490              	 .stabd 46,0,0
 1492              	.Ltext6:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // Copyright (C) 2011-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****  */
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** # include <bits/move.h>
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #else
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #endif
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** {
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Alloc>
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp>
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp>
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp>
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename> struct mt_allocator;
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp>
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename> struct new_allocator;
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp>
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename> struct pool_allocator;
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   template<typename _Tp>
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     : std::true_type { };
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #endif
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** /**
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****  * @ingroup allocators
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** */
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** template<typename _Alloc>
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   struct __alloc_traits
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #endif
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   {
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #if __cplusplus >= 201103L
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef value_type&                             reference;
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     using _Base_type::allocate;
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     using _Base_type::deallocate;
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     using _Base_type::construct;
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     using _Base_type::destroy;
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     using _Base_type::max_size;
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   private:
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     template<typename _Ptr>
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       using __is_custom_pointer
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****   public:
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       {
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       }
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     template<typename _Ptr>
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     {
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       using std::swap;
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       return !_S_propagate_on_swap()
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     }
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     template<typename _Tp>
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       struct rebind
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** #else
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static pointer
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return __a.allocate(__n); }
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { __a.deallocate(__p, __n); }
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     template<typename _Tp>
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       static void construct(_Alloc& __a, pointer __p, const _Tp& __arg)
 1494              	.LM73:
 1495              	.LFBB21:
 1496 0000 80B5     	 push {r7,lr}
 1497 0002 84B0     	 sub sp,sp,#16
 1498 0004 00AF     	 add r7,sp,#0
 1499 0006 F860     	 str r0,[r7,#12]
 1500 0008 B960     	 str r1,[r7,#8]
 1501 000a 7A60     	 str r2,[r7,#4]
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****       { __a.construct(__p, __arg); }
 1503              	.LM74:
 1504 000c F968     	 ldr r1,[r7,#12]
 1505 000e BA68     	 ldr r2,[r7,#8]
 1506 0010 7B68     	 ldr r3,[r7,#4]
 1507 0012 081C     	 mov r0,r1
 1508 0014 111C     	 mov r1,r2
 1509 0016 1A1C     	 mov r2,r3
 1510 0018 FFF7FEFF 	 bl _ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_
 1511 001c BD46     	 mov sp,r7
 1512 001e 04B0     	 add sp,sp,#16
 1513              	 
 1514 0020 80BD     	 pop {r7,pc}
 1516              	.Lscope21:
 1518              	 .stabd 78,0,0
 1519 0022 C046     	 .section .rodata
 1520              	 .align 2
 1521              	.LC2:
 1522 0000 76656374 	 .ascii "vector::_M_insert_aux\000"
 1522      6F723A3A 
 1522      5F4D5F69 
 1522      6E736572 
 1522      745F6175 
 1523 0016 0000     	 .section .text._ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_,comdat
 1524              	 .align 2
 1529              	 .weak _ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
 1530              	 .code 16
 1531              	 .thumb_func
 1533              	_ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_:
 1534              	 .stabd 46,0,0
 1536              	.Ltext7:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****  */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** {
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     void
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     reserve(size_type __n)
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (__n > this->max_size())
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (this->capacity() < __n)
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  const size_type __old_size = size();
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  pointer __tmp = _M_allocate_and_copy(__n,
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			_M_get_Tp_allocator());
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			- this->_M_impl._M_start);
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus >= 201103L
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     template<typename... _Args>
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       void
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       vector<_Tp, _Alloc>::
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       emplace_back(_Args&&... __args)
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       {
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  {
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  }
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	else
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       }
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus >= 201103L
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #else
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       const size_type __n = __position - begin();
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  && __position == end())
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish, __x);
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  ++this->_M_impl._M_finish;
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       else
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus >= 201103L
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  const auto __pos = begin() + (__position - cbegin());
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      _Tp __x_copy = __x;
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      _M_insert_aux(__pos, std::move(__x_copy));
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  else
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _M_insert_aux(__pos, __x);
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #else
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     _M_erase(iterator __position)
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (__position + 1 != end())
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       --this->_M_impl._M_finish;
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       return __position;
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (__first != __last)
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  if (__last != end())
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       return __first;
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (&__x != this)
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus >= 201103L
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	        {
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		  this->clear();
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				- this->_M_impl._M_start);
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		}
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  if (__xlen > capacity())
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 						   __x.end());
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  else if (size() >= __xlen)
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  else
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			this->_M_impl._M_start);
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       return *this;
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     void
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (__n > capacity())
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  __tmp.swap(*this);
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 233:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       else if (__n > size())
 234:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 235:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 236:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 237:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					__n - size(), __val,
 238:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					_M_get_Tp_allocator());
 239:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_finish += __n - size();
 240:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 241:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       else
 242:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 243:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
 244:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 245:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 246:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     template<typename _InputIterator>
 247:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       void
 248:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 249:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 250:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		    std::input_iterator_tag)
 251:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       {
 252:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 253:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 254:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	     ++__cur, ++__first)
 255:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  *__cur = *__first;
 256:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	if (__first == __last)
 257:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 258:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	else
 259:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  insert(end(), __first, __last);
 260:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       }
 261:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 262:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 263:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     template<typename _ForwardIterator>
 264:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       void
 265:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 266:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 267:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		    std::forward_iterator_tag)
 268:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       {
 269:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 270:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 271:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	if (__len > capacity())
 272:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  {
 273:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 274:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 275:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 277:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 280:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 281:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 282:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  }
 283:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	else if (size() >= __len)
 284:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 285:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	else
 286:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  {
 287:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 288:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    std::advance(__mid, size());
 289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 291:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 292:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 293:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 294:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  }
 295:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       }
 296:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 297:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus >= 201103L
 298:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 299:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     template<typename... _Args>
 300:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::iterator
 301:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 302:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       emplace(const_iterator __position, _Args&&... __args)
 303:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       {
 304:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	const size_type __n = __position - begin();
 305:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 306:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    && __position == end())
 307:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  {
 308:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 309:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 310:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 311:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  }
 312:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	else
 313:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_insert_aux(begin() + (__position - cbegin()),
 314:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			std::forward<_Args>(__args)...);
 315:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 316:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       }
 317:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 318:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 319:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     template<typename... _Args>
 320:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       void
 321:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 322:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Args&&... __args)
 323:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #else
 324:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 325:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     void
 326:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 1538              	.LM75:
 1539              	.LFBB22:
 1540 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1541 0002 8BB0     	 sub sp,sp,#44
 1542 0004 00AF     	 add r7,sp,#0
 1543 0006 F860     	 str r0,[r7,#12]
 1544 0008 B960     	 str r1,[r7,#8]
 1545 000a 7A60     	 str r2,[r7,#4]
 1546              	.LBB18:
 1547              	.LBB19:
 327:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 328:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 329:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     {
 330:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 1549              	.LM76:
 1550 000c FB68     	 ldr r3,[r7,#12]
 1551 000e 5A68     	 ldr r2,[r3,#4]
 1552 0010 FB68     	 ldr r3,[r7,#12]
 1553 0012 9B68     	 ldr r3,[r3,#8]
 1554 0014 9A42     	 cmp r2,r3
 1555 0016 2ED0     	 beq .L62
 1556              	.LBB20:
 331:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 332:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 333:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 334:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				                   - 1)));
 1558              	.LM77:
 1559 0018 F968     	 ldr r1,[r7,#12]
 1560 001a FB68     	 ldr r3,[r7,#12]
 1561 001c 5A68     	 ldr r2,[r3,#4]
 1562 001e FB68     	 ldr r3,[r7,#12]
 1563 0020 5B68     	 ldr r3,[r3,#4]
 1564 0022 043B     	 sub r3,r3,#4
 332:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 1566              	.LM78:
 1567 0024 081C     	 mov r0,r1
 1568 0026 111C     	 mov r1,r2
 1569 0028 1A1C     	 mov r2,r3
 1570 002a FFF7FEFF 	 bl _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_
 335:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  ++this->_M_impl._M_finish;
 1572              	.LM79:
 1573 002e FB68     	 ldr r3,[r7,#12]
 1574 0030 5B68     	 ldr r3,[r3,#4]
 1575 0032 1A1D     	 add r2,r3,#4
 1576 0034 FB68     	 ldr r3,[r7,#12]
 1577 0036 5A60     	 str r2,[r3,#4]
 336:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus < 201103L
 337:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _Tp __x_copy = __x;
 1579              	.LM80:
 1580 0038 7B68     	 ldr r3,[r7,#4]
 1581 003a 1B68     	 ldr r3,[r3]
 1582 003c 7B62     	 str r3,[r7,#36]
 338:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 339:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 1584              	.LM81:
 1585 003e 0823     	 mov r3,#8
 1586 0040 FB18     	 add r3,r7,r3
 1587 0042 181C     	 mov r0,r3
 1588 0044 FFF7FEFF 	 bl _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
 1589 0048 031C     	 mov r3,r0
 1590 004a 1968     	 ldr r1,[r3]
 1591 004c FB68     	 ldr r3,[r7,#12]
 1592 004e 5B68     	 ldr r3,[r3,#4]
 1593 0050 083B     	 sub r3,r3,#8
 1594 0052 1A1C     	 mov r2,r3
 1595 0054 FB68     	 ldr r3,[r7,#12]
 1596 0056 5B68     	 ldr r3,[r3,#4]
 1597 0058 043B     	 sub r3,r3,#4
 1598 005a 081C     	 mov r0,r1
 1599 005c 111C     	 mov r1,r2
 1600 005e 1A1C     	 mov r2,r3
 1601 0060 FFF7FEFF 	 bl _ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_
 340:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				  this->_M_impl._M_finish - 2,
 341:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				  this->_M_impl._M_finish - 1);
 342:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus < 201103L
 343:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  *__position = __x_copy;
 1603              	.LM82:
 1604 0064 0823     	 mov r3,#8
 1605 0066 FB18     	 add r3,r7,r3
 1606 0068 181C     	 mov r0,r3
 1607 006a FFF7FEFF 	 bl _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv
 1608 006e 031C     	 mov r3,r0
 1609 0070 7A6A     	 ldr r2,[r7,#36]
 1610 0072 1A60     	 str r2,[r3]
 1611              	.LBE20:
 1612 0074 89E0     	 b .L61
 1613              	.L62:
 1614              	.LBB21:
 344:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #else
 345:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  *__position = _Tp(std::forward<_Args>(__args)...);
 346:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 347:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 348:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****       else
 349:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	{
 350:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  const size_type __len =
 351:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    _M_check_len(size_type(1), "vector::_M_insert_aux");
 1616              	.LM83:
 1617 0076 FA68     	 ldr r2,[r7,#12]
 1618 0078 454B     	 ldr r3,.L64
 1619 007a 101C     	 mov r0,r2
 1620 007c 0121     	 mov r1,#1
 1621 007e 1A1C     	 mov r2,r3
 1622 0080 FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc
 1623 0084 031C     	 mov r3,r0
 1624 0086 3B62     	 str r3,[r7,#32]
 352:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  const size_type __elems_before = __position - begin();
 1626              	.LM84:
 1627 0088 FB68     	 ldr r3,[r7,#12]
 1628 008a 181C     	 mov r0,r3
 1629 008c FFF7FEFF 	 bl _ZNSt6vectorIP5FloorSaIS1_EE5beginEv
 1630 0090 031C     	 mov r3,r0
 1631 0092 3B61     	 str r3,[r7,#16]
 1632 0094 0823     	 mov r3,#8
 1633 0096 FA18     	 add r2,r7,r3
 1634 0098 1023     	 mov r3,#16
 1635 009a FB18     	 add r3,r7,r3
 1636 009c 101C     	 mov r0,r2
 1637 009e 191C     	 mov r1,r3
 1638 00a0 FFF7FEFF 	 bl _ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
 1639 00a4 031C     	 mov r3,r0
 1640 00a6 FB61     	 str r3,[r7,#28]
 353:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  pointer __new_start(this->_M_allocate(__len));
 1642              	.LM85:
 1643 00a8 FA68     	 ldr r2,[r7,#12]
 1644 00aa 3B6A     	 ldr r3,[r7,#32]
 1645 00ac 101C     	 mov r0,r2
 1646 00ae 191C     	 mov r1,r3
 1647 00b0 FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj
 1648 00b4 031C     	 mov r3,r0
 1649 00b6 BB61     	 str r3,[r7,#24]
 354:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  pointer __new_finish(__new_start);
 1651              	.LM86:
 1652 00b8 BB69     	 ldr r3,[r7,#24]
 1653 00ba 7B61     	 str r3,[r7,#20]
 355:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  __try
 356:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 357:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      // The order of the three operations is dictated by the C++0x
 358:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      // case, where the moves could alter a new element belonging
 359:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      // to the existing vector.  This is an issue only for callers
 360:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      // taking the element by const lvalue ref (see 23.1/13).
 361:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl,
 362:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		                       __new_start + __elems_before,
 363:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #if __cplusplus >= 201103L
 364:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 365:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #else
 366:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	                               __x);
 1655              	.LM87:
 1656 00bc F968     	 ldr r1,[r7,#12]
 1657 00be FB69     	 ldr r3,[r7,#28]
 1658 00c0 9B00     	 lsl r3,r3,#2
 1659 00c2 BA69     	 ldr r2,[r7,#24]
 1660 00c4 D218     	 add r2,r2,r3
 361:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		                       __new_start + __elems_before,
 1662              	.LM88:
 1663 00c6 7B68     	 ldr r3,[r7,#4]
 1664 00c8 081C     	 mov r0,r1
 1665 00ca 111C     	 mov r1,r2
 1666 00cc 1A1C     	 mov r2,r3
 1667 00ce FFF7FEFF 	 bl _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_
 367:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** #endif
 368:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      __new_finish = 0;
 1669              	.LM89:
 1670 00d2 0023     	 mov r3,#0
 1671 00d4 7B61     	 str r3,[r7,#20]
 369:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 370:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      __new_finish
 371:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 372:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		(this->_M_impl._M_start, __position.base(),
 373:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 1673              	.LM90:
 1674 00d6 FB68     	 ldr r3,[r7,#12]
 1675 00d8 1D68     	 ldr r5,[r3]
 1676 00da 0823     	 mov r3,#8
 1677 00dc FB18     	 add r3,r7,r3
 1678 00de 181C     	 mov r0,r3
 1679 00e0 FFF7FEFF 	 bl _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
 1680 00e4 031C     	 mov r3,r0
 1681 00e6 1C68     	 ldr r4,[r3]
 1682 00e8 FB68     	 ldr r3,[r7,#12]
 1683 00ea 181C     	 mov r0,r3
 1684 00ec FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 1685 00f0 061C     	 mov r6,r0
 370:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1687              	.LM91:
 1688 00f2 BB69     	 ldr r3,[r7,#24]
 1689 00f4 281C     	 mov r0,r5
 1690 00f6 211C     	 mov r1,r4
 1691 00f8 1A1C     	 mov r2,r3
 1692 00fa 331C     	 mov r3,r6
 1693 00fc FFF7FEFF 	 bl _ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_
 1694 0100 031C     	 mov r3,r0
 1695 0102 7B61     	 str r3,[r7,#20]
 374:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 375:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      ++__new_finish;
 1697              	.LM92:
 1698 0104 7B69     	 ldr r3,[r7,#20]
 1699 0106 0433     	 add r3,r3,#4
 1700 0108 7B61     	 str r3,[r7,#20]
 376:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 
 377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      __new_finish
 378:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 379:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		(__position.base(), this->_M_impl._M_finish,
 380:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 1702              	.LM93:
 1703 010a 0823     	 mov r3,#8
 1704 010c FB18     	 add r3,r7,r3
 1705 010e 181C     	 mov r0,r3
 1706 0110 FFF7FEFF 	 bl _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
 1707 0114 031C     	 mov r3,r0
 1708 0116 1D68     	 ldr r5,[r3]
 1709 0118 FB68     	 ldr r3,[r7,#12]
 1710 011a 5C68     	 ldr r4,[r3,#4]
 1711 011c FB68     	 ldr r3,[r7,#12]
 1712 011e 181C     	 mov r0,r3
 1713 0120 FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 1714 0124 061C     	 mov r6,r0
 377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1716              	.LM94:
 1717 0126 7B69     	 ldr r3,[r7,#20]
 1718 0128 281C     	 mov r0,r5
 1719 012a 211C     	 mov r1,r4
 1720 012c 1A1C     	 mov r2,r3
 1721 012e 331C     	 mov r3,r6
 1722 0130 FFF7FEFF 	 bl _ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_
 1723 0134 031C     	 mov r3,r0
 1724 0136 7B61     	 str r3,[r7,#20]
 381:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 382:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****           __catch(...)
 383:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    {
 384:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      if (!__new_finish)
 385:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		_Alloc_traits::destroy(this->_M_impl,
 386:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		                       __new_start + __elems_before);
 387:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      else
 388:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 		std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 389:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      _M_deallocate(__new_start, __len);
 390:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	      __throw_exception_again;
 391:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	    }
 392:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 393:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			_M_get_Tp_allocator());
 1726              	.LM95:
 1727 0138 FB68     	 ldr r3,[r7,#12]
 1728 013a 1D68     	 ldr r5,[r3]
 1729 013c FB68     	 ldr r3,[r7,#12]
 1730 013e 5C68     	 ldr r4,[r3,#4]
 1731 0140 FB68     	 ldr r3,[r7,#12]
 1732 0142 181C     	 mov r0,r3
 1733 0144 FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 1734 0148 031C     	 mov r3,r0
 392:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			_M_get_Tp_allocator());
 1736              	.LM96:
 1737 014a 281C     	 mov r0,r5
 1738 014c 211C     	 mov r1,r4
 1739 014e 1A1C     	 mov r2,r3
 1740 0150 FFF7FEFF 	 bl _ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E
 394:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
 395:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
 396:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 			- this->_M_impl._M_start);
 1742              	.LM97:
 1743 0154 F968     	 ldr r1,[r7,#12]
 1744 0156 FB68     	 ldr r3,[r7,#12]
 1745 0158 1A68     	 ldr r2,[r3]
 1746 015a FB68     	 ldr r3,[r7,#12]
 1747 015c 9B68     	 ldr r3,[r3,#8]
 1748 015e 181C     	 mov r0,r3
 1749 0160 FB68     	 ldr r3,[r7,#12]
 1750 0162 1B68     	 ldr r3,[r3]
 1751 0164 C31A     	 sub r3,r0,r3
 1752 0166 9B10     	 asr r3,r3,#2
 394:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
 1754              	.LM98:
 1755 0168 081C     	 mov r0,r1
 1756 016a 111C     	 mov r1,r2
 1757 016c 1A1C     	 mov r2,r3
 1758 016e FFF7FEFF 	 bl _ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j
 397:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 1760              	.LM99:
 1761 0172 FB68     	 ldr r3,[r7,#12]
 1762 0174 BA69     	 ldr r2,[r7,#24]
 1763 0176 1A60     	 str r2,[r3]
 398:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_finish = __new_finish;
 1765              	.LM100:
 1766 0178 FB68     	 ldr r3,[r7,#12]
 1767 017a 7A69     	 ldr r2,[r7,#20]
 1768 017c 5A60     	 str r2,[r3,#4]
 399:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = __new_start + __len;
 1770              	.LM101:
 1771 017e 3B6A     	 ldr r3,[r7,#32]
 1772 0180 9B00     	 lsl r3,r3,#2
 1773 0182 BA69     	 ldr r2,[r7,#24]
 1774 0184 D218     	 add r2,r2,r3
 1775 0186 FB68     	 ldr r3,[r7,#12]
 1776 0188 9A60     	 str r2,[r3,#8]
 1777              	.L61:
 1778              	.LBE21:
 1779              	.LBE19:
 1780              	.LBE18:
 400:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc **** 	}
 401:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\vector.tcc ****     }
 1782              	.LM102:
 1783 018a BD46     	 mov sp,r7
 1784 018c 0BB0     	 add sp,sp,#44
 1785              	 
 1786 018e F0BD     	 pop {r4,r5,r6,r7,pc}
 1787              	.L65:
 1788              	 .align 2
 1789              	.L64:
 1790 0190 00000000 	 .word .LC2
 1801              	.Lscope22:
 1803              	 .stabd 78,0,0
 1804              	 .section .text._ZNSt6vectorIP5FloorSaIS1_EE3endEv,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EE3endEv,comdat
 1805              	 .align 2
 1808              	 .weak _ZNSt6vectorIP5FloorSaIS1_EE3endEv
 1809              	 .code 16
 1810              	 .thumb_func
 1812              	_ZNSt6vectorIP5FloorSaIS1_EE3endEv:
 1813              	 .stabd 46,0,0
 1815              	.Ltext8:
 565:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1817              	.LM103:
 1818              	.LFBB23:
 1819 0000 80B5     	 push {r7,lr}
 1820 0002 84B0     	 sub sp,sp,#16
 1821 0004 00AF     	 add r7,sp,#0
 1822 0006 7860     	 str r0,[r7,#4]
 566:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1824              	.LM104:
 1825 0008 7B68     	 ldr r3,[r7,#4]
 1826 000a 0433     	 add r3,r3,#4
 1827 000c 0C22     	 mov r2,#12
 1828 000e BA18     	 add r2,r7,r2
 1829 0010 101C     	 mov r0,r2
 1830 0012 191C     	 mov r1,r3
 1831 0014 FFF7FEFF 	 bl _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC1ERKS3_
 1832 0018 FB68     	 ldr r3,[r7,#12]
 1833 001a 181C     	 mov r0,r3
 1834 001c BD46     	 mov sp,r7
 1835 001e 04B0     	 add sp,sp,#16
 1836              	 
 1837 0020 80BD     	 pop {r7,pc}
 1839              	.Lscope23:
 1841              	 .stabd 78,0,0
 1842 0022 C046     	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC5Ev,comdat
 1843              	 .align 2
 1846              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev
 1847              	 .code 16
 1848              	 .thumb_func
 1850              	_ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev:
 1851              	 .stabd 46,0,0
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 1853              	.LM105:
 1854              	.LFBB24:
 1855 0000 80B5     	 push {r7,lr}
 1856 0002 82B0     	 sub sp,sp,#8
 1857 0004 00AF     	 add r7,sp,#0
 1858 0006 7860     	 str r0,[r7,#4]
 1859              	.LBB22:
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	{ }
 1861              	.LM106:
 1862 0008 7B68     	 ldr r3,[r7,#4]
 1863 000a 181C     	 mov r0,r3
 1864 000c FFF7FEFF 	 bl _ZNSaIP5FloorEC2Ev
 1865 0010 7B68     	 ldr r3,[r7,#4]
 1866 0012 0022     	 mov r2,#0
 1867 0014 1A60     	 str r2,[r3]
 1868 0016 7B68     	 ldr r3,[r7,#4]
 1869 0018 0022     	 mov r2,#0
 1870 001a 5A60     	 str r2,[r3,#4]
 1871 001c 7B68     	 ldr r3,[r7,#4]
 1872 001e 0022     	 mov r2,#0
 1873 0020 9A60     	 str r2,[r3,#8]
 1874              	.LBE22:
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1876              	.LM107:
 1877 0022 7B68     	 ldr r3,[r7,#4]
 1878 0024 181C     	 mov r0,r3
 1879 0026 BD46     	 mov sp,r7
 1880 0028 02B0     	 add sp,sp,#8
 1881              	 
 1882 002a 80BD     	 pop {r7,pc}
 1884              	.Lscope24:
 1886              	 .stabd 78,0,0
 1887              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC1Ev
 1888              	 .thumb_set _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev
 1889              	 .section .text._ZNSaIP5FloorED2Ev,"axG",%progbits,_ZNSaIP5FloorED5Ev,comdat
 1890              	 .align 2
 1893              	 .weak _ZNSaIP5FloorED2Ev
 1894              	 .code 16
 1895              	 .thumb_func
 1897              	_ZNSaIP5FloorED2Ev:
 1898              	 .stabd 46,0,0
 1900              	.Ltext9:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  *
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  */
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****  */
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #include <type_traits>
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #endif
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** {
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****   /**
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *  @addtogroup allocators
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *  @{
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    */
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****   /// allocator<void> specialization.
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****   template<>
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****     class allocator<void>
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****     {
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****     public:
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef size_t      size_type;
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef void*       pointer;
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef const void* const_pointer;
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef void        value_type;
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       template<typename _Tp1>
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****         struct rebind
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****         { typedef allocator<_Tp1> other; };
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #if __cplusplus >= 201103L
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #endif
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****     };
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****   /**
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *  for further details.
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    */
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****   template<typename _Tp>
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****     {
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****    public:
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef size_t     size_type;
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef _Tp*       pointer;
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef const _Tp* const_pointer;
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef _Tp&       reference;
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef const _Tp& const_reference;
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef _Tp        value_type;
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       template<typename _Tp1>
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****         struct rebind
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****         { typedef allocator<_Tp1> other; };
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #if __cplusplus >= 201103L
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** #endif
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       allocator() throw() { }
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       allocator(const allocator& __a) throw()
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       template<typename _Tp1>
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h ****       ~allocator() throw() { }
 1902              	.LM108:
 1903              	.LFBB25:
 1904 0000 80B5     	 push {r7,lr}
 1905 0002 82B0     	 sub sp,sp,#8
 1906 0004 00AF     	 add r7,sp,#0
 1907 0006 7860     	 str r0,[r7,#4]
 1908              	.LBB23:
 1910              	.LM109:
 1911 0008 7B68     	 ldr r3,[r7,#4]
 1912 000a 181C     	 mov r0,r3
 1913 000c FFF7FEFF 	 bl _ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev
 1914              	.LBE23:
 1915 0010 7B68     	 ldr r3,[r7,#4]
 1916 0012 181C     	 mov r0,r3
 1917 0014 BD46     	 mov sp,r7
 1918 0016 02B0     	 add sp,sp,#8
 1919              	 
 1920 0018 80BD     	 pop {r7,pc}
 1922              	.Lscope25:
 1924              	 .stabd 78,0,0
 1925              	 .weak _ZNSaIP5FloorED1Ev
 1926              	 .thumb_set _ZNSaIP5FloorED1Ev,_ZNSaIP5FloorED2Ev
 1927 001a C046     	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j,comdat
 1928              	 .align 2
 1933              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j
 1934              	 .code 16
 1935              	 .thumb_func
 1937              	_ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j:
 1938              	 .stabd 46,0,0
 1940              	.Ltext10:
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 1942              	.LM110:
 1943              	.LFBB26:
 1944 0000 80B5     	 push {r7,lr}
 1945 0002 84B0     	 sub sp,sp,#16
 1946 0004 00AF     	 add r7,sp,#0
 1947 0006 F860     	 str r0,[r7,#12]
 1948 0008 B960     	 str r1,[r7,#8]
 1949 000a 7A60     	 str r2,[r7,#4]
 1950              	.LBB24:
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1952              	.LM111:
 1953 000c BB68     	 ldr r3,[r7,#8]
 1954 000e 002B     	 cmp r3,#0
 1955 0010 07D0     	 beq .L74
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 1957              	.LM112:
 1958 0012 F968     	 ldr r1,[r7,#12]
 1959 0014 BA68     	 ldr r2,[r7,#8]
 1960 0016 7B68     	 ldr r3,[r7,#4]
 1961 0018 081C     	 mov r0,r1
 1962 001a 111C     	 mov r1,r2
 1963 001c 1A1C     	 mov r2,r3
 1964 001e FFF7FEFF 	 bl _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j
 1965              	.L74:
 1966              	.LBE24:
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 1968              	.LM113:
 1969 0022 BD46     	 mov sp,r7
 1970 0024 04B0     	 add sp,sp,#16
 1971              	 
 1972 0026 80BD     	 pop {r7,pc}
 1974              	.Lscope26:
 1976              	 .stabd 78,0,0
 1977              	 .section .text._ZSt8_DestroyIPP5FloorEvT_S3_,"axG",%progbits,_ZSt8_DestroyIPP5FloorEvT_S3_,comdat
 1978              	 .align 2
 1982              	 .weak _ZSt8_DestroyIPP5FloorEvT_S3_
 1983              	 .code 16
 1984              	 .thumb_func
 1986              	_ZSt8_DestroyIPP5FloorEvT_S3_:
 1987              	 .stabd 46,0,0
 1989              	.Ltext11:
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     {
 1991              	.LM114:
 1992              	.LFBB27:
 1993 0000 80B5     	 push {r7,lr}
 1994 0002 82B0     	 sub sp,sp,#8
 1995 0004 00AF     	 add r7,sp,#0
 1996 0006 7860     	 str r0,[r7,#4]
 1997 0008 3960     	 str r1,[r7]
 1998              	.LBB25:
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 	__destroy(__first, __last);
 2000              	.LM115:
 2001 000a 7A68     	 ldr r2,[r7,#4]
 2002 000c 3B68     	 ldr r3,[r7]
 2003 000e 101C     	 mov r0,r2
 2004 0010 191C     	 mov r1,r3
 2005 0012 FFF7FEFF 	 bl _ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_
 2006              	.LBE25:
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h **** 
 2008              	.LM116:
 2009 0016 BD46     	 mov sp,r7
 2010 0018 02B0     	 add sp,sp,#8
 2011              	 
 2012 001a 80BD     	 pop {r7,pc}
 2014              	.Lscope27:
 2016              	 .stabd 78,0,0
 2017              	 .section .text._ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_,comdat
 2018              	 .align 2
 2023              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_
 2024              	 .code 16
 2025              	 .thumb_func
 2027              	_ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_:
 2028              	 .stabd 46,0,0
 2030              	.Ltext12:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****  */
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #include <new>
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #include <type_traits>
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #endif
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** {
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****   using std::size_t;
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****   using std::ptrdiff_t;
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****   /**
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *  @ingroup allocators
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *    - all allocation calls operator new
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****    */
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****   template<typename _Tp>
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****     class new_allocator
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****     {
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****     public:
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef size_t     size_type;
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef _Tp*       pointer;
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef _Tp&       reference;
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef _Tp        value_type;
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       template<typename _Tp1>
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         struct rebind
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #if __cplusplus >= 201103L
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #endif
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       template<typename _Tp1>
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       pointer
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { return std::__addressof(__x); }
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       const_pointer
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { return std::__addressof(__x); }
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // about what the return value is when __n == 0.
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       pointer
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { 
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 	if (__n > this->max_size())
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       }
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       void
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       deallocate(pointer __p, size_type)
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { ::operator delete(__p); }
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       size_type
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #if __cplusplus >= 201103L
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         void
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       template<typename _Up>
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         void 
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****         destroy(_Up* __p) { __p->~_Up(); }
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** #else
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       // 402. wrong new expression in [some_] allocator::construct
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       void 
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       construct(pointer __p, const _Tp& __val) 
 2032              	.LM117:
 2033              	.LFBB28:
 2034 0000 80B5     	 push {r7,lr}
 2035 0002 84B0     	 sub sp,sp,#16
 2036 0004 00AF     	 add r7,sp,#0
 2037 0006 F860     	 str r0,[r7,#12]
 2038 0008 B960     	 str r1,[r7,#8]
 2039 000a 7A60     	 str r2,[r7,#4]
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { ::new((void *)__p) _Tp(__val); }
 2041              	.LM118:
 2042 000c BB68     	 ldr r3,[r7,#8]
 2043 000e 0420     	 mov r0,#4
 2044 0010 191C     	 mov r1,r3
 2045 0012 FFF7FEFF 	 bl _ZnwjPv
 2046 0016 031E     	 sub r3,r0,#0
 2047 0018 02D0     	 beq .L77
 2049              	.LM119:
 2050 001a 7A68     	 ldr r2,[r7,#4]
 2051 001c 1268     	 ldr r2,[r2]
 2052 001e 1A60     	 str r2,[r3]
 2053              	.L77:
 2055              	.LM120:
 2056 0020 BD46     	 mov sp,r7
 2057 0022 04B0     	 add sp,sp,#16
 2058              	 
 2059 0024 80BD     	 pop {r7,pc}
 2061              	.Lscope28:
 2063              	 .stabd 78,0,0
 2064 0026 C046     	 .section .text._ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv,"axG",%progbits,_ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv,comdat
 2065              	 .align 2
 2068              	 .weak _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
 2069              	 .code 16
 2070              	 .thumb_func
 2072              	_ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv:
 2073              	 .stabd 46,0,0
 2075              	.Ltext13:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****  */
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** {
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    * @addtogroup iterators
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    * @{
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    */
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @code
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @endcode
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     class reverse_iterator
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     {
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     protected:
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       _Iterator current;
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     public:
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       explicit
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The copy constructor is normal.
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       : current(__x.current) { }
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       template<typename _Iter>
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	: current(__x.base()) { }
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       iterator_type
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       base() const
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return current; }
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reference
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator*() const
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *--__tmp;
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       pointer
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator->() const
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return &(operator*()); }
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  @c *this
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator&
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++()
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	--current;
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++(int)
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	--current;
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return __tmp;
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  @c *this
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator&
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator--()
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	++current;
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator--(int)
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	++current;
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return __tmp;
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator+(difference_type __n) const
 233:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 234:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 235:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 236:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  *this
 237:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 238:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 239:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 240:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 241:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator&
 242:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator+=(difference_type __n)
 243:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 244:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	current -= __n;
 245:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 246:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 247:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 248:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 249:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 251:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 253:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator
 254:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator-(difference_type __n) const
 255:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 256:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 257:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 258:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  *this
 259:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 260:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 261:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 263:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reverse_iterator&
 264:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator-=(difference_type __n)
 265:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 266:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	current += __n;
 267:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 268:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 269:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 270:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 271:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 272:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 273:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 275:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reference
 276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator[](difference_type __n) const
 277:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *(*this + __n); }
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     };
 279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 280:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   //@{
 281:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 282:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 283:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 284:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @return  A simple bool.
 285:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 286:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 287:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 288:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 291:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 292:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 293:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 294:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 295:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 296:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 297:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 298:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 299:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 300:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 301:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 302:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 303:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 304:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 305:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 306:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return !(__x == __y); }
 307:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 308:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 309:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 310:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 311:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 312:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __y < __x; }
 313:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 314:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 315:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 316:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 317:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 318:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return !(__y < __x); }
 319:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 320:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 321:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 322:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 323:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 324:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return !(__x < __y); }
 325:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 326:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 327:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 328:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 329:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 330:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 331:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 332:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator>
 333:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline reverse_iterator<_Iterator>
 334:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 335:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 336:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 337:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 338:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 339:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 340:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 341:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 342:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 343:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 344:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 345:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 346:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 347:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 348:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 349:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 350:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 351:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 352:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 353:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 354:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 355:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 356:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return !(__x == __y); }
 357:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 358:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 359:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 360:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 361:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 362:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __y < __x; }
 363:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 364:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 365:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 366:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 367:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 368:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return !(__y < __x); }
 369:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 370:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 371:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 372:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 373:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 374:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return !(__x < __y); }
 375:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 376:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 378:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     // DR 685.
 379:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline auto
 380:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 381:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 382:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 383:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #else
 384:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 385:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 386:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 387:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #endif
 388:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 389:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   //@}
 390:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 391:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 392:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 393:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 394:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 395:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 396:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 397:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  push_back.
 398:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 399:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 400:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  save typing.
 401:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 402:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Container>
 403:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     class back_insert_iterator
 404:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 405:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     {
 406:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     protected:
 407:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       _Container* container;
 408:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 409:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     public:
 410:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 411:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef _Container          container_type;
 412:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 413:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 414:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       explicit
 415:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x) : container(&__x) { }
 416:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 417:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 418:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 419:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 420:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 421:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 422:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 423:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 424:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 425:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 426:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 427:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 428:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #if __cplusplus < 201103L
 429:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator&
 430:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 431:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 432:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	container->push_back(__value);
 433:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 434:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 435:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #else
 436:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator&
 437:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 438:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 439:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	container->push_back(__value);
 440:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 441:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 442:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 443:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator&
 444:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 445:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 446:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 447:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 448:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 449:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #endif
 450:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 451:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.
 452:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator&
 453:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator*()
 454:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 455:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 456:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 457:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator&
 458:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++()
 459:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 460:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 461:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 462:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       back_insert_iterator
 463:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++(int)
 464:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 465:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     };
 466:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 467:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 468:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 469:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 470:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 471:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 472:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 473:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 474:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 475:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 476:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  types for you.
 477:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 478:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Container>
 479:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 480:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 481:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 482:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 483:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 484:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 485:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 486:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 487:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 488:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  push_front.
 489:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 490:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 491:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  save typing.
 492:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 493:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Container>
 494:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     class front_insert_iterator
 495:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 496:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     {
 497:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     protected:
 498:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       _Container* container;
 499:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 500:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     public:
 501:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 502:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef _Container          container_type;
 503:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 504:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 505:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       explicit front_insert_iterator(_Container& __x) : container(&__x) { }
 506:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 507:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 508:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 509:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 510:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 511:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 512:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 513:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 514:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 515:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 516:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 517:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 518:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #if __cplusplus < 201103L
 519:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       front_insert_iterator&
 520:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 521:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 522:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	container->push_front(__value);
 523:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 524:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 525:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #else
 526:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       front_insert_iterator&
 527:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 528:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 529:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	container->push_front(__value);
 530:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 531:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 532:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 533:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       front_insert_iterator&
 534:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 535:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 536:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 537:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 538:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 539:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #endif
 540:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 541:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.
 542:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       front_insert_iterator&
 543:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator*()
 544:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 545:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 546:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 547:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       front_insert_iterator&
 548:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++()
 549:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 550:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 551:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 552:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       front_insert_iterator
 553:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++(int)
 554:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 555:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     };
 556:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 557:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 558:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 559:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 560:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 561:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 562:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 563:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 564:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 565:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 566:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  types for you.
 567:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 568:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Container>
 569:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 570:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 571:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 572:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 573:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 574:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 575:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 576:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 577:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 578:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 579:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  position.
 580:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 581:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 582:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  %iterator's position.)
 583:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 584:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 585:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  save typing.
 586:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 587:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Container>
 588:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     class insert_iterator
 589:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 590:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     {
 591:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     protected:
 592:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       _Container* container;
 593:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typename _Container::iterator iter;
 594:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 595:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     public:
 596:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 597:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef _Container          container_type;
 598:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 599:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 600:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 601:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 602:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 603:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 604:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       : container(&__x), iter(__i) {}
 605:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 606:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /**
 607:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 608:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 609:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 610:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 611:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 612:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 613:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 614:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 615:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 616:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 617:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 618:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @code
 619:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *     // vector v contains A and Z
 620:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 621:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 622:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *     i = 1;
 623:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *     i = 2;
 624:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *     i = 3;
 625:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *
 626:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 627:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****        *  @endcode
 628:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       */
 629:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #if __cplusplus < 201103L
 630:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator&
 631:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 632:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 633:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 634:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	++iter;
 635:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 636:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 637:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #else
 638:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator&
 639:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 640:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 641:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 642:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	++iter;
 643:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 644:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 645:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 646:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator&
 647:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 648:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 649:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 650:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	++iter;
 651:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 652:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 653:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #endif
 654:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 655:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.
 656:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator&
 657:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator*()
 658:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 659:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 660:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 661:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator&
 662:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++()
 663:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 664:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 665:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 666:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       insert_iterator&
 667:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++(int)
 668:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *this; }
 669:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     };
 670:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 671:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   /**
 672:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 673:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 674:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *
 675:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 676:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****    *  types for you.
 681:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   */
 682:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 683:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 684:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 685:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     {
 686:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 687:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 688:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     }
 689:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 690:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // @} group iterators
 691:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 692:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 693:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** } // namespace
 694:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 695:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 696:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** {
 697:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 698:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 699:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 700:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 701:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 702:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 703:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 704:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 705:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 706:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   using std::iterator_traits;
 707:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   using std::iterator;
 708:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 709:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     class __normal_iterator
 710:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     {
 711:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     protected:
 712:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       _Iterator _M_current;
 713:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 714:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 715:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 716:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     public:
 717:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 718:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 719:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 720:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 721:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 722:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 723:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 724:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 725:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 726:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 727:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       explicit
 728:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 729:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       : _M_current(__i) { }
 730:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 731:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 732:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       template<typename _Iter>
 733:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 734:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 			  typename __enable_if<
 735:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 736:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 737:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 738:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 739:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       // Forward iterator requirements
 740:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reference
 741:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 742:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *_M_current; }
 743:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 744:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       pointer
 745:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 746:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return _M_current; }
 747:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 748:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator&
 749:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 750:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 751:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	++_M_current;
 752:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 753:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 754:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 755:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator
 756:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 757:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 758:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 759:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       // Bidirectional iterator requirements
 760:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator&
 761:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 762:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       {
 763:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	--_M_current;
 764:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	return *this;
 765:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       }
 766:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 767:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator
 768:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 769:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 770:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 771:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       // Random access iterator requirements
 772:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       reference
 773:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 774:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return _M_current[__n]; }
 775:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 776:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator&
 777:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 778:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
 779:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 780:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator
 781:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 782:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 783:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 784:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator&
 785:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 786:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
 787:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 788:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       __normal_iterator
 789:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 790:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 791:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 792:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       const _Iterator&
 793:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 2077              	.LM121:
 2078              	.LFBB29:
 2079 0000 80B5     	 push {r7,lr}
 2080 0002 82B0     	 sub sp,sp,#8
 2081 0004 00AF     	 add r7,sp,#0
 2082 0006 7860     	 str r0,[r7,#4]
 794:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return _M_current; }
 2084              	.LM122:
 2085 0008 7B68     	 ldr r3,[r7,#4]
 2086 000a 181C     	 mov r0,r3
 2087 000c BD46     	 mov sp,r7
 2088 000e 02B0     	 add sp,sp,#8
 2089              	 
 2090 0010 80BD     	 pop {r7,pc}
 2092              	.Lscope29:
 2094              	 .stabd 78,0,0
 2095 0012 C046     	 .section .text._ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_,"axG",%progbits,_ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_,comdat
 2096              	 .align 2
 2101              	 .weak _ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_
 2102              	 .code 16
 2103              	 .thumb_func
 2105              	_ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_:
 2106              	 .stabd 46,0,0
 2108              	.Ltext14:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****  */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** {
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static void
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****             _ValueType1;
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<>
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static void 
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****           swap(*__a, *__b);
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         }
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline void
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #else
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return __first2;
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline const _Tp&
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       if (__b < __a)
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	return __b;
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return __a;
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  preprocessor macro.
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Tp>
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline const _Tp&
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       if (__a < __b)
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	return __b;
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return __a;
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 233:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 234:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 235:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 236:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 237:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 238:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 239:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline const _Tp&
 240:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 241:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 242:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 243:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       if (__comp(__b, __a))
 244:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	return __b;
 245:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return __a;
 246:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 247:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 248:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 249:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 250:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 251:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 252:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 253:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 254:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 255:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 256:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 257:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 258:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 259:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 260:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline const _Tp&
 261:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 262:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 263:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 264:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       if (__comp(__a, __b))
 265:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	return __b;
 266:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return __a;
 267:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 268:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 269:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 270:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 271:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Iterator>
 272:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct _Niter_base
 273:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 274:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     { };
 275:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Iterator>
 277:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 280:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 281:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // Likewise, for move_iterator.
 282:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Iterator>
 283:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct _Miter_base
 284:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 285:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     { };
 286:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 287:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Iterator>
 288:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __miter_base(_Iterator __it)
 290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 291:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 292:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 293:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 294:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 295:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 296:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // a for loop with an explicit count.
 297:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 298:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool, bool, typename>
 299:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move
 300:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 301:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 302:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _OI
 303:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 304:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 305:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 306:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    *__result = *__first;
 307:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 308:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 309:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 310:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 311:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 312:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Category>
 313:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 314:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 315:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 316:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _OI
 317:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 318:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 319:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 320:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 321:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 322:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 323:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 324:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 325:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 326:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<>
 327:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 328:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 329:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 330:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _OI
 331:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 332:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         { 
 333:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 334:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 335:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    {
 336:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      *__result = *__first;
 337:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      ++__first;
 338:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      ++__result;
 339:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    }
 340:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 341:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 342:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 343:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 344:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 345:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<>
 346:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 347:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 348:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 349:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _OI
 350:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 351:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         { 
 352:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 353:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 354:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    {
 355:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 356:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      ++__first;
 357:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      ++__result;
 358:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    }
 359:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 360:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 361:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 362:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 363:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 364:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove>
 365:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 366:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 367:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _Tp>
 368:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _Tp*
 369:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 370:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 371:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 372:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 373:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 374:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                 "type is not assignable" );
 375:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 376:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  if (_Num)
 378:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 379:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result + _Num;
 380:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 381:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 382:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 383:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 384:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _OI
 385:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 386:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 387:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 388:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 389:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 390:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 391:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 392:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 393:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 394:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 395:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 396:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 397:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 398:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 399:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 400:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 401:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _CharT>
 402:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct char_traits;
 403:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 404:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 405:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     class istreambuf_iterator;
 406:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 407:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 408:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     class ostreambuf_iterator;
 409:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 410:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 411:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 412:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 413:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 414:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 415:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 416:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 418:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 419:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 420:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 421:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 422:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 423:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 424:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				    _CharT*>::__type
 425:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 426:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 427:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 428:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 429:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _OI
 430:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 431:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 432:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 433:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 434:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 435:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 436:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 437:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 438:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 439:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 440:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 441:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 442:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 443:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   result + (first - last)
 444:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 445:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 446:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 447:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 448:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 449:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 450:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 451:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 452:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  within [first,last).
 453:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 454:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 455:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _OI
 456:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 457:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 458:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 459:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 460:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 461:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 462:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 463:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 464:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 465:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 466:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	       __result));
 467:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 468:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 469:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 470:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 471:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 472:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 473:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 474:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 475:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 476:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   result + (first - last)
 477:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 478:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 479:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 480:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 481:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 482:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 483:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 484:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 485:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  within [first,last).
 486:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 487:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 488:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _OI
 489:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 490:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 491:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 492:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 493:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 494:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 495:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 496:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 497:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 498:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 				       std::__miter_base(__last), __result);
 499:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 500:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 501:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 502:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #else
 503:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 504:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 505:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 506:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool, bool, typename>
 507:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move_backward
 508:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 509:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 510:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _BI2
 511:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 512:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 513:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  while (__first != __last)
 514:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    *--__result = *--__last;
 515:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 516:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 517:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 518:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 519:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 520:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _Category>
 521:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 522:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 523:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 524:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _BI2
 525:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 526:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 527:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  while (__first != __last)
 528:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 529:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 530:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 531:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 532:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 533:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 534:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<>
 535:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 536:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 537:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 538:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _BI2
 539:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 540:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 541:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 542:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 543:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    *--__result = *--__last;
 544:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 545:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 546:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 547:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 548:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 549:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<>
 550:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 551:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 552:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 553:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _BI2
 554:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 555:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 556:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 557:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 558:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 559:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result;
 560:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 561:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 562:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 563:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 564:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove>
 565:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 566:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 567:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       template<typename _Tp>
 568:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         static _Tp*
 569:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 570:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 571:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 572:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 573:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 574:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                 "type is not assignable" );
 575:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** #endif
 576:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 577:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  if (_Num)
 578:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 579:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result - _Num;
 580:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 581:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 582:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 583:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 584:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _BI2
 585:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 586:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 587:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 588:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 589:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 590:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 591:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 592:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 593:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 594:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 595:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 596:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 597:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 								 __last,
 598:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 								 __result);
 599:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 600:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 601:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 602:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _BI2
 603:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 604:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 605:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 606:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 607:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 		   std::__niter_base(__result)));
 608:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 609:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 610:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   /**
 611:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 612:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 613:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 614:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 615:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 616:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  @return   result - (first - last)
 617:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 618:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 619:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 620:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 621:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 622:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 623:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 624:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *
 625:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 626:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 627:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   */
 628:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 629:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     inline _BI2
 630:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 2110              	.LM123:
 2111              	.LFBB30:
 2112 0000 90B5     	 push {r4,r7,lr}
 2113 0002 85B0     	 sub sp,sp,#20
 2114 0004 00AF     	 add r7,sp,#0
 2115 0006 F860     	 str r0,[r7,#12]
 2116 0008 B960     	 str r1,[r7,#8]
 2117 000a 7A60     	 str r2,[r7,#4]
 631:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 632:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       // concept requirements
 633:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 634:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 635:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 636:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 637:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 638:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 639:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 640:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 641:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 642:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	       __result));
 2119              	.LM124:
 2120 000c FB68     	 ldr r3,[r7,#12]
 2121 000e 181C     	 mov r0,r3
 2122 0010 FFF7FEFF 	 bl _ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_
 2123 0014 041C     	 mov r4,r0
 2124 0016 BB68     	 ldr r3,[r7,#8]
 2125 0018 181C     	 mov r0,r3
 2126 001a FFF7FEFF 	 bl _ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_
 2127 001e 021C     	 mov r2,r0
 2128 0020 7B68     	 ldr r3,[r7,#4]
 2129 0022 201C     	 mov r0,r4
 2130 0024 111C     	 mov r1,r2
 2131 0026 1A1C     	 mov r2,r3
 2132 0028 FFF7FEFF 	 bl _ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_
 2133 002c 031C     	 mov r3,r0
 643:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 2135              	.LM125:
 2136 002e 181C     	 mov r0,r3
 2137 0030 BD46     	 mov sp,r7
 2138 0032 05B0     	 add sp,sp,#20
 2139              	 
 2140 0034 90BD     	 pop {r4,r7,pc}
 2142              	.Lscope30:
 2144              	 .stabd 78,0,0
 2145 0036 C046     	 .section .text._ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv,"axG",%progbits,_ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv,comdat
 2146              	 .align 2
 2149              	 .weak _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv
 2150              	 .code 16
 2151              	 .thumb_func
 2153              	_ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv:
 2154              	 .stabd 46,0,0
 2156              	.Ltext15:
 741:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       { return *_M_current; }
 2158              	.LM126:
 2159              	.LFBB31:
 2160 0000 80B5     	 push {r7,lr}
 2161 0002 82B0     	 sub sp,sp,#8
 2162 0004 00AF     	 add r7,sp,#0
 2163 0006 7860     	 str r0,[r7,#4]
 742:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 2165              	.LM127:
 2166 0008 7B68     	 ldr r3,[r7,#4]
 2167 000a 1B68     	 ldr r3,[r3]
 2168 000c 181C     	 mov r0,r3
 2169 000e BD46     	 mov sp,r7
 2170 0010 02B0     	 add sp,sp,#8
 2171              	 
 2172 0012 80BD     	 pop {r7,pc}
 2174              	.Lscope31:
 2176              	 .stabd 78,0,0
 2177              	 .section .text._ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc,"axG",%progbits,_ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc,comdat
 2178              	 .align 2
 2183              	 .weak _ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc
 2184              	 .code 16
 2185              	 .thumb_func
 2187              	_ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc:
 2188              	 .stabd 46,0,0
 2190              	.Ltext16:
 928:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 929:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 930:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 931:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       push_back(value_type&& __x)
 932:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 933:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 934:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename... _Args>
 935:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
 936:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         emplace_back(_Args&&... __args);
 937:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
 938:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 939:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 940:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Removes last element.
 941:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 942:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 943:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 944:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
 945:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 946:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  called.
 947:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 948:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
 949:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 950:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 951:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
 952:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 953:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 954:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 955:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
 956:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 957:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 958:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 959:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __args  Arguments.
 960:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 961:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 962:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
 963:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 964:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 965:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
 966:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  std::list.
 967:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 968:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename... _Args>
 969:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         iterator
 970:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 971:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 972:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 973:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 974:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 975:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
 976:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 977:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 978:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
 979:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
 980:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 981:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  used the user should consider using std::list.
 982:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 983:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
 984:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 985:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
 986:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
 987:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 988:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 989:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
 990:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 991:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
 992:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
 993:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
 994:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 995:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  used the user should consider using std::list.
 996:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
 997:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
 998:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
 999:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1000:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1001:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1002:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1003:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1004:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1005:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1006:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1007:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1008:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1009:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1010:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1011:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  used the user should consider using std::list.
1012:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1013:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
1014:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1015:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1016:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1017:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1018:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1019:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1020:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1021:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1022:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert copies of the data in the 
1023:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1024:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  specified by @a position.
1025:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1026:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1027:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1028:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  consider using std::list.
1029:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1030:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
1031:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1032:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1033:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1034:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1035:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1036:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1037:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1038:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1039:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1040:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1041:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1042:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1043:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1044:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1045:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1046:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1047:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1048:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  consider using std::list.
1049:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1050:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
1051:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1052:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
1053:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1054:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1055:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return begin() + __offset;
1056:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
1057:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
1058:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1059:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1060:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1061:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1062:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1063:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1064:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1065:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1066:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1067:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1068:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1069:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  consider using std::list.
1070:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1071:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1072:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1073:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1074:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1075:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1076:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1077:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1078:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1079:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1080:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1081:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1082:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1083:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1084:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1085:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1086:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  by @a pos.
1087:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1088:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1089:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1090:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  consider using std::list.
1091:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1092:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator,
1093:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1094:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         iterator
1095:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1096:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       _InputIterator __last)
1097:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1098:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1099:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			     __first, __last, __false_type());
1101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  return begin() + __offset;
1102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
1104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  by @a pos.
1113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  consider using std::list.
1117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	       _InputIterator __last)
1122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  shorten the %vector by one.
1136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
1145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       erase(const_iterator __position)
1147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
1149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       erase(iterator __position)
1150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _M_erase(__position); }
1151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *                  erased.
1158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *           prior to erasing (or end()).
1160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This function will erase the elements in the range
1162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       iterator
1172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
1175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	const auto __beg = begin();
1176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
1179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
1180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *
1188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       swap(vector& __x)
1195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
1199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
1203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  the user's responsibility.
1209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****     protected:
1215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       /**
1216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****        */
1219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _ForwardIterator>
1220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         pointer
1221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  __try
1226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    {
1227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	      return __result;
1230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    }
1231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  __catch(...)
1232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    {
1233:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1234:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	      __throw_exception_again;
1235:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    }
1236:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1237:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1238:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1239:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Internal constructor functions follow.
1240:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1241:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1242:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1243:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1244:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1245:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _Integer>
1246:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1247:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1248:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1249:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1250:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1251:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1252:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1253:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1254:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1255:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1256:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1257:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1258:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1259:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			       __false_type)
1260:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1261:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1262:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    iterator_category _IterCategory;
1263:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1264:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1265:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1266:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1267:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1268:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1269:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1270:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1271:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1272:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  for (; __first != __last; ++__first)
1273:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1274:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    emplace_back(*__first);
1275:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
1276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    push_back(*__first);
1277:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1280:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1281:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _ForwardIterator>
1282:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1283:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1284:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1285:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1286:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1287:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1288:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1291:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 					this->_M_impl._M_start,
1292:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1293:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1294:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1295:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1296:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1297:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1298:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1299:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
1300:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value, 
1301:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
1302:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
1303:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
1304:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1305:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1306:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1307:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1308:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1309:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
1310:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	std::__uninitialized_default_n_a(this->_M_impl._M_start, __n, 
1311:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 					 _M_get_Tp_allocator());
1312:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
1313:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
1314:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1315:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1316:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1317:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // assignment work for the range versions.
1318:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1319:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1320:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1321:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1322:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1323:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _Integer>
1324:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1325:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1326:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         { _M_fill_assign(__n, __val); }
1327:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1328:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1329:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1330:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1331:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1332:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			   __false_type)
1333:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1334:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1335:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    iterator_category _IterCategory;
1336:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_assign_aux(__first, __last, _IterCategory());
1337:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1338:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1339:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1340:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1341:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1342:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_assign_aux(_InputIterator __first, _InputIterator __last,
1343:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 		      std::input_iterator_tag);
1344:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1345:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1346:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _ForwardIterator>
1347:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1348:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1349:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1350:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1351:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1352:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // to be the same thing.
1353:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1354:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1355:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1356:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1357:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Internal insert functions follow.
1358:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1359:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1360:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1361:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1362:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1363:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _Integer>
1364:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1365:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1366:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			   __true_type)
1367:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         { _M_fill_insert(__pos, __n, __val); }
1368:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1369:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1370:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1371:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1372:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_insert_dispatch(iterator __pos, _InputIterator __first,
1373:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1374:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         {
1375:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1376:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	    iterator_category _IterCategory;
1377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last, _IterCategory());
1378:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	}
1379:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1380:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1381:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _InputIterator>
1382:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1383:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_range_insert(iterator __pos, _InputIterator __first,
1384:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1385:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1386:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1387:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename _ForwardIterator>
1388:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1389:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_range_insert(iterator __pos, _ForwardIterator __first,
1390:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1391:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1392:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1393:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // the same thing.
1394:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1395:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1396:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1397:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus >= 201103L
1398:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by resize(n).
1399:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1400:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_default_append(size_type __n);
1401:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1402:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       bool
1403:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_shrink_to_fit();
1404:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1405:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1406:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by insert(p,x)
1407:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #if __cplusplus < 201103L
1408:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       void
1409:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1410:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #else
1411:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename... _Args>
1412:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1413:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_insert_aux(iterator __position, _Args&&... __args);
1414:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1415:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       template<typename... _Args>
1416:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         void
1417:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****         _M_emplace_back_aux(_Args&&... __args);
1418:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** #endif
1419:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1420:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       // Called by the latter.
1421:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       size_type
1422:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 2192              	.LM128:
 2193              	.LFBB32:
 2194 0000 90B5     	 push {r4,r7,lr}
 2195 0002 87B0     	 sub sp,sp,#28
 2196 0004 00AF     	 add r7,sp,#0
 2197 0006 F860     	 str r0,[r7,#12]
 2198 0008 B960     	 str r1,[r7,#8]
 2199 000a 7A60     	 str r2,[r7,#4]
 2200              	.LBB26:
1423:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
1424:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 2202              	.LM129:
 2203 000c FB68     	 ldr r3,[r7,#12]
 2204 000e 181C     	 mov r0,r3
 2205 0010 FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv
 2206 0014 041C     	 mov r4,r0
 2207 0016 FB68     	 ldr r3,[r7,#12]
 2208 0018 181C     	 mov r0,r3
 2209 001a FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv
 2210 001e 031C     	 mov r3,r0
 2211 0020 E21A     	 sub r2,r4,r3
 2212 0022 BB68     	 ldr r3,[r7,#8]
 2213 0024 9A42     	 cmp r2,r3
 2214 0026 9B41     	 sbc r3,r3,r3
 2215 0028 5B42     	 neg r3,r3
 2216 002a DBB2     	 uxtb r3,r3
 2217 002c 002B     	 cmp r3,#0
 2218 002e 03D0     	 beq .L87
1425:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 2220              	.LM130:
 2221 0030 7B68     	 ldr r3,[r7,#4]
 2222 0032 181C     	 mov r0,r3
 2223 0034 FFF7FEFF 	 bl _ZSt20__throw_length_errorPKc
 2224              	.L87:
1426:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
1427:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	const size_type __len = size() + std::max(size(), __n);
 2226              	.LM131:
 2227 0038 FB68     	 ldr r3,[r7,#12]
 2228 003a 181C     	 mov r0,r3
 2229 003c FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv
 2230 0040 041C     	 mov r4,r0
 2231 0042 FB68     	 ldr r3,[r7,#12]
 2232 0044 181C     	 mov r0,r3
 2233 0046 FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv
 2234 004a 031C     	 mov r3,r0
 2235 004c 3B61     	 str r3,[r7,#16]
 2236 004e 1023     	 mov r3,#16
 2237 0050 FA18     	 add r2,r7,r3
 2238 0052 0823     	 mov r3,#8
 2239 0054 FB18     	 add r3,r7,r3
 2240 0056 101C     	 mov r0,r2
 2241 0058 191C     	 mov r1,r3
 2242 005a FFF7FEFF 	 bl _ZSt3maxIjERKT_S2_S2_
 2243 005e 031C     	 mov r3,r0
 2244 0060 1B68     	 ldr r3,[r3]
 2245 0062 E318     	 add r3,r4,r3
 2246 0064 7B61     	 str r3,[r7,#20]
1428:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2248              	.LM132:
 2249 0066 FB68     	 ldr r3,[r7,#12]
 2250 0068 181C     	 mov r0,r3
 2251 006a FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv
 2252 006e 021E     	 sub r2,r0,#0
 2253 0070 7B69     	 ldr r3,[r7,#20]
 2254 0072 9A42     	 cmp r2,r3
 2255 0074 07D8     	 bhi .L88
 2257              	.LM133:
 2258 0076 FB68     	 ldr r3,[r7,#12]
 2259 0078 181C     	 mov r0,r3
 2260 007a FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv
 2261 007e 021E     	 sub r2,r0,#0
 2262 0080 7B69     	 ldr r3,[r7,#20]
 2263 0082 9A42     	 cmp r2,r3
 2264 0084 05D2     	 bcs .L89
 2265              	.L88:
 2267              	.LM134:
 2268 0086 FB68     	 ldr r3,[r7,#12]
 2269 0088 181C     	 mov r0,r3
 2270 008a FFF7FEFF 	 bl _ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv
 2271 008e 031C     	 mov r3,r0
 2272 0090 00E0     	 b .L91
 2273              	.L89:
 2275              	.LM135:
 2276 0092 7B69     	 ldr r3,[r7,#20]
 2277              	.L91:
 2278              	.LBE26:
1429:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 2280              	.LM136:
 2281 0094 181C     	 mov r0,r3
 2282 0096 BD46     	 mov sp,r7
 2283 0098 07B0     	 add sp,sp,#28
 2284              	 
 2285 009a 90BD     	 pop {r4,r7,pc}
 2290              	.Lscope32:
 2292              	 .stabd 78,0,0
 2293              	 .section .text._ZNSt6vectorIP5FloorSaIS1_EE5beginEv,"axG",%progbits,_ZNSt6vectorIP5FloorSaIS1_EE5beginEv,comdat
 2294              	 .align 2
 2297              	 .weak _ZNSt6vectorIP5FloorSaIS1_EE5beginEv
 2298              	 .code 16
 2299              	 .thumb_func
 2301              	_ZNSt6vectorIP5FloorSaIS1_EE5beginEv:
 2302              	 .stabd 46,0,0
 547:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 2304              	.LM137:
 2305              	.LFBB33:
 2306 0000 80B5     	 push {r7,lr}
 2307 0002 84B0     	 sub sp,sp,#16
 2308 0004 00AF     	 add r7,sp,#0
 2309 0006 7860     	 str r0,[r7,#4]
 548:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 2311              	.LM138:
 2312 0008 7B68     	 ldr r3,[r7,#4]
 2313 000a 0C22     	 mov r2,#12
 2314 000c BA18     	 add r2,r7,r2
 2315 000e 101C     	 mov r0,r2
 2316 0010 191C     	 mov r1,r3
 2317 0012 FFF7FEFF 	 bl _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC1ERKS3_
 2318 0016 FB68     	 ldr r3,[r7,#12]
 2319 0018 181C     	 mov r0,r3
 2320 001a BD46     	 mov sp,r7
 2321 001c 04B0     	 add sp,sp,#16
 2322              	 
 2323 001e 80BD     	 pop {r7,pc}
 2325              	.Lscope33:
 2327              	 .stabd 78,0,0
 2328              	 .section .text._ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",%progbits,_ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
 2329              	 .align 2
 2333              	 .weak _ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
 2334              	 .code 16
 2335              	 .thumb_func
 2337              	_ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_:
 2338              	 .stabd 46,0,0
 2340              	.Ltext17:
 795:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     };
 796:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 797:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 798:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 799:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 800:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 801:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 802:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 803:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 804:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 805:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // Forward iterator requirements
 806:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 807:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 808:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 809:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 810:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 811:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 812:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 813:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 814:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 815:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 816:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 817:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 818:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 819:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 820:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 821:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 822:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 823:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 824:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 825:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 826:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 827:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 828:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 829:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 830:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 831:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 832:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 833:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 834:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // Random access iterator requirements
 835:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 836:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 837:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 838:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 839:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 840:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 841:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 842:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 843:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 844:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 845:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 846:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 847:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 848:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 849:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 850:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 851:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 852:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 853:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 854:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 855:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 856:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 857:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 858:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 859:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 860:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 861:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 862:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 863:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 864:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 865:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 866:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 867:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 868:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 869:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 870:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 871:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 872:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 873:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 874:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 875:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 876:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 877:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 878:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 879:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 880:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 881:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 882:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 883:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 884:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 885:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline bool
 886:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 887:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 888:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 889:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 890:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 891:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 892:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 893:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 894:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   // parameters.
 895:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 896:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 897:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     // DR 685.
 898:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline auto
 899:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 900:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 901:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 902:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #else
 903:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 904:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 905:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 906:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** #endif
 907:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 908:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 909:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 910:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 911:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 2342              	.LM139:
 2343              	.LFBB34:
 2344 0000 90B5     	 push {r4,r7,lr}
 2345 0002 83B0     	 sub sp,sp,#12
 2346 0004 00AF     	 add r7,sp,#0
 2347 0006 7860     	 str r0,[r7,#4]
 2348 0008 3960     	 str r1,[r7]
 912:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 913:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 914:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 2350              	.LM140:
 2351 000a 7B68     	 ldr r3,[r7,#4]
 2352 000c 181C     	 mov r0,r3
 2353 000e FFF7FEFF 	 bl _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
 2354 0012 031C     	 mov r3,r0
 2355 0014 1B68     	 ldr r3,[r3]
 2356 0016 1C1C     	 mov r4,r3
 2357 0018 3B68     	 ldr r3,[r7]
 2358 001a 181C     	 mov r0,r3
 2359 001c FFF7FEFF 	 bl _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
 2360 0020 031C     	 mov r3,r0
 2361 0022 1B68     	 ldr r3,[r3]
 2362 0024 E31A     	 sub r3,r4,r3
 2363 0026 9B10     	 asr r3,r3,#2
 2364 0028 181C     	 mov r0,r3
 2365 002a BD46     	 mov sp,r7
 2366 002c 03B0     	 add sp,sp,#12
 2367              	 
 2368 002e 90BD     	 pop {r4,r7,pc}
 2370              	.Lscope34:
 2372              	 .stabd 78,0,0
 2373              	 .section .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj,"axG",%progbits,_ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj,comdat
 2374              	 .align 2
 2378              	 .weak _ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj
 2379              	 .code 16
 2380              	 .thumb_func
 2382              	_ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj:
 2383              	 .stabd 46,0,0
 2385              	.Ltext18:
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       {
 2387              	.LM141:
 2388              	.LFBB35:
 2389 0000 80B5     	 push {r7,lr}
 2390 0002 82B0     	 sub sp,sp,#8
 2391 0004 00AF     	 add r7,sp,#0
 2392 0006 7860     	 str r0,[r7,#4]
 2393 0008 3960     	 str r1,[r7]
 2394              	.LBB27:
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 2396              	.LM142:
 2397 000a 3B68     	 ldr r3,[r7]
 2398 000c 002B     	 cmp r3,#0
 2399 000e 07D0     	 beq .L97
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 2401              	.LM143:
 2402 0010 7A68     	 ldr r2,[r7,#4]
 2403 0012 3B68     	 ldr r3,[r7]
 2404 0014 101C     	 mov r0,r2
 2405 0016 191C     	 mov r1,r3
 2406 0018 FFF7FEFF 	 bl _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j
 2407 001c 031C     	 mov r3,r0
 2408 001e 00E0     	 b .L98
 2409              	.L97:
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       }
 2411              	.LM144:
 2412 0020 0023     	 mov r3,#0
 2413              	.L98:
 2414              	.LBE27:
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 2416              	.LM145:
 2417 0022 181C     	 mov r0,r3
 2418 0024 BD46     	 mov sp,r7
 2419 0026 02B0     	 add sp,sp,#8
 2420              	 
 2421 0028 80BD     	 pop {r7,pc}
 2423              	.Lscope35:
 2425              	 .stabd 78,0,0
 2426 002a C046     	 .section .text._ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_,"axG",%progbits,_ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_,comdat
 2427              	 .align 2
 2433              	 .weak _ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_
 2434              	 .code 16
 2435              	 .thumb_func
 2437              	_ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_:
 2438              	 .stabd 46,0,0
 2440              	.Ltext19:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****  */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** {
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         static _ForwardIterator
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         {
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __try
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    {
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, ++__cur)
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      return __cur;
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    }
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __catch(...)
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    {
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    }
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	}
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<>
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         static _ForwardIterator
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   /**
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   */
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     inline _ForwardIterator
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	_ValueType1;
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	_ValueType2;
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       const bool __assignable = true;
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #else
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType;
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_ValueType1, _RefType>::value;
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #endif
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 				       && __assignable>::
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         static void
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         {
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __try
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    {
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    }
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __catch(...)
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    {
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    }
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	}
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<>
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         static void
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   /**
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @return   Nothing.
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   */
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     inline void
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	_ValueType;
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       const bool __assignable = true;
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #else
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #endif
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         static void
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 			const _Tp& __x)
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         {
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __try
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    {
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    }
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __catch(...)
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    {
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    }
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	}
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<>
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         static void
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 			const _Tp& __x)
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****         { std::fill_n(__first, __n, __x); }
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   /**
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  @return   Nothing.
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   */
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     inline void
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 233:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 234:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 235:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	_ValueType;
 236:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 237:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       const bool __assignable = true;
 238:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #else
 239:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 240:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 241:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #endif
 242:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 243:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       std::__uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 244:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 245:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 246:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 247:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 248:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 249:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 250:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 251:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 252:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 253:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 254:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	   typename _Allocator>
 255:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     _ForwardIterator
 256:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 257:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 258:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 259:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 260:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       __try
 261:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	{
 262:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 263:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, ++__cur)
 264:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 265:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  return __cur;
 266:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	}
 267:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       __catch(...)
 268:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	{
 269:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 270:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 271:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	}
 272:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 273:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 274:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 275:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     inline _ForwardIterator
 276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 277:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 280:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 281:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	   typename _Allocator>
 282:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     inline _ForwardIterator
 283:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 284:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 285:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 286:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 287:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 288:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 					 __result, __alloc);
 289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 291:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 292:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	   typename _Allocator>
 293:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     inline _ForwardIterator
 294:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 2442              	.LM146:
 2443              	.LFBB36:
 2444 0000 80B5     	 push {r7,lr}
 2445 0002 84B0     	 sub sp,sp,#16
 2446 0004 00AF     	 add r7,sp,#0
 2447 0006 F860     	 str r0,[r7,#12]
 2448 0008 B960     	 str r1,[r7,#8]
 2449 000a 7A60     	 str r2,[r7,#4]
 2450 000c 3B60     	 str r3,[r7]
 295:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 296:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 297:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 298:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     {
 299:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 300:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 301:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 2452              	.LM147:
 2453 000e F868     	 ldr r0,[r7,#12]
 2454 0010 B968     	 ldr r1,[r7,#8]
 2455 0012 7A68     	 ldr r2,[r7,#4]
 2456 0014 3B68     	 ldr r3,[r7]
 2457 0016 FFF7FEFF 	 bl _ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E
 2458 001a 031C     	 mov r3,r0
 302:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 2460              	.LM148:
 2461 001c 181C     	 mov r0,r3
 2462 001e BD46     	 mov sp,r7
 2463 0020 04B0     	 add sp,sp,#16
 2464              	 
 2465 0022 80BD     	 pop {r7,pc}
 2467              	.Lscope36:
 2469              	 .stabd 78,0,0
 2470              	 .section .text._ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",%progbits,_ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC5ERKS3_,comdat
 2471              	 .align 2
 2475              	 .weak _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_
 2476              	 .code 16
 2477              	 .thumb_func
 2479              	_ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_:
 2480              	 .stabd 46,0,0
 2482              	.Ltext20:
 728:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h ****       : _M_current(__i) { }
 2484              	.LM149:
 2485              	.LFBB37:
 2486 0000 80B5     	 push {r7,lr}
 2487 0002 82B0     	 sub sp,sp,#8
 2488 0004 00AF     	 add r7,sp,#0
 2489 0006 7860     	 str r0,[r7,#4]
 2490 0008 3960     	 str r1,[r7]
 2491              	.LBB28:
 729:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator.h **** 
 2493              	.LM150:
 2494 000a 3B68     	 ldr r3,[r7]
 2495 000c 1A68     	 ldr r2,[r3]
 2496 000e 7B68     	 ldr r3,[r7,#4]
 2497 0010 1A60     	 str r2,[r3]
 2498              	.LBE28:
 2499 0012 7B68     	 ldr r3,[r7,#4]
 2500 0014 181C     	 mov r0,r3
 2501 0016 BD46     	 mov sp,r7
 2502 0018 02B0     	 add sp,sp,#8
 2503              	 
 2504 001a 80BD     	 pop {r7,pc}
 2506              	.Lscope37:
 2508              	 .stabd 78,0,0
 2509              	 .weak _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC1ERKS3_
 2510              	 .thumb_set _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC1ERKS3_,_ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_
 2511              	 .section .text._ZNSaIP5FloorEC2Ev,"axG",%progbits,_ZNSaIP5FloorEC5Ev,comdat
 2512              	 .align 2
 2515              	 .weak _ZNSaIP5FloorEC2Ev
 2516              	 .code 16
 2517              	 .thumb_func
 2519              	_ZNSaIP5FloorEC2Ev:
 2520              	 .stabd 46,0,0
 2522              	.Ltext21:
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 2524              	.LM151:
 2525              	.LFBB38:
 2526 0000 80B5     	 push {r7,lr}
 2527 0002 82B0     	 sub sp,sp,#8
 2528 0004 00AF     	 add r7,sp,#0
 2529 0006 7860     	 str r0,[r7,#4]
 2530              	.LBB29:
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\allocator.h **** 
 2532              	.LM152:
 2533 0008 7B68     	 ldr r3,[r7,#4]
 2534 000a 181C     	 mov r0,r3
 2535 000c FFF7FEFF 	 bl _ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev
 2536              	.LBE29:
 2537 0010 7B68     	 ldr r3,[r7,#4]
 2538 0012 181C     	 mov r0,r3
 2539 0014 BD46     	 mov sp,r7
 2540 0016 02B0     	 add sp,sp,#8
 2541              	 
 2542 0018 80BD     	 pop {r7,pc}
 2544              	.Lscope38:
 2546              	 .stabd 78,0,0
 2547              	 .weak _ZNSaIP5FloorEC1Ev
 2548              	 .thumb_set _ZNSaIP5FloorEC1Ev,_ZNSaIP5FloorEC2Ev
 2549 001a C046     	 .section .text._ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIP5FloorED5Ev,comdat
 2550              	 .align 2
 2553              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev
 2554              	 .code 16
 2555              	 .thumb_func
 2557              	_ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev:
 2558              	 .stabd 46,0,0
 2560              	.Ltext22:
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 2562              	.LM153:
 2563              	.LFBB39:
 2564 0000 80B5     	 push {r7,lr}
 2565 0002 82B0     	 sub sp,sp,#8
 2566 0004 00AF     	 add r7,sp,#0
 2567 0006 7860     	 str r0,[r7,#4]
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 2569              	.LM154:
 2570 0008 7B68     	 ldr r3,[r7,#4]
 2571 000a 181C     	 mov r0,r3
 2572 000c BD46     	 mov sp,r7
 2573 000e 02B0     	 add sp,sp,#8
 2574              	 
 2575 0010 80BD     	 pop {r7,pc}
 2577              	.Lscope39:
 2579              	 .stabd 78,0,0
 2580              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorED1Ev
 2581              	 .thumb_set _ZN9__gnu_cxx13new_allocatorIP5FloorED1Ev,_ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev
 2582 0012 C046     	 .section .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j,"axG",%progbits,_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j,comdat
 2583              	 .align 2
 2588              	 .weak _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j
 2589              	 .code 16
 2590              	 .thumb_func
 2592              	_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j:
 2593              	 .stabd 46,0,0
 2595              	.Ltext23:
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { __a.deallocate(__p, __n); }
 2597              	.LM155:
 2598              	.LFBB40:
 2599 0000 80B5     	 push {r7,lr}
 2600 0002 84B0     	 sub sp,sp,#16
 2601 0004 00AF     	 add r7,sp,#0
 2602 0006 F860     	 str r0,[r7,#12]
 2603 0008 B960     	 str r1,[r7,#8]
 2604 000a 7A60     	 str r2,[r7,#4]
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 2606              	.LM156:
 2607 000c F968     	 ldr r1,[r7,#12]
 2608 000e BA68     	 ldr r2,[r7,#8]
 2609 0010 7B68     	 ldr r3,[r7,#4]
 2610 0012 081C     	 mov r0,r1
 2611 0014 111C     	 mov r1,r2
 2612 0016 1A1C     	 mov r2,r3
 2613 0018 FFF7FEFF 	 bl _ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j
 2614 001c BD46     	 mov sp,r7
 2615 001e 04B0     	 add sp,sp,#16
 2616              	 
 2617 0020 80BD     	 pop {r7,pc}
 2619              	.Lscope40:
 2621              	 .stabd 78,0,0
 2622 0022 C046     	 .section .text._ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_,"axG",%progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_,comdat
 2623              	 .align 2
 2625              	 .weak _ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_
 2626              	 .code 16
 2627              	 .thumb_func
 2629              	_ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_:
 2630              	 .stabd 46,0,0
 2632              	.Ltext24:
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     };
 2634              	.LM157:
 2635              	.LFBB41:
 2636 0000 80B5     	 push {r7,lr}
 2637 0002 82B0     	 sub sp,sp,#8
 2638 0004 00AF     	 add r7,sp,#0
 2639 0006 7860     	 str r0,[r7,#4]
 2640 0008 3960     	 str r1,[r7]
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_construct.h ****     };
 2642              	.LM158:
 2643 000a BD46     	 mov sp,r7
 2644 000c 02B0     	 add sp,sp,#8
 2645              	 
 2646 000e 80BD     	 pop {r7,pc}
 2648              	.Lscope41:
 2650              	 .stabd 78,0,0
 2651              	 .section .text._ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_,"axG",%progbits,_ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_,comdat
 2652              	 .align 2
 2655              	 .weak _ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_
 2656              	 .code 16
 2657              	 .thumb_func
 2659              	_ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_:
 2660              	 .stabd 46,0,0
 2662              	.Ltext25:
 289:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 2664              	.LM159:
 2665              	.LFBB42:
 2666 0000 80B5     	 push {r7,lr}
 2667 0002 82B0     	 sub sp,sp,#8
 2668 0004 00AF     	 add r7,sp,#0
 2669 0006 7860     	 str r0,[r7,#4]
 290:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 2671              	.LM160:
 2672 0008 7B68     	 ldr r3,[r7,#4]
 2673 000a 181C     	 mov r0,r3
 2674 000c FFF7FEFF 	 bl _ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_
 2675 0010 031C     	 mov r3,r0
 2676 0012 181C     	 mov r0,r3
 2677 0014 BD46     	 mov sp,r7
 2678 0016 02B0     	 add sp,sp,#8
 2679              	 
 2680 0018 80BD     	 pop {r7,pc}
 2682              	.Lscope42:
 2684              	 .stabd 78,0,0
 2685 001a C046     	 .section .text._ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_,"axG",%progbits,_ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_,comdat
 2686              	 .align 2
 2691              	 .weak _ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_
 2692              	 .code 16
 2693              	 .thumb_func
 2695              	_ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_:
 2696              	 .stabd 46,0,0
 603:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 2698              	.LM161:
 2699              	.LFBB43:
 2700 0000 B0B5     	 push {r4,r5,r7,lr}
 2701 0002 84B0     	 sub sp,sp,#16
 2702 0004 00AF     	 add r7,sp,#0
 2703 0006 F860     	 str r0,[r7,#12]
 2704 0008 B960     	 str r1,[r7,#8]
 2705 000a 7A60     	 str r2,[r7,#4]
 607:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 2707              	.LM162:
 2708 000c FB68     	 ldr r3,[r7,#12]
 2709 000e 181C     	 mov r0,r3
 2710 0010 FFF7FEFF 	 bl _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 2711 0014 051C     	 mov r5,r0
 2712 0016 BB68     	 ldr r3,[r7,#8]
 2713 0018 181C     	 mov r0,r3
 2714 001a FFF7FEFF 	 bl _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 2715 001e 041C     	 mov r4,r0
 2716 0020 7B68     	 ldr r3,[r7,#4]
 2717 0022 181C     	 mov r0,r3
 2718 0024 FFF7FEFF 	 bl _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 2719 0028 031C     	 mov r3,r0
 2720 002a 281C     	 mov r0,r5
 2721 002c 211C     	 mov r1,r4
 2722 002e 1A1C     	 mov r2,r3
 2723 0030 FFF7FEFF 	 bl _ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_
 2724 0034 031C     	 mov r3,r0
 608:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 2726              	.LM163:
 2727 0036 181C     	 mov r0,r3
 2728 0038 BD46     	 mov sp,r7
 2729 003a 04B0     	 add sp,sp,#16
 2730              	 
 2731 003c B0BD     	 pop {r4,r5,r7,pc}
 2733              	.Lscope43:
 2735              	 .stabd 78,0,0
 2736 003e C046     	 .section .text._ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv,"axG",%progbits,_ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv,comdat
 2737              	 .align 2
 2740              	 .weak _ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv
 2741              	 .code 16
 2742              	 .thumb_func
 2744              	_ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv:
 2745              	 .stabd 46,0,0
 2747              	.Ltext26:
 654:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2749              	.LM164:
 2750              	.LFBB44:
 2751 0000 80B5     	 push {r7,lr}
 2752 0002 82B0     	 sub sp,sp,#8
 2753 0004 00AF     	 add r7,sp,#0
 2754 0006 7860     	 str r0,[r7,#4]
 655:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 2756              	.LM165:
 2757 0008 7B68     	 ldr r3,[r7,#4]
 2758 000a 5B68     	 ldr r3,[r3,#4]
 2759 000c 1A1C     	 mov r2,r3
 2760 000e 7B68     	 ldr r3,[r7,#4]
 2761 0010 1B68     	 ldr r3,[r3]
 2762 0012 D31A     	 sub r3,r2,r3
 2763 0014 9B10     	 asr r3,r3,#2
 2764 0016 181C     	 mov r0,r3
 2765 0018 BD46     	 mov sp,r7
 2766 001a 02B0     	 add sp,sp,#8
 2767              	 
 2768 001c 80BD     	 pop {r7,pc}
 2770              	.Lscope44:
 2772              	 .stabd 78,0,0
 2773 001e C046     	 .section .text._ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv,"axG",%progbits,_ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv,comdat
 2774              	 .align 2
 2777              	 .weak _ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv
 2778              	 .code 16
 2779              	 .thumb_func
 2781              	_ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv:
 2782              	 .stabd 46,0,0
 659:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 2784              	.LM166:
 2785              	.LFBB45:
 2786 0000 80B5     	 push {r7,lr}
 2787 0002 82B0     	 sub sp,sp,#8
 2788 0004 00AF     	 add r7,sp,#0
 2789 0006 7860     	 str r0,[r7,#4]
 660:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 2791              	.LM167:
 2792 0008 7B68     	 ldr r3,[r7,#4]
 2793 000a 181C     	 mov r0,r3
 2794 000c FFF7FEFF 	 bl _ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 2795 0010 031C     	 mov r3,r0
 2796 0012 181C     	 mov r0,r3
 2797 0014 FFF7FEFF 	 bl _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_
 2798 0018 031C     	 mov r3,r0
 2799 001a 181C     	 mov r0,r3
 2800 001c BD46     	 mov sp,r7
 2801 001e 02B0     	 add sp,sp,#8
 2802              	 
 2803 0020 80BD     	 pop {r7,pc}
 2805              	.Lscope45:
 2807              	 .stabd 78,0,0
 2808 0022 C046     	 .section .text._ZSt3maxIjERKT_S2_S2_,"axG",%progbits,_ZSt3maxIjERKT_S2_S2_,comdat
 2809              	 .align 2
 2813              	 .weak _ZSt3maxIjERKT_S2_S2_
 2814              	 .code 16
 2815              	 .thumb_func
 2817              	_ZSt3maxIjERKT_S2_S2_:
 2818              	 .stabd 46,0,0
 2820              	.Ltext27:
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 2822              	.LM168:
 2823              	.LFBB46:
 2824 0000 80B5     	 push {r7,lr}
 2825 0002 82B0     	 sub sp,sp,#8
 2826 0004 00AF     	 add r7,sp,#0
 2827 0006 7860     	 str r0,[r7,#4]
 2828 0008 3960     	 str r1,[r7]
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	return __b;
 2830              	.LM169:
 2831 000a 7B68     	 ldr r3,[r7,#4]
 2832 000c 1A68     	 ldr r2,[r3]
 2833 000e 3B68     	 ldr r3,[r7]
 2834 0010 1B68     	 ldr r3,[r3]
 2835 0012 9A42     	 cmp r2,r3
 2836 0014 01D2     	 bcs .L122
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****       return __a;
 2838              	.LM170:
 2839 0016 3B68     	 ldr r3,[r7]
 2840 0018 00E0     	 b .L123
 2841              	.L122:
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 2843              	.LM171:
 2844 001a 7B68     	 ldr r3,[r7,#4]
 2845              	.L123:
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 2847              	.LM172:
 2848 001c 181C     	 mov r0,r3
 2849 001e BD46     	 mov sp,r7
 2850 0020 02B0     	 add sp,sp,#8
 2851              	 
 2852 0022 80BD     	 pop {r7,pc}
 2854              	.Lscope46:
 2856              	 .stabd 78,0,0
 2857              	 .section .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j,"axG",%progbits,_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j,comdat
 2858              	 .align 2
 2862              	 .weak _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j
 2863              	 .code 16
 2864              	 .thumb_func
 2866              	_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j:
 2867              	 .stabd 46,0,0
 2869              	.Ltext28:
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return __a.allocate(__n); }
 2871              	.LM173:
 2872              	.LFBB47:
 2873 0000 80B5     	 push {r7,lr}
 2874 0002 82B0     	 sub sp,sp,#8
 2875 0004 00AF     	 add r7,sp,#0
 2876 0006 7860     	 str r0,[r7,#4]
 2877 0008 3960     	 str r1,[r7]
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 2879              	.LM174:
 2880 000a 7A68     	 ldr r2,[r7,#4]
 2881 000c 3B68     	 ldr r3,[r7]
 2882 000e 101C     	 mov r0,r2
 2883 0010 191C     	 mov r1,r3
 2884 0012 0022     	 mov r2,#0
 2885 0014 FFF7FEFF 	 bl _ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv
 2886 0018 031C     	 mov r3,r0
 2887 001a 181C     	 mov r0,r3
 2888 001c BD46     	 mov sp,r7
 2889 001e 02B0     	 add sp,sp,#8
 2890              	 
 2891 0020 80BD     	 pop {r7,pc}
 2893              	.Lscope47:
 2895              	 .stabd 78,0,0
 2896 0022 C046     	 .section .text._ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E,"axG",%progbits,_ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E,comdat
 2897              	 .align 2
 2902              	 .weak _ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E
 2903              	 .code 16
 2904              	 .thumb_func
 2906              	_ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E:
 2907              	 .stabd 46,0,0
 2909              	.Ltext29:
 276:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 2911              	.LM175:
 2912              	.LFBB48:
 2913 0000 80B5     	 push {r7,lr}
 2914 0002 84B0     	 sub sp,sp,#16
 2915 0004 00AF     	 add r7,sp,#0
 2916 0006 F860     	 str r0,[r7,#12]
 2917 0008 B960     	 str r1,[r7,#8]
 2918 000a 7A60     	 str r2,[r7,#4]
 2919 000c 3B60     	 str r3,[r7]
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 2921              	.LM176:
 2922 000e F968     	 ldr r1,[r7,#12]
 2923 0010 BA68     	 ldr r2,[r7,#8]
 2924 0012 7B68     	 ldr r3,[r7,#4]
 2925 0014 081C     	 mov r0,r1
 2926 0016 111C     	 mov r1,r2
 2927 0018 1A1C     	 mov r2,r3
 2928 001a FFF7FEFF 	 bl _ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_
 2929 001e 031C     	 mov r3,r0
 2930 0020 181C     	 mov r0,r3
 2931 0022 BD46     	 mov sp,r7
 2932 0024 04B0     	 add sp,sp,#16
 2933              	 
 2934 0026 80BD     	 pop {r7,pc}
 2936              	.Lscope48:
 2938              	 .stabd 78,0,0
 2939              	 .section .text._ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIP5FloorEC5Ev,comdat
 2940              	 .align 2
 2943              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev
 2944              	 .code 16
 2945              	 .thumb_func
 2947              	_ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev:
 2948              	 .stabd 46,0,0
 2950              	.Ltext30:
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 2952              	.LM177:
 2953              	.LFBB49:
 2954 0000 80B5     	 push {r7,lr}
 2955 0002 82B0     	 sub sp,sp,#8
 2956 0004 00AF     	 add r7,sp,#0
 2957 0006 7860     	 str r0,[r7,#4]
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 2959              	.LM178:
 2960 0008 7B68     	 ldr r3,[r7,#4]
 2961 000a 181C     	 mov r0,r3
 2962 000c BD46     	 mov sp,r7
 2963 000e 02B0     	 add sp,sp,#8
 2964              	 
 2965 0010 80BD     	 pop {r7,pc}
 2967              	.Lscope49:
 2969              	 .stabd 78,0,0
 2970              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorEC1Ev
 2971              	 .thumb_set _ZN9__gnu_cxx13new_allocatorIP5FloorEC1Ev,_ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev
 2972 0012 C046     	 .section .text._ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j,comdat
 2973              	 .align 2
 2977              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j
 2978              	 .code 16
 2979              	 .thumb_func
 2981              	_ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j:
 2982              	 .stabd 46,0,0
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { ::operator delete(__p); }
 2984              	.LM179:
 2985              	.LFBB50:
 2986 0000 80B5     	 push {r7,lr}
 2987 0002 84B0     	 sub sp,sp,#16
 2988 0004 00AF     	 add r7,sp,#0
 2989 0006 F860     	 str r0,[r7,#12]
 2990 0008 B960     	 str r1,[r7,#8]
 2991 000a 7A60     	 str r2,[r7,#4]
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 2993              	.LM180:
 2994 000c BB68     	 ldr r3,[r7,#8]
 2995 000e 181C     	 mov r0,r3
 2996 0010 FFF7FEFF 	 bl _ZdlPv
 2997 0014 BD46     	 mov sp,r7
 2998 0016 04B0     	 add sp,sp,#16
 2999              	 
 3000 0018 80BD     	 pop {r7,pc}
 3002              	.Lscope50:
 3004              	 .stabd 78,0,0
 3005 001a C046     	 .section .text._ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_,"axG",%progbits,_ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_,comdat
 3006              	 .align 2
 3009              	 .weak _ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_
 3010              	 .code 16
 3011              	 .thumb_func
 3013              	_ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_:
 3014              	 .stabd 46,0,0
 3016              	.Ltext31:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** //
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // any later version.
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** /*
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  */
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****  */
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #pragma GCC system_header
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** # include <type_traits>  // For _GLIBCXX_HAS_NESTED_TYPE, is_convertible
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #endif
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** {
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /**
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   */
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   //@{ 
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /**
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   */
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   //@{ 
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   ///  Marking input iterators.
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   struct input_iterator_tag { };
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   ///  Marking output iterators.
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   struct output_iterator_tag { };
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// operations.
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// iterator operations.
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   //@}
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /**
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  used in specializations and overloading.
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   */
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct iterator
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     {
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Tp        value_type;
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Reference reference;
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     };
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /**
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   */
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** _GLIBCXX_HAS_NESTED_TYPE(iterator_category)
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Iterator,
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 	   bool = __has_iterator_category<_Iterator>::value>
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct __iterator_traits { };
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator, true>
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     {
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     };
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct iterator_traits
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #else
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct iterator_traits
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     {
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     };
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** #endif
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Tp>
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     {
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     };
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Tp>
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     {
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     };
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   /**
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****    *  sugar for internal library use only.
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   */
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Iter>
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     inline typename iterator_traits<_Iter>::iterator_category
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   //@}
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h **** 
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   // If _Iterator has a base returns it otherwise _Iterator is returned
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   // untouched
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****   template<typename _Iterator, bool _HasBase>
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     struct _Iter_base
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****     {
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       typedef _Iterator iterator_type;
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 3018              	.LM181:
 3019              	.LFBB51:
 3020 0000 80B5     	 push {r7,lr}
 3021 0002 82B0     	 sub sp,sp,#8
 3022 0004 00AF     	 add r7,sp,#0
 3023 0006 7860     	 str r0,[r7,#4]
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_iterator_base_types.h ****       { return __it; }
 3025              	.LM182:
 3026 0008 7B68     	 ldr r3,[r7,#4]
 3027 000a 181C     	 mov r0,r3
 3028 000c BD46     	 mov sp,r7
 3029 000e 02B0     	 add sp,sp,#8
 3030              	 
 3031 0010 80BD     	 pop {r7,pc}
 3033              	.Lscope51:
 3035              	 .stabd 78,0,0
 3036 0012 C046     	 .section .text._ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_,"axG",%progbits,_ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_,comdat
 3037              	 .align 2
 3040              	 .weak _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 3041              	 .code 16
 3042              	 .thumb_func
 3044              	_ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_:
 3045              	 .stabd 46,0,0
 3047              	.Ltext32:
 278:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 3049              	.LM183:
 3050              	.LFBB52:
 3051 0000 80B5     	 push {r7,lr}
 3052 0002 82B0     	 sub sp,sp,#8
 3053 0004 00AF     	 add r7,sp,#0
 3054 0006 7860     	 str r0,[r7,#4]
 279:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3056              	.LM184:
 3057 0008 7B68     	 ldr r3,[r7,#4]
 3058 000a 181C     	 mov r0,r3
 3059 000c FFF7FEFF 	 bl _ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_
 3060 0010 031C     	 mov r3,r0
 3061 0012 181C     	 mov r0,r3
 3062 0014 BD46     	 mov sp,r7
 3063 0016 02B0     	 add sp,sp,#8
 3064              	 
 3065 0018 80BD     	 pop {r7,pc}
 3067              	.Lscope52:
 3069              	 .stabd 78,0,0
 3070 001a C046     	 .section .text._ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_,"axG",%progbits,_ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_,comdat
 3071              	 .align 2
 3076              	 .weak _ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_
 3077              	 .code 16
 3078              	 .thumb_func
 3080              	_ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_:
 3081              	 .stabd 46,0,0
 585:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 3083              	.LM185:
 3084              	.LFBB53:
 3085 0000 80B5     	 push {r7,lr}
 3086 0002 86B0     	 sub sp,sp,#24
 3087 0004 00AF     	 add r7,sp,#0
 3088 0006 F860     	 str r0,[r7,#12]
 3089 0008 B960     	 str r1,[r7,#8]
 3090 000a 7A60     	 str r2,[r7,#4]
 3091              	.LBB30:
 593:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3093              	.LM186:
 3094 000c 1723     	 mov r3,#23
 3095 000e FB18     	 add r3,r7,r3
 3096 0010 0122     	 mov r2,#1
 3097 0012 1A70     	 strb r2,[r3]
 598:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 3099              	.LM187:
 3100 0014 F968     	 ldr r1,[r7,#12]
 3101 0016 BA68     	 ldr r2,[r7,#8]
 3102 0018 7B68     	 ldr r3,[r7,#4]
 3103 001a 081C     	 mov r0,r1
 3104 001c 111C     	 mov r1,r2
 3105 001e 1A1C     	 mov r2,r3
 3106 0020 FFF7FEFF 	 bl _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_
 3107 0024 031C     	 mov r3,r0
 3108              	.LBE30:
 599:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3110              	.LM188:
 3111 0026 181C     	 mov r0,r3
 3112 0028 BD46     	 mov sp,r7
 3113 002a 06B0     	 add sp,sp,#24
 3114              	 
 3115 002c 80BD     	 pop {r7,pc}
 3120              	.Lscope53:
 3122              	 .stabd 78,0,0
 3123 002e C046     	 .section .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_,"axG",%progbits,_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_,comdat
 3124              	 .align 2
 3127              	 .weak _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_
 3128              	 .code 16
 3129              	 .thumb_func
 3131              	_ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_:
 3132              	 .stabd 46,0,0
 3134              	.Ltext33:
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static void destroy(_Alloc& __a, pointer __p)
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { __a.destroy(__p); }
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h **** 
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     static size_type max_size(const _Alloc& __a)
 3136              	.LM189:
 3137              	.LFBB54:
 3138 0000 80B5     	 push {r7,lr}
 3139 0002 82B0     	 sub sp,sp,#8
 3140 0004 00AF     	 add r7,sp,#0
 3141 0006 7860     	 str r0,[r7,#4]
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\alloc_traits.h ****     { return __a.max_size(); }
 3143              	.LM190:
 3144 0008 7B68     	 ldr r3,[r7,#4]
 3145 000a 181C     	 mov r0,r3
 3146 000c FFF7FEFF 	 bl _ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv
 3147 0010 031C     	 mov r3,r0
 3148 0012 181C     	 mov r0,r3
 3149 0014 BD46     	 mov sp,r7
 3150 0016 02B0     	 add sp,sp,#8
 3151              	 
 3152 0018 80BD     	 pop {r7,pc}
 3154              	.Lscope54:
 3156              	 .stabd 78,0,0
 3157 001a C046     	 .section .text._ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv,"axG",%progbits,_ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv,comdat
 3158              	 .align 2
 3161              	 .weak _ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
 3162              	 .code 16
 3163              	 .thumb_func
 3165              	_ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv:
 3166              	 .stabd 46,0,0
 3168              	.Ltext34:
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 3170              	.LM191:
 3171              	.LFBB55:
 3172 0000 80B5     	 push {r7,lr}
 3173 0002 82B0     	 sub sp,sp,#8
 3174 0004 00AF     	 add r7,sp,#0
 3175 0006 7860     	 str r0,[r7,#4]
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_vector.h **** 
 3177              	.LM192:
 3178 0008 7B68     	 ldr r3,[r7,#4]
 3179 000a 181C     	 mov r0,r3
 3180 000c BD46     	 mov sp,r7
 3181 000e 02B0     	 add sp,sp,#8
 3182              	 
 3183 0010 80BD     	 pop {r7,pc}
 3185              	.Lscope55:
 3187              	 .stabd 78,0,0
 3188 0012 C046     	 .section .text._ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv,comdat
 3189              	 .align 2
 3193              	 .weak _ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv
 3194              	 .code 16
 3195              	 .thumb_func
 3197              	_ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv:
 3198              	 .stabd 46,0,0
 3200              	.Ltext35:
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { 
 3202              	.LM193:
 3203              	.LFBB56:
 3204 0000 80B5     	 push {r7,lr}
 3205 0002 84B0     	 sub sp,sp,#16
 3206 0004 00AF     	 add r7,sp,#0
 3207 0006 F860     	 str r0,[r7,#12]
 3208 0008 B960     	 str r1,[r7,#8]
 3209 000a 7A60     	 str r2,[r7,#4]
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 3211              	.LM194:
 3212 000c FB68     	 ldr r3,[r7,#12]
 3213 000e 181C     	 mov r0,r3
 3214 0010 FFF7FEFF 	 bl _ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv
 3215 0014 021C     	 mov r2,r0
 3216 0016 BB68     	 ldr r3,[r7,#8]
 3217 0018 9A42     	 cmp r2,r3
 3218 001a 9B41     	 sbc r3,r3,r3
 3219 001c 5B42     	 neg r3,r3
 3220 001e DBB2     	 uxtb r3,r3
 3221 0020 002B     	 cmp r3,#0
 3222 0022 01D0     	 beq .L143
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 3224              	.LM195:
 3225 0024 FFF7FEFF 	 bl _ZSt17__throw_bad_allocv
 3226              	.L143:
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       }
 3228              	.LM196:
 3229 0028 BB68     	 ldr r3,[r7,#8]
 3230 002a 9B00     	 lsl r3,r3,#2
 3231 002c 181C     	 mov r0,r3
 3232 002e FFF7FEFF 	 bl _Znwj
 3233 0032 031C     	 mov r3,r0
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 3235              	.LM197:
 3236 0034 181C     	 mov r0,r3
 3237 0036 BD46     	 mov sp,r7
 3238 0038 04B0     	 add sp,sp,#16
 3239              	 
 3240 003a 80BD     	 pop {r7,pc}
 3242              	.Lscope56:
 3244              	 .stabd 78,0,0
 3245              	 .section .text._ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_,"axG",%progbits,_ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_,comdat
 3246              	 .align 2
 3251              	 .weak _ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_
 3252              	 .code 16
 3253              	 .thumb_func
 3255              	_ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_:
 3256              	 .stabd 46,0,0
 3258              	.Ltext36:
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 3260              	.LM198:
 3261              	.LFBB57:
 3262 0000 80B5     	 push {r7,lr}
 3263 0002 86B0     	 sub sp,sp,#24
 3264 0004 00AF     	 add r7,sp,#0
 3265 0006 F860     	 str r0,[r7,#12]
 3266 0008 B960     	 str r1,[r7,#8]
 3267 000a 7A60     	 str r2,[r7,#4]
 3268              	.LBB31:
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** #else
 3270              	.LM199:
 3271 000c 1723     	 mov r3,#23
 3272 000e FB18     	 add r3,r7,r3
 3273 0010 0122     	 mov r2,#1
 3274 0012 1A70     	 strb r2,[r3]
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     }
 3276              	.LM200:
 3277 0014 F968     	 ldr r1,[r7,#12]
 3278 0016 BA68     	 ldr r2,[r7,#8]
 3279 0018 7B68     	 ldr r3,[r7,#4]
 3280 001a 081C     	 mov r0,r1
 3281 001c 111C     	 mov r1,r2
 3282 001e 1A1C     	 mov r2,r3
 3283 0020 FFF7FEFF 	 bl _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_
 3284 0024 031C     	 mov r3,r0
 3285              	.LBE31:
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 
 3287              	.LM201:
 3288 0026 181C     	 mov r0,r3
 3289 0028 BD46     	 mov sp,r7
 3290 002a 06B0     	 add sp,sp,#24
 3291              	 
 3292 002c 80BD     	 pop {r7,pc}
 3297              	.Lscope57:
 3299              	 .stabd 78,0,0
 3300 002e C046     	 .section .text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_,"axG",%progbits,_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_,comdat
 3301              	 .align 2
 3306              	 .weak _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_
 3307              	 .code 16
 3308              	 .thumb_func
 3310              	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_:
 3311              	 .stabd 46,0,0
 3313              	.Ltext37:
 569:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 3315              	.LM202:
 3316              	.LFBB58:
 3317 0000 80B5     	 push {r7,lr}
 3318 0002 86B0     	 sub sp,sp,#24
 3319 0004 00AF     	 add r7,sp,#0
 3320 0006 F860     	 str r0,[r7,#12]
 3321 0008 B960     	 str r1,[r7,#8]
 3322 000a 7A60     	 str r2,[r7,#4]
 3323              	.LBB32:
 576:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  if (_Num)
 3325              	.LM203:
 3326 000c BA68     	 ldr r2,[r7,#8]
 3327 000e FB68     	 ldr r3,[r7,#12]
 3328 0010 D31A     	 sub r3,r2,r3
 3329 0012 9B10     	 asr r3,r3,#2
 3330 0014 7B61     	 str r3,[r7,#20]
 577:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 3332              	.LM204:
 3333 0016 7B69     	 ldr r3,[r7,#20]
 3334 0018 002B     	 cmp r3,#0
 3335 001a 0CD0     	 beq .L148
 578:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result - _Num;
 3337              	.LM205:
 3338 001c 7B69     	 ldr r3,[r7,#20]
 3339 001e 9B00     	 lsl r3,r3,#2
 3340 0020 5B42     	 neg r3,r3
 3341 0022 7A68     	 ldr r2,[r7,#4]
 3342 0024 D118     	 add r1,r2,r3
 3343 0026 7B69     	 ldr r3,[r7,#20]
 3344 0028 9B00     	 lsl r3,r3,#2
 3345 002a FA68     	 ldr r2,[r7,#12]
 3346 002c 081C     	 mov r0,r1
 3347 002e 111C     	 mov r1,r2
 3348 0030 1A1C     	 mov r2,r3
 3349 0032 FFF7FEFF 	 bl memmove
 3350              	.L148:
 579:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 3352              	.LM206:
 3353 0036 7B69     	 ldr r3,[r7,#20]
 3354 0038 9B00     	 lsl r3,r3,#2
 3355 003a 5B42     	 neg r3,r3
 3356 003c 7A68     	 ldr r2,[r7,#4]
 3357 003e D318     	 add r3,r2,r3
 3358              	.LBE32:
 580:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 3360              	.LM207:
 3361 0040 181C     	 mov r0,r3
 3362 0042 BD46     	 mov sp,r7
 3363 0044 06B0     	 add sp,sp,#24
 3364              	 
 3365 0046 80BD     	 pop {r7,pc}
 3370              	.Lscope58:
 3372              	 .stabd 78,0,0
 3373              	 .section .text._ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv,"axG",%progbits,_ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv,comdat
 3374              	 .align 2
 3377              	 .weak _ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv
 3378              	 .code 16
 3379              	 .thumb_func
 3381              	_ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv:
 3382              	 .stabd 46,0,0
 3384              	.Ltext38:
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 3386              	.LM208:
 3387              	.LFBB59:
 3388 0000 80B5     	 push {r7,lr}
 3389 0002 82B0     	 sub sp,sp,#8
 3390 0004 00AF     	 add r7,sp,#0
 3391 0006 7860     	 str r0,[r7,#4]
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\ext\new_allocator.h **** 
 3393              	.LM209:
 3394 0008 024B     	 ldr r3,.L152
 3395 000a 181C     	 mov r0,r3
 3396 000c BD46     	 mov sp,r7
 3397 000e 02B0     	 add sp,sp,#8
 3398              	 
 3399 0010 80BD     	 pop {r7,pc}
 3400              	.L153:
 3401 0012 C046     	 .align 2
 3402              	.L152:
 3403 0014 FFFFFF3F 	 .word 1073741823
 3405              	.Lscope59:
 3407              	 .stabd 78,0,0
 3408              	 .section .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_,"axG",%progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_,comdat
 3409              	 .align 2
 3414              	 .weak _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_
 3415              	 .code 16
 3416              	 .thumb_func
 3418              	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_:
 3419              	 .stabd 46,0,0
 3421              	.Ltext39:
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 3423              	.LM210:
 3424              	.LFBB60:
 3425 0000 80B5     	 push {r7,lr}
 3426 0002 84B0     	 sub sp,sp,#16
 3427 0004 00AF     	 add r7,sp,#0
 3428 0006 F860     	 str r0,[r7,#12]
 3429 0008 B960     	 str r1,[r7,#8]
 3430 000a 7A60     	 str r2,[r7,#4]
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_uninitialized.h ****     };
 3432              	.LM211:
 3433 000c F968     	 ldr r1,[r7,#12]
 3434 000e BA68     	 ldr r2,[r7,#8]
 3435 0010 7B68     	 ldr r3,[r7,#4]
 3436 0012 081C     	 mov r0,r1
 3437 0014 111C     	 mov r1,r2
 3438 0016 1A1C     	 mov r2,r3
 3439 0018 FFF7FEFF 	 bl _ZSt4copyIPP5FloorS2_ET0_T_S4_S3_
 3440 001c 031C     	 mov r3,r0
 3441 001e 181C     	 mov r0,r3
 3442 0020 BD46     	 mov sp,r7
 3443 0022 04B0     	 add sp,sp,#16
 3444              	 
 3445 0024 80BD     	 pop {r7,pc}
 3447              	.Lscope60:
 3449              	 .stabd 78,0,0
 3450 0026 C046     	 .section .text._ZSt4copyIPP5FloorS2_ET0_T_S4_S3_,"axG",%progbits,_ZSt4copyIPP5FloorS2_ET0_T_S4_S3_,comdat
 3451              	 .align 2
 3456              	 .weak _ZSt4copyIPP5FloorS2_ET0_T_S4_S3_
 3457              	 .code 16
 3458              	 .thumb_func
 3460              	_ZSt4copyIPP5FloorS2_ET0_T_S4_S3_:
 3461              	 .stabd 46,0,0
 3463              	.Ltext40:
 456:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 3465              	.LM212:
 3466              	.LFBB61:
 3467 0000 90B5     	 push {r4,r7,lr}
 3468 0002 85B0     	 sub sp,sp,#20
 3469 0004 00AF     	 add r7,sp,#0
 3470 0006 F860     	 str r0,[r7,#12]
 3471 0008 B960     	 str r1,[r7,#8]
 3472 000a 7A60     	 str r2,[r7,#4]
 466:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 3474              	.LM213:
 3475 000c FB68     	 ldr r3,[r7,#12]
 3476 000e 181C     	 mov r0,r3
 3477 0010 FFF7FEFF 	 bl _ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_
 3478 0014 041C     	 mov r4,r0
 3479 0016 BB68     	 ldr r3,[r7,#8]
 3480 0018 181C     	 mov r0,r3
 3481 001a FFF7FEFF 	 bl _ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_
 3482 001e 021C     	 mov r2,r0
 3483 0020 7B68     	 ldr r3,[r7,#4]
 3484 0022 201C     	 mov r0,r4
 3485 0024 111C     	 mov r1,r2
 3486 0026 1A1C     	 mov r2,r3
 3487 0028 FFF7FEFF 	 bl _ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_
 3488 002c 031C     	 mov r3,r0
 467:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3490              	.LM214:
 3491 002e 181C     	 mov r0,r3
 3492 0030 BD46     	 mov sp,r7
 3493 0032 05B0     	 add sp,sp,#20
 3494              	 
 3495 0034 90BD     	 pop {r4,r7,pc}
 3497              	.Lscope61:
 3499              	 .stabd 78,0,0
 3500 0036 C046     	 .section .text._ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_,"axG",%progbits,_ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_,comdat
 3501              	 .align 2
 3506              	 .weak _ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_
 3507              	 .code 16
 3508              	 .thumb_func
 3510              	_ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_:
 3511              	 .stabd 46,0,0
 430:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 3513              	.LM215:
 3514              	.LFBB62:
 3515 0000 B0B5     	 push {r4,r5,r7,lr}
 3516 0002 84B0     	 sub sp,sp,#16
 3517 0004 00AF     	 add r7,sp,#0
 3518 0006 F860     	 str r0,[r7,#12]
 3519 0008 B960     	 str r1,[r7,#8]
 3520 000a 7A60     	 str r2,[r7,#4]
 434:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 3522              	.LM216:
 3523 000c FB68     	 ldr r3,[r7,#12]
 3524 000e 181C     	 mov r0,r3
 3525 0010 FFF7FEFF 	 bl _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 3526 0014 051C     	 mov r5,r0
 3527 0016 BB68     	 ldr r3,[r7,#8]
 3528 0018 181C     	 mov r0,r3
 3529 001a FFF7FEFF 	 bl _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 3530 001e 041C     	 mov r4,r0
 3531 0020 7B68     	 ldr r3,[r7,#4]
 3532 0022 181C     	 mov r0,r3
 3533 0024 FFF7FEFF 	 bl _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
 3534 0028 031C     	 mov r3,r0
 3535 002a 281C     	 mov r0,r5
 3536 002c 211C     	 mov r1,r4
 3537 002e 1A1C     	 mov r2,r3
 3538 0030 FFF7FEFF 	 bl _ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_
 3539 0034 031C     	 mov r3,r0
 435:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3541              	.LM217:
 3542 0036 181C     	 mov r0,r3
 3543 0038 BD46     	 mov sp,r7
 3544 003a 04B0     	 add sp,sp,#16
 3545              	 
 3546 003c B0BD     	 pop {r4,r5,r7,pc}
 3548              	.Lscope62:
 3550              	 .stabd 78,0,0
 3551 003e C046     	 .section .text._ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_,"axG",%progbits,_ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_,comdat
 3552              	 .align 2
 3557              	 .weak _ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_
 3558              	 .code 16
 3559              	 .thumb_func
 3561              	_ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_:
 3562              	 .stabd 46,0,0
 385:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     {
 3564              	.LM218:
 3565              	.LFBB63:
 3566 0000 80B5     	 push {r7,lr}
 3567 0002 86B0     	 sub sp,sp,#24
 3568 0004 00AF     	 add r7,sp,#0
 3569 0006 F860     	 str r0,[r7,#12]
 3570 0008 B960     	 str r1,[r7,#8]
 3571 000a 7A60     	 str r2,[r7,#4]
 3572              	.LBB33:
 393:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3574              	.LM219:
 3575 000c 1723     	 mov r3,#23
 3576 000e FB18     	 add r3,r7,r3
 3577 0010 0122     	 mov r2,#1
 3578 0012 1A70     	 strb r2,[r3]
 396:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     }
 3580              	.LM220:
 3581 0014 F968     	 ldr r1,[r7,#12]
 3582 0016 BA68     	 ldr r2,[r7,#8]
 3583 0018 7B68     	 ldr r3,[r7,#4]
 3584 001a 081C     	 mov r0,r1
 3585 001c 111C     	 mov r1,r2
 3586 001e 1A1C     	 mov r2,r3
 3587 0020 FFF7FEFF 	 bl _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_
 3588 0024 031C     	 mov r3,r0
 3589              	.LBE33:
 397:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 
 3591              	.LM221:
 3592 0026 181C     	 mov r0,r3
 3593 0028 BD46     	 mov sp,r7
 3594 002a 06B0     	 add sp,sp,#24
 3595              	 
 3596 002c 80BD     	 pop {r7,pc}
 3601              	.Lscope63:
 3603              	 .stabd 78,0,0
 3604 002e C046     	 .section .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_,"axG",%progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_,comdat
 3605              	 .align 2
 3610              	 .weak _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_
 3611              	 .code 16
 3612              	 .thumb_func
 3614              	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_:
 3615              	 .stabd 46,0,0
 369:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****         {
 3617              	.LM222:
 3618              	.LFBB64:
 3619 0000 80B5     	 push {r7,lr}
 3620 0002 86B0     	 sub sp,sp,#24
 3621 0004 00AF     	 add r7,sp,#0
 3622 0006 F860     	 str r0,[r7,#12]
 3623 0008 B960     	 str r1,[r7,#8]
 3624 000a 7A60     	 str r2,[r7,#4]
 3625              	.LBB34:
 376:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  if (_Num)
 3627              	.LM223:
 3628 000c BA68     	 ldr r2,[r7,#8]
 3629 000e FB68     	 ldr r3,[r7,#12]
 3630 0010 D31A     	 sub r3,r2,r3
 3631 0012 9B10     	 asr r3,r3,#2
 3632 0014 7B61     	 str r3,[r7,#20]
 377:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 3634              	.LM224:
 3635 0016 7B69     	 ldr r3,[r7,#20]
 3636 0018 002B     	 cmp r3,#0
 3637 001a 08D0     	 beq .L163
 378:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	  return __result + _Num;
 3639              	.LM225:
 3640 001c 7B69     	 ldr r3,[r7,#20]
 3641 001e 9B00     	 lsl r3,r3,#2
 3642 0020 7968     	 ldr r1,[r7,#4]
 3643 0022 FA68     	 ldr r2,[r7,#12]
 3644 0024 081C     	 mov r0,r1
 3645 0026 111C     	 mov r1,r2
 3646 0028 1A1C     	 mov r2,r3
 3647 002a FFF7FEFF 	 bl memmove
 3648              	.L163:
 379:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h **** 	}
 3650              	.LM226:
 3651 002e 7B69     	 ldr r3,[r7,#20]
 3652 0030 9B00     	 lsl r3,r3,#2
 3653 0032 7A68     	 ldr r2,[r7,#4]
 3654 0034 D318     	 add r3,r2,r3
 3655              	.LBE34:
 380:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\bits\stl_algobase.h ****     };
 3657              	.LM227:
 3658 0036 181C     	 mov r0,r3
 3659 0038 BD46     	 mov sp,r7
 3660 003a 06B0     	 add sp,sp,#24
 3661              	 
 3662 003c 80BD     	 pop {r7,pc}
 3667              	.Lscope64:
 3669              	 .stabd 78,0,0
 3670              	 .global _ZTV4Cube
 3671 003e C046     	 .section .rodata._ZTV4Cube,"a",%progbits
 3672              	 .align 3
 3675              	_ZTV4Cube:
 3676 0000 00000000 	 .word 0
 3677 0004 00000000 	 .word 0
 3678 0008 00000000 	 .word _ZN4CubeD1Ev
 3679 000c 00000000 	 .word _ZN4CubeD0Ev
 3680              	 .text
 3682              	.Letext0:
 3683              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 Cube.cpp
    {standard input}:506    .text._ZnwjPv:00000000 $t
    {standard input}:513    .text._ZnwjPv:00000000 _ZnwjPv
    {standard input}:538    .text._ZL20__gthread_key_deletei:00000000 $t
    {standard input}:544    .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
    {standard input}:570    .text._ZN4CubeC2Ev:00000000 $t
    {standard input}:577    .text._ZN4CubeC2Ev:00000000 _ZN4CubeC2Ev
    {standard input}:1027   .text._ZNSt6vectorIP5FloorSaIS1_EEC2Ev:00000000 _ZNSt6vectorIP5FloorSaIS1_EEC1Ev
    {standard input}:613    .text._ZN4CubeC2Ev:0000002c $d
    {standard input}:3675   .rodata._ZTV4Cube:00000000 _ZTV4Cube
    {standard input}:577    .text._ZN4CubeC2Ev:00000000 _ZN4CubeC1Ev
    {standard input}:621    .text._ZN4CubeD2Ev:00000000 $t
    {standard input}:628    .text._ZN4CubeD2Ev:00000000 _ZN4CubeD2Ev
    {standard input}:1065   .text._ZNSt6vectorIP5FloorSaIS1_EED2Ev:00000000 _ZNSt6vectorIP5FloorSaIS1_EED1Ev
    {standard input}:673    .text._ZN4CubeD2Ev:00000038 $d
    {standard input}:628    .text._ZN4CubeD2Ev:00000000 _ZN4CubeD1Ev
    {standard input}:681    .text._ZN4CubeD0Ev:00000000 $t
    {standard input}:688    .text._ZN4CubeD0Ev:00000000 _ZN4CubeD0Ev
    {standard input}:716    .text._ZN4Cube8addFloorEP5Floor:00000000 $t
    {standard input}:724    .text._ZN4Cube8addFloorEP5Floor:00000000 _ZN4Cube8addFloorEP5Floor
    {standard input}:1118   .text._ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_:00000000 _ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_
    {standard input}:753    .text._ZN4Cube4playEP5FloorP13FloorRegister:00000000 $t
    {standard input}:762    .text._ZN4Cube4playEP5FloorP13FloorRegister:00000000 _ZN4Cube4playEP5FloorP13FloorRegister
    {standard input}:839    .text._ZN4Cube4playEP5Frame:00000000 $t
    {standard input}:847    .text._ZN4Cube4playEP5Frame:00000000 _ZN4Cube4playEP5Frame
    {standard input}:1188   .text._ZNSt6vectorIP5FloorSaIS1_EEixEj:00000000 _ZNSt6vectorIP5FloorSaIS1_EEixEj
    {standard input}:932    .text._ZN4Cube4playEP5Frame:00000070 $d
    {standard input}:946    .text._ZN4Cube4playESt6vectorIP5FrameSaIS2_EE:00000000 $t
    {standard input}:954    .text._ZN4Cube4playESt6vectorIP5FrameSaIS2_EE:00000000 _ZN4Cube4playESt6vectorIP5FrameSaIS2_EE
    {standard input}:1258   .text._ZNSt6vectorIP5FrameSaIS1_EEixEj:00000000 _ZNSt6vectorIP5FrameSaIS1_EEixEj
    {standard input}:1222   .text._ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv:00000000 _ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv
    {standard input}:1020   .text._ZNSt6vectorIP5FloorSaIS1_EEC2Ev:00000000 $t
    {standard input}:1027   .text._ZNSt6vectorIP5FloorSaIS1_EEC2Ev:00000000 _ZNSt6vectorIP5FloorSaIS1_EEC2Ev
    {standard input}:1328   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev
    {standard input}:1058   .text._ZNSt6vectorIP5FloorSaIS1_EED2Ev:00000000 $t
    {standard input}:1065   .text._ZNSt6vectorIP5FloorSaIS1_EED2Ev:00000000 _ZNSt6vectorIP5FloorSaIS1_EED2Ev
    {standard input}:1419   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
    {standard input}:1449   .text._ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E:00000000 _ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E
    {standard input}:1364   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev
    {standard input}:1110   .text._ZNSt6vectorIP5FloorSaIS1_EE9push_backERKS1_:00000000 $t
    {standard input}:1489   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_:00000000 _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_
    {standard input}:1812   .text._ZNSt6vectorIP5FloorSaIS1_EE3endEv:00000000 _ZNSt6vectorIP5FloorSaIS1_EE3endEv
    {standard input}:1533   .text._ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_:00000000 _ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
    {standard input}:1180   .text._ZNSt6vectorIP5FloorSaIS1_EEixEj:00000000 $t
    {standard input}:1215   .text._ZNKSt6vectorIP5FrameSaIS1_EE4sizeEv:00000000 $t
    {standard input}:1250   .text._ZNSt6vectorIP5FrameSaIS1_EEixEj:00000000 $t
    {standard input}:1285   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev:00000000 $t
    {standard input}:1292   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev
    {standard input}:1897   .text._ZNSaIP5FloorED2Ev:00000000 _ZNSaIP5FloorED2Ev
    {standard input}:1292   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD1Ev
    {standard input}:1321   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev:00000000 $t
    {standard input}:1850   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC1Ev
    {standard input}:1328   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EEC2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EEC1Ev
    {standard input}:1357   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev:00000000 $t
    {standard input}:1937   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j
    {standard input}:1364   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EED2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EED1Ev
    {standard input}:1412   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv:00000000 $t
    {standard input}:1441   .text._ZSt8_DestroyIPP5FloorS1_EvT_S3_RSaIT0_E:00000000 $t
    {standard input}:1986   .text._ZSt8_DestroyIPP5FloorEvT_S3_:00000000 _ZSt8_DestroyIPP5FloorEvT_S3_
    {standard input}:1480   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE9constructIS2_EEvRS3_PS2_RKT_:00000000 $t
    {standard input}:2027   .text._ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_
    {standard input}:1520   .rodata:00000000 $d
    {standard input}:1524   .text._ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_:00000000 $t
    {standard input}:2072   .text._ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv:00000000 _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv
    {standard input}:2105   .text._ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_:00000000 _ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_
    {standard input}:2153   .text._ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv:00000000 _ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv
    {standard input}:2187   .text._ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc:00000000 _ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc
    {standard input}:2301   .text._ZNSt6vectorIP5FloorSaIS1_EE5beginEv:00000000 _ZNSt6vectorIP5FloorSaIS1_EE5beginEv
    {standard input}:2337   .text._ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_:00000000 _ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
    {standard input}:2382   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj
    {standard input}:2437   .text._ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_:00000000 _ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_
    {standard input}:1790   .text._ZNSt6vectorIP5FloorSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_:00000190 $d
    {standard input}:1805   .text._ZNSt6vectorIP5FloorSaIS1_EE3endEv:00000000 $t
    {standard input}:2479   .text._ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_:00000000 _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC1ERKS3_
    {standard input}:1843   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev:00000000 $t
    {standard input}:1850   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC2Ev
    {standard input}:2519   .text._ZNSaIP5FloorEC2Ev:00000000 _ZNSaIP5FloorEC2Ev
    {standard input}:1890   .text._ZNSaIP5FloorED2Ev:00000000 $t
    {standard input}:2557   .text._ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev
    {standard input}:1897   .text._ZNSaIP5FloorED2Ev:00000000 _ZNSaIP5FloorED1Ev
    {standard input}:1928   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE13_M_deallocateEPS1_j:00000000 $t
    {standard input}:2592   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j:00000000 _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j
    {standard input}:1978   .text._ZSt8_DestroyIPP5FloorEvT_S3_:00000000 $t
    {standard input}:2629   .text._ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_:00000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_
    {standard input}:2018   .text._ZN9__gnu_cxx13new_allocatorIP5FloorE9constructEPS2_RKS2_:00000000 $t
    {standard input}:2065   .text._ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEE4baseEv:00000000 $t
    {standard input}:2096   .text._ZSt13copy_backwardIPP5FloorS2_ET0_T_S4_S3_:00000000 $t
    {standard input}:2659   .text._ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_:00000000 _ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_
    {standard input}:2695   .text._ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 _ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_
    {standard input}:2146   .text._ZNK9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEdeEv:00000000 $t
    {standard input}:2178   .text._ZNKSt6vectorIP5FloorSaIS1_EE12_M_check_lenEjPKc:00000000 $t
    {standard input}:2781   .text._ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv:00000000 _ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv
    {standard input}:2744   .text._ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv:00000000 _ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv
    {standard input}:2817   .text._ZSt3maxIjERKT_S2_S2_:00000000 _ZSt3maxIjERKT_S2_S2_
    {standard input}:2294   .text._ZNSt6vectorIP5FloorSaIS1_EE5beginEv:00000000 $t
    {standard input}:2329   .text._ZN9__gnu_cxxmiIPP5FloorSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_:00000000 $t
    {standard input}:2374   .text._ZNSt12_Vector_baseIP5FloorSaIS1_EE11_M_allocateEj:00000000 $t
    {standard input}:2866   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j:00000000 _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j
    {standard input}:2427   .text._ZSt34__uninitialized_move_if_noexcept_aIPP5FloorS2_SaIS1_EET0_T_S5_S4_RT1_:00000000 $t
    {standard input}:2906   .text._ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E:00000000 _ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E
    {standard input}:2471   .text._ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_:00000000 $t
    {standard input}:2479   .text._ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_:00000000 _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC2ERKS3_
    {standard input}:2512   .text._ZNSaIP5FloorEC2Ev:00000000 $t
    {standard input}:2947   .text._ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev
    {standard input}:2519   .text._ZNSaIP5FloorEC2Ev:00000000 _ZNSaIP5FloorEC1Ev
    {standard input}:2550   .text._ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev:00000000 $t
    {standard input}:2557   .text._ZN9__gnu_cxx13new_allocatorIP5FloorED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorED1Ev
    {standard input}:2583   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE10deallocateERS3_PS2_j:00000000 $t
    {standard input}:2981   .text._ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j
    {standard input}:2623   .text._ZNSt12_Destroy_auxILb1EE9__destroyIPP5FloorEEvT_S5_:00000000 $t
    {standard input}:2652   .text._ZSt12__miter_baseIPP5FloorENSt11_Miter_baseIT_E13iterator_typeES4_:00000000 $t
    {standard input}:3013   .text._ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_:00000000 _ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_
    {standard input}:2686   .text._ZSt23__copy_move_backward_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 $t
    {standard input}:3044   .text._ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_:00000000 _ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_
    {standard input}:3080   .text._ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 _ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_
    {standard input}:2737   .text._ZNKSt6vectorIP5FloorSaIS1_EE4sizeEv:00000000 $t
    {standard input}:2774   .text._ZNKSt6vectorIP5FloorSaIS1_EE8max_sizeEv:00000000 $t
    {standard input}:3165   .text._ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv:00000000 _ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv
    {standard input}:3131   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_:00000000 _ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_
    {standard input}:2809   .text._ZSt3maxIjERKT_S2_S2_:00000000 $t
    {standard input}:2858   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8allocateERS3_j:00000000 $t
    {standard input}:3197   .text._ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv
    {standard input}:2897   .text._ZSt22__uninitialized_copy_aIPP5FloorS2_S1_ET0_T_S4_S3_RSaIT1_E:00000000 $t
    {standard input}:3255   .text._ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_:00000000 _ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_
    {standard input}:2940   .text._ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev:00000000 $t
    {standard input}:2947   .text._ZN9__gnu_cxx13new_allocatorIP5FloorEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorEC1Ev
    {standard input}:2973   .text._ZN9__gnu_cxx13new_allocatorIP5FloorE10deallocateEPS2_j:00000000 $t
    {standard input}:3006   .text._ZNSt10_Iter_baseIPP5FloorLb0EE7_S_baseES2_:00000000 $t
    {standard input}:3037   .text._ZSt12__niter_baseIPP5FloorENSt11_Niter_baseIT_E13iterator_typeES4_:00000000 $t
    {standard input}:3071   .text._ZSt22__copy_move_backward_aILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 $t
    {standard input}:3310   .text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_:00000000 _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_
    {standard input}:3124   .text._ZN9__gnu_cxx14__alloc_traitsISaIP5FloorEE8max_sizeERKS3_:00000000 $t
    {standard input}:3381   .text._ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv:00000000 _ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv
    {standard input}:3158   .text._ZNKSt12_Vector_baseIP5FloorSaIS1_EE19_M_get_Tp_allocatorEv:00000000 $t
    {standard input}:3189   .text._ZN9__gnu_cxx13new_allocatorIP5FloorE8allocateEjPKv:00000000 $t
    {standard input}:3246   .text._ZSt18uninitialized_copyIPP5FloorS2_ET0_T_S4_S3_:00000000 $t
    {standard input}:3418   .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_:00000000 _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_
    {standard input}:3301   .text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP5FloorEEPT_PKS5_S8_S6_:00000000 $t
    {standard input}:3374   .text._ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv:00000000 $t
    {standard input}:3403   .text._ZNK9__gnu_cxx13new_allocatorIP5FloorE8max_sizeEv:00000014 $d
    {standard input}:3409   .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP5FloorS4_EET0_T_S6_S5_:00000000 $t
    {standard input}:3460   .text._ZSt4copyIPP5FloorS2_ET0_T_S4_S3_:00000000 _ZSt4copyIPP5FloorS2_ET0_T_S4_S3_
    {standard input}:3451   .text._ZSt4copyIPP5FloorS2_ET0_T_S4_S3_:00000000 $t
    {standard input}:3510   .text._ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 _ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_
    {standard input}:3501   .text._ZSt14__copy_move_a2ILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 $t
    {standard input}:3561   .text._ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 _ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_
    {standard input}:3552   .text._ZSt13__copy_move_aILb0EPP5FloorS2_ET1_T0_S4_S3_:00000000 $t
    {standard input}:3614   .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_:00000000 _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_
    {standard input}:3605   .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP5FloorEEPT_PKS5_S8_S6_:00000000 $t
    {standard input}:3672   .rodata._ZTV4Cube:00000000 $d
                           .group:00000000 _ZNSt6vectorIP5FloorSaIS1_EEC5Ev
                           .group:00000000 _ZNSt6vectorIP5FloorSaIS1_EED5Ev
                           .group:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implD5Ev
                           .group:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EEC5Ev
                           .group:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EED5Ev
                           .group:00000000 _ZNSt12_Vector_baseIP5FloorSaIS1_EE12_Vector_implC5Ev
                           .group:00000000 _ZNSaIP5FloorED5Ev
                           .group:00000000 _ZN9__gnu_cxx17__normal_iteratorIPP5FloorSt6vectorIS2_SaIS2_EEEC5ERKS3_
                           .group:00000000 _ZNSaIP5FloorEC5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorED5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorIP5FloorEC5Ev

UNDEFINED SYMBOLS
_ZN7XObjectC2Ev
_ZN7XObjectD2Ev
_ZdlPv
_ZN5Floor5beginEv
_ZN13FloorRegister8getValueEi
_ZN5Floor4pushEh
_ZN5Floor3endEv
_ZN13FloorRegister5countEv
_ZN5Frame12getFloorDataEj
_ZN5Frame14getFloorsCountEv
_ZN7XObject5delayEj
_ZSt20__throw_length_errorPKc
_ZSt17__throw_bad_allocv
_Znwj
memmove
