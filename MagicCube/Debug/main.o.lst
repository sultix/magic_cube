   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.cpp"
  16              	 .text
  17              	.Ltext0:
 511              	 .section .text.NVIC_SetPriority,"ax",%progbits
 512              	 .align 2
 516              	 .code 16
 517              	 .thumb_func
 519              	NVIC_SetPriority:
 520              	 .stabd 46,0,0
 522              	.Ltext1:
   1:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  * @version  V4.30
   5:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  * @date     20. October 2015
   6:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
   9:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    All rights reserved.
  10:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    - Redistributions of source code must retain the above copyright
  13:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      documentation and/or other materials provided with the distribution.
  17:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      to endorse or promote products derived from this software without
  19:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      specific prior written permission.
  20:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    *
  21:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    ---------------------------------------------------------------------------*/
  33:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  34:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  35:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  36:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  39:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
  40:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  41:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  42:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  43:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  44:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  45:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  46:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  47:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  extern "C" {
  48:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
  49:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  50:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
  51:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  54:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  56:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  57:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  59:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  60:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  62:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
  63:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  64:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  65:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  66:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  67:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  68:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
  69:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  70:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
  71:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
  72:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  73:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  74:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  77:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  79:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
  80:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  81:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  82:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #if   defined ( __CC_ARM )
  83:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  86:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  87:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  91:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  92:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  93:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
  96:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
  97:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  98:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __packed
 113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #else
 118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #error Unknown compiler
 119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
 120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
 123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** */
 124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
 125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
 127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
 128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
 133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
 137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
 142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
 143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
 162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
 169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  extern "C" {
 179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
 180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #endif
 197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
 198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** */
 207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #else
 210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #endif
 212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   Core Register contain:
 227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core Register
 228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** */
 236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef union
 248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   struct
 250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** } APSR_Type;
 259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef union
 278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   struct
 280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef union
 296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   struct
 298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef union
 335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   struct
 337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef struct
 363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef struct
 390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** } SCB_Type;
 401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** typedef struct
 497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 547:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 548:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 549:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 550:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 551:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 552:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 553:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 554:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 555:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 556:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 558:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field.
 559:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 560:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** */
 561:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 562:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 563:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 564:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 565:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 566:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register.
 567:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 568:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** */
 569:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 570:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 571:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 572:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 573:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 574:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 575:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 576:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 577:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 578:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 579:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 580:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 581:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 582:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 583:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 584:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 585:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 586:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 587:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 588:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 589:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 590:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 591:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 592:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} */
 593:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 594:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 595:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 596:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 597:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 598:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 599:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 600:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 601:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 602:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 603:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 604:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 605:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** */
 606:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 607:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 608:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 609:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 610:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 611:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 612:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 613:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 614:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 615:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 616:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 617:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 618:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 619:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 620:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 621:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 622:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 623:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 624:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 625:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Enable External Interrupt
 626:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 627:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 628:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 629:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 630:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 631:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 632:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 633:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 634:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 635:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 636:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Disable External Interrupt
 637:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 638:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 639:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 640:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 641:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 642:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 643:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 644:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 645:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 646:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 647:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 648:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 649:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 650:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 651:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 652:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 653:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 654:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 655:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 656:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 657:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 658:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 659:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 660:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 661:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of an external interrupt.
 662:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 663:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 664:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 665:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 666:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 667:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 668:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 669:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 670:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 671:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 672:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of an external interrupt.
 673:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 674:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 675:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 676:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 677:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 678:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 679:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 680:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 681:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 682:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 683:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Sets the priority of an interrupt.
 684:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every core interrupt.
 685:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 686:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 687:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 688:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 689:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 524              	.LM0:
 525              	.LFBB1:
 526 0000 B0B5     	 push {r4,r5,r7,lr}
 527 0002 82B0     	 sub sp,sp,#8
 528 0004 00AF     	 add r7,sp,#0
 529 0006 021C     	 mov r2,r0
 530 0008 3960     	 str r1,[r7]
 531 000a FB1D     	 add r3,r7,#7
 532 000c 1A70     	 strb r2,[r3]
 690:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 534              	.LM1:
 535 000e FB1D     	 add r3,r7,#7
 536 0010 1B78     	 ldrb r3,[r3]
 537 0012 7F2B     	 cmp r3,#127
 538 0014 2FD9     	 bls .L2
 691:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 692:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 540              	.LM2:
 541 0016 2D4C     	 ldr r4,.L4
 542 0018 FB1D     	 add r3,r7,#7
 543 001a 1B78     	 ldrb r3,[r3]
 544 001c 1A1C     	 mov r2,r3
 545 001e 0F23     	 mov r3,#15
 546 0020 1340     	 and r3,r2
 547 0022 083B     	 sub r3,r3,#8
 548 0024 9908     	 lsr r1,r3,#2
 549 0026 294A     	 ldr r2,.L4
 550 0028 FB1D     	 add r3,r7,#7
 551 002a 1B78     	 ldrb r3,[r3]
 552 002c 181C     	 mov r0,r3
 553 002e 0F23     	 mov r3,#15
 554 0030 0340     	 and r3,r0
 555 0032 083B     	 sub r3,r3,#8
 556 0034 9B08     	 lsr r3,r3,#2
 557 0036 0633     	 add r3,r3,#6
 558 0038 9B00     	 lsl r3,r3,#2
 559 003a D318     	 add r3,r2,r3
 560 003c 5B68     	 ldr r3,[r3,#4]
 561 003e FA1D     	 add r2,r7,#7
 562 0040 1278     	 ldrb r2,[r2]
 563 0042 101C     	 mov r0,r2
 564 0044 0322     	 mov r2,#3
 565 0046 0240     	 and r2,r0
 566 0048 D200     	 lsl r2,r2,#3
 567 004a 101C     	 mov r0,r2
 568 004c FF22     	 mov r2,#255
 569 004e 8240     	 lsl r2,r2,r0
 570 0050 D243     	 mvn r2,r2
 571 0052 1A40     	 and r2,r3
 693:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 573              	.LM3:
 574 0054 3B68     	 ldr r3,[r7]
 575 0056 9B01     	 lsl r3,r3,#6
 576 0058 FF20     	 mov r0,#255
 577 005a 0340     	 and r3,r0
 578 005c F81D     	 add r0,r7,#7
 579 005e 0078     	 ldrb r0,[r0]
 580 0060 051C     	 mov r5,r0
 581 0062 0320     	 mov r0,#3
 582 0064 2840     	 and r0,r5
 583 0066 C000     	 lsl r0,r0,#3
 584 0068 8340     	 lsl r3,r3,r0
 692:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 586              	.LM4:
 587 006a 1A43     	 orr r2,r3
 589              	.LM5:
 590 006c 8B1D     	 add r3,r1,#6
 591 006e 9B00     	 lsl r3,r3,#2
 592 0070 E318     	 add r3,r4,r3
 593 0072 5A60     	 str r2,[r3,#4]
 594 0074 26E0     	 b .L1
 595              	.L2:
 694:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   }
 695:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   else
 696:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 697:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 597              	.LM6:
 598 0076 164C     	 ldr r4,.L4+4
 599 0078 FB1D     	 add r3,r7,#7
 600 007a 1B78     	 ldrb r3,[r3]
 601 007c 5BB2     	 sxtb r3,r3
 602 007e 9B08     	 lsr r3,r3,#2
 603 0080 1349     	 ldr r1,.L4+4
 604 0082 FA1D     	 add r2,r7,#7
 605 0084 1278     	 ldrb r2,[r2]
 606 0086 52B2     	 sxtb r2,r2
 607 0088 9208     	 lsr r2,r2,#2
 608 008a C032     	 add r2,r2,#192
 609 008c 9200     	 lsl r2,r2,#2
 610 008e 5258     	 ldr r2,[r2,r1]
 611 0090 F91D     	 add r1,r7,#7
 612 0092 0978     	 ldrb r1,[r1]
 613 0094 081C     	 mov r0,r1
 614 0096 0321     	 mov r1,#3
 615 0098 0140     	 and r1,r0
 616 009a C900     	 lsl r1,r1,#3
 617 009c 081C     	 mov r0,r1
 618 009e FF21     	 mov r1,#255
 619 00a0 8140     	 lsl r1,r1,r0
 620 00a2 C943     	 mvn r1,r1
 621 00a4 1140     	 and r1,r2
 698:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 623              	.LM7:
 624 00a6 3A68     	 ldr r2,[r7]
 625 00a8 9201     	 lsl r2,r2,#6
 626 00aa FF20     	 mov r0,#255
 627 00ac 0240     	 and r2,r0
 628 00ae F81D     	 add r0,r7,#7
 629 00b0 0078     	 ldrb r0,[r0]
 630 00b2 051C     	 mov r5,r0
 631 00b4 0320     	 mov r0,#3
 632 00b6 2840     	 and r0,r5
 633 00b8 C000     	 lsl r0,r0,#3
 634 00ba 8240     	 lsl r2,r2,r0
 697:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 636              	.LM8:
 637 00bc 0A43     	 orr r2,r1
 639              	.LM9:
 640 00be C033     	 add r3,r3,#192
 641 00c0 9B00     	 lsl r3,r3,#2
 642 00c2 1A51     	 str r2,[r3,r4]
 643              	.L1:
 699:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   }
 700:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 645              	.LM10:
 646 00c4 BD46     	 mov sp,r7
 647 00c6 02B0     	 add sp,sp,#8
 648              	 
 649 00c8 B0BD     	 pop {r4,r5,r7,pc}
 650              	.L5:
 651 00ca C046     	 .align 2
 652              	.L4:
 653 00cc 00ED00E0 	 .word -536810240
 654 00d0 00E100E0 	 .word -536813312
 656              	.Lscope1:
 658              	 .stabd 78,0,0
 659              	 .section .text.SysTick_Config,"ax",%progbits
 660              	 .align 2
 663              	 .code 16
 664              	 .thumb_func
 666              	SysTick_Config:
 667              	 .stabd 46,0,0
 701:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 702:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 703:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 704:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Priority
 705:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Reads the priority of an interrupt.
 706:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
 707:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****            or negative to specify an internal (core) interrupt.
 708:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]   IRQn  Interrupt number.
 709:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return             Interrupt Priority.
 710:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 711:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 712:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
 713:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 714:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 715:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 716:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 717:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 718:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   }
 719:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   else
 720:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 721:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 722:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   }
 723:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 724:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 725:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 726:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 727:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   System Reset
 728:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Initiates a system reset request to reset the MCU.
 729:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 730:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SystemReset(void)
 731:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 732:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __DSB();                                                          /* Ensure all outstanding memor
 733:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****                                                                        buffered write are completed
 734:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 735:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 736:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   __DSB();                                                          /* Ensure completion of memory 
 737:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 738:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   for(;;)                                                           /* wait until reset */
 739:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 740:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     __NOP();
 741:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   }
 742:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 743:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 744:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /*@} end of CMSIS_Core_NVICFunctions */
 745:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 746:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 747:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 748:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /* ##################################    SysTick function  ########################################
 749:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 750:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 751:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
 752:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief    Functions that configure the System.
 753:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   @{
 754:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 755:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 756:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** #if (__Vendor_SysTickConfig == 0U)
 757:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 758:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** /**
 759:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \brief   System Tick Configuration
 760:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 761:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****            Counter is in free running mode to generate periodic interrupts.
 762:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \param [in]  ticks  Number of ticks between two interrupts.
 763:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return          0  Function succeeded.
 764:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \return          1  Function failed.
 765:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
 766:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
 767:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****            must contain a vendor-specific implementation of this function.
 768:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****  */
 769:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 770:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** {
 669              	.LM11:
 670              	.LFBB2:
 671 0000 80B5     	 push {r7,lr}
 672 0002 82B0     	 sub sp,sp,#8
 673 0004 00AF     	 add r7,sp,#0
 674 0006 7860     	 str r0,[r7,#4]
 771:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 676              	.LM12:
 677 0008 7B68     	 ldr r3,[r7,#4]
 678 000a 013B     	 sub r3,r3,#1
 679 000c 0C4A     	 ldr r2,.L9
 680 000e 9342     	 cmp r3,r2
 681 0010 01D9     	 bls .L7
 772:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   {
 773:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****     return (1UL);                                                   /* Reload value impossible */
 683              	.LM13:
 684 0012 0123     	 mov r3,#1
 685 0014 10E0     	 b .L8
 686              	.L7:
 774:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   }
 775:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** 
 776:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 688              	.LM14:
 689 0016 0B4B     	 ldr r3,.L9+4
 690 0018 7A68     	 ldr r2,[r7,#4]
 691 001a 013A     	 sub r2,r2,#1
 692 001c 5A60     	 str r2,[r3,#4]
 777:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 694              	.LM15:
 695 001e 0123     	 mov r3,#1
 696 0020 5B42     	 neg r3,r3
 697 0022 181C     	 mov r0,r3
 698 0024 0321     	 mov r1,#3
 699 0026 FFF7FEFF 	 bl NVIC_SetPriority
 778:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 701              	.LM16:
 702 002a 064B     	 ldr r3,.L9+4
 703 002c 0022     	 mov r2,#0
 704 002e 9A60     	 str r2,[r3,#8]
 779:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 780:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****                    SysTick_CTRL_TICKINT_Msk   |
 781:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
 706              	.LM17:
 707 0030 044B     	 ldr r3,.L9+4
 708 0032 0722     	 mov r2,#7
 709 0034 1A60     	 str r2,[r3]
 782:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h ****   return (0UL);                                                     /* Function successful */
 711              	.LM18:
 712 0036 0023     	 mov r3,#0
 713              	.L8:
 783:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/CMSIS/Include/core_cm0.h **** }
 715              	.LM19:
 716 0038 181C     	 mov r0,r3
 717 003a BD46     	 mov sp,r7
 718 003c 02B0     	 add sp,sp,#8
 719              	 
 720 003e 80BD     	 pop {r7,pc}
 721              	.L10:
 722              	 .align 2
 723              	.L9:
 724 0040 FFFFFF00 	 .word 16777215
 725 0044 10E000E0 	 .word -536813552
 727              	.Lscope2:
 729              	 .stabd 78,0,0
 730              	 .section .text._ZL19P2_7_enable_digitalv,"ax",%progbits
 731              	 .align 2
 733              	 .code 16
 734              	 .thumb_func
 736              	_ZL19P2_7_enable_digitalv:
 737              	 .stabd 46,0,0
 739              	.Ltext2:
   1:../hal/GPIO.h **** #ifndef __GPIO_H__
   2:../hal/GPIO.h **** #define __GPIO_H__
   3:../hal/GPIO.h **** 
   4:../hal/GPIO.h **** /* Generated for XMC1100_TSSOP38 on: Wed Feb 13 23:11:00 2013*/
   5:../hal/GPIO.h **** 
   6:../hal/GPIO.h **** #include <XMC1100.h>
   7:../hal/GPIO.h **** 
   8:../hal/GPIO.h **** #define INPUT           0x00U
   9:../hal/GPIO.h **** #define INPUT_PD        0x08U
  10:../hal/GPIO.h **** #define INPUT_PU        0x10U
  11:../hal/GPIO.h **** #define INPUT_PPS       0x18U
  12:../hal/GPIO.h **** #define INPUT_INV       0x20U
  13:../hal/GPIO.h **** #define INPUT_INV_PD    0x28U
  14:../hal/GPIO.h **** #define INPUT_INV_PU    0x30U
  15:../hal/GPIO.h **** #define INPUT_INV_PPS   0x38U
  16:../hal/GPIO.h **** #define OUTPUT_PP_GP    0x80U
  17:../hal/GPIO.h **** #define OUTPUT_PP_AF1   0x88U
  18:../hal/GPIO.h **** #define OUTPUT_PP_AF2   0x90U
  19:../hal/GPIO.h **** #define OUTPUT_PP_AF3   0x98U
  20:../hal/GPIO.h **** #define OUTPUT_PP_AF4   0xA0U
  21:../hal/GPIO.h **** #define OUTPUT_PP_AF5   0xA8U
  22:../hal/GPIO.h **** #define OUTPUT_PP_AF6   0xB0U
  23:../hal/GPIO.h **** #define OUTPUT_PP_AF7   0xB8U
  24:../hal/GPIO.h **** #define OUTPUT_OD_GP    0xC0U
  25:../hal/GPIO.h **** #define OUTPUT_OD_AF1   0xC8U
  26:../hal/GPIO.h **** #define OUTPUT_OD_AF2   0xD0U
  27:../hal/GPIO.h **** #define OUTPUT_OD_AF3   0xD8U
  28:../hal/GPIO.h **** #define OUTPUT_OD_AF4   0XE0U
  29:../hal/GPIO.h **** #define OUTPUT_OD_AF5   0xE8U
  30:../hal/GPIO.h **** #define OUTPUT_OD_AF6   0xF0U
  31:../hal/GPIO.h **** #define OUTPUT_OD_AF7   0XF8U
  32:../hal/GPIO.h **** 
  33:../hal/GPIO.h **** #define SOFTWARE        0x0UL
  34:../hal/GPIO.h **** #define HW0             0x1UL
  35:../hal/GPIO.h **** #define HW1             0x2UL
  36:../hal/GPIO.h **** 
  37:../hal/GPIO.h **** __STATIC_INLINE void P0_0_set_mode(uint8_t mode){
  38:../hal/GPIO.h ****     PORT0->IOCR0 &= ~0x000000f8UL;
  39:../hal/GPIO.h ****     PORT0->IOCR0 |= mode << 0;
  40:../hal/GPIO.h **** }
  41:../hal/GPIO.h **** 
  42:../hal/GPIO.h **** __STATIC_INLINE void P0_0_set_hwsel(uint32_t config){
  43:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00000003UL;
  44:../hal/GPIO.h ****     PORT0->HWSEL |= config << 0;
  45:../hal/GPIO.h **** }
  46:../hal/GPIO.h **** 
  47:../hal/GPIO.h **** __STATIC_INLINE void P0_0_set_standard_hysteresis(){
  48:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x00000004UL;
  49:../hal/GPIO.h **** }
  50:../hal/GPIO.h **** 
  51:../hal/GPIO.h **** __STATIC_INLINE void P0_0_set_large_hysteresis(){
  52:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x00000004UL;
  53:../hal/GPIO.h **** }
  54:../hal/GPIO.h **** 
  55:../hal/GPIO.h **** __STATIC_INLINE void P0_0_set(void){
  56:../hal/GPIO.h ****     PORT0->OMR = 0x00000001UL;
  57:../hal/GPIO.h **** }
  58:../hal/GPIO.h **** 
  59:../hal/GPIO.h **** __STATIC_INLINE void P0_0_reset(void){
  60:../hal/GPIO.h ****     PORT0->OMR = 0x00010000UL;
  61:../hal/GPIO.h **** }
  62:../hal/GPIO.h **** 
  63:../hal/GPIO.h **** __STATIC_INLINE void P0_0_toggle(void){
  64:../hal/GPIO.h ****     PORT0->OMR = 0x00010001UL;
  65:../hal/GPIO.h **** }
  66:../hal/GPIO.h **** 
  67:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_0_read(void){
  68:../hal/GPIO.h ****     return(PORT0->IN & 0x00000001UL);
  69:../hal/GPIO.h **** }
  70:../hal/GPIO.h **** 
  71:../hal/GPIO.h **** __STATIC_INLINE void P0_0_enable_pps(void){
  72:../hal/GPIO.h ****     PORT0->PPS |= 0x00000001UL;
  73:../hal/GPIO.h **** }
  74:../hal/GPIO.h **** 
  75:../hal/GPIO.h **** __STATIC_INLINE void P0_0_disable_pps(void){
  76:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000001UL;
  77:../hal/GPIO.h **** }
  78:../hal/GPIO.h **** 
  79:../hal/GPIO.h **** __STATIC_INLINE void P0_1_set_mode(uint8_t mode){
  80:../hal/GPIO.h ****     PORT0->IOCR0 &= ~0x0000f800UL;
  81:../hal/GPIO.h ****     PORT0->IOCR0 |= mode << 8;
  82:../hal/GPIO.h **** }
  83:../hal/GPIO.h **** 
  84:../hal/GPIO.h **** __STATIC_INLINE void P0_1_set_hwsel(uint32_t config){
  85:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x0000000cUL;
  86:../hal/GPIO.h ****     PORT0->HWSEL |= config << 2;
  87:../hal/GPIO.h **** }
  88:../hal/GPIO.h **** 
  89:../hal/GPIO.h **** __STATIC_INLINE void P0_1_set_standard_hysteresis(){
  90:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x00000040UL;
  91:../hal/GPIO.h **** }
  92:../hal/GPIO.h **** 
  93:../hal/GPIO.h **** __STATIC_INLINE void P0_1_set_large_hysteresis(){
  94:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x00000040UL;
  95:../hal/GPIO.h **** }
  96:../hal/GPIO.h **** 
  97:../hal/GPIO.h **** __STATIC_INLINE void P0_1_set(void){
  98:../hal/GPIO.h ****     PORT0->OMR = 0x00000002UL;
  99:../hal/GPIO.h **** }
 100:../hal/GPIO.h **** 
 101:../hal/GPIO.h **** __STATIC_INLINE void P0_1_reset(void){
 102:../hal/GPIO.h ****     PORT0->OMR = 0x00020000UL;
 103:../hal/GPIO.h **** }
 104:../hal/GPIO.h **** 
 105:../hal/GPIO.h **** __STATIC_INLINE void P0_1_toggle(void){
 106:../hal/GPIO.h ****     PORT0->OMR = 0x00020002UL;
 107:../hal/GPIO.h **** }
 108:../hal/GPIO.h **** 
 109:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_1_read(void){
 110:../hal/GPIO.h ****     return(PORT0->IN & 0x00000002UL);
 111:../hal/GPIO.h **** }
 112:../hal/GPIO.h **** 
 113:../hal/GPIO.h **** __STATIC_INLINE void P0_1_enable_pps(void){
 114:../hal/GPIO.h ****     PORT0->PPS |= 0x00000002UL;
 115:../hal/GPIO.h **** }
 116:../hal/GPIO.h **** 
 117:../hal/GPIO.h **** __STATIC_INLINE void P0_1_disable_pps(void){
 118:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000002UL;
 119:../hal/GPIO.h **** }
 120:../hal/GPIO.h **** 
 121:../hal/GPIO.h **** __STATIC_INLINE void P0_2_set_mode(uint8_t mode){
 122:../hal/GPIO.h ****     PORT0->IOCR0 &= ~0x00f80000UL;
 123:../hal/GPIO.h ****     PORT0->IOCR0 |= mode << 16;
 124:../hal/GPIO.h **** }
 125:../hal/GPIO.h **** 
 126:../hal/GPIO.h **** __STATIC_INLINE void P0_2_set_hwsel(uint32_t config){
 127:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00000030UL;
 128:../hal/GPIO.h ****     PORT0->HWSEL |= config << 4;
 129:../hal/GPIO.h **** }
 130:../hal/GPIO.h **** 
 131:../hal/GPIO.h **** __STATIC_INLINE void P0_2_set_standard_hysteresis(){
 132:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x00000400UL;
 133:../hal/GPIO.h **** }
 134:../hal/GPIO.h **** 
 135:../hal/GPIO.h **** __STATIC_INLINE void P0_2_set_large_hysteresis(){
 136:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x00000400UL;
 137:../hal/GPIO.h **** }
 138:../hal/GPIO.h **** 
 139:../hal/GPIO.h **** __STATIC_INLINE void P0_2_set(void){
 140:../hal/GPIO.h ****     PORT0->OMR = 0x00000004UL;
 141:../hal/GPIO.h **** }
 142:../hal/GPIO.h **** 
 143:../hal/GPIO.h **** __STATIC_INLINE void P0_2_reset(void){
 144:../hal/GPIO.h ****     PORT0->OMR = 0x00040000UL;
 145:../hal/GPIO.h **** }
 146:../hal/GPIO.h **** 
 147:../hal/GPIO.h **** __STATIC_INLINE void P0_2_toggle(void){
 148:../hal/GPIO.h ****     PORT0->OMR = 0x00040004UL;
 149:../hal/GPIO.h **** }
 150:../hal/GPIO.h **** 
 151:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_2_read(void){
 152:../hal/GPIO.h ****     return(PORT0->IN & 0x00000004UL);
 153:../hal/GPIO.h **** }
 154:../hal/GPIO.h **** 
 155:../hal/GPIO.h **** __STATIC_INLINE void P0_2_enable_pps(void){
 156:../hal/GPIO.h ****     PORT0->PPS |= 0x00000004UL;
 157:../hal/GPIO.h **** }
 158:../hal/GPIO.h **** 
 159:../hal/GPIO.h **** __STATIC_INLINE void P0_2_disable_pps(void){
 160:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000004UL;
 161:../hal/GPIO.h **** }
 162:../hal/GPIO.h **** 
 163:../hal/GPIO.h **** __STATIC_INLINE void P0_3_set_mode(uint8_t mode){
 164:../hal/GPIO.h ****     PORT0->IOCR0 &= ~0xf8000000UL;
 165:../hal/GPIO.h ****     PORT0->IOCR0 |= mode << 24;
 166:../hal/GPIO.h **** }
 167:../hal/GPIO.h **** 
 168:../hal/GPIO.h **** __STATIC_INLINE void P0_3_set_hwsel(uint32_t config){
 169:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x000000c0UL;
 170:../hal/GPIO.h ****     PORT0->HWSEL |= config << 6;
 171:../hal/GPIO.h **** }
 172:../hal/GPIO.h **** 
 173:../hal/GPIO.h **** __STATIC_INLINE void P0_3_set_standard_hysteresis(){
 174:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x00004000UL;
 175:../hal/GPIO.h **** }
 176:../hal/GPIO.h **** 
 177:../hal/GPIO.h **** __STATIC_INLINE void P0_3_set_large_hysteresis(){
 178:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x00004000UL;
 179:../hal/GPIO.h **** }
 180:../hal/GPIO.h **** 
 181:../hal/GPIO.h **** __STATIC_INLINE void P0_3_set(void){
 182:../hal/GPIO.h ****     PORT0->OMR = 0x00000008UL;
 183:../hal/GPIO.h **** }
 184:../hal/GPIO.h **** 
 185:../hal/GPIO.h **** __STATIC_INLINE void P0_3_reset(void){
 186:../hal/GPIO.h ****     PORT0->OMR = 0x00080000UL;
 187:../hal/GPIO.h **** }
 188:../hal/GPIO.h **** 
 189:../hal/GPIO.h **** __STATIC_INLINE void P0_3_toggle(void){
 190:../hal/GPIO.h ****     PORT0->OMR = 0x00080008UL;
 191:../hal/GPIO.h **** }
 192:../hal/GPIO.h **** 
 193:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_3_read(void){
 194:../hal/GPIO.h ****     return(PORT0->IN & 0x00000008UL);
 195:../hal/GPIO.h **** }
 196:../hal/GPIO.h **** 
 197:../hal/GPIO.h **** __STATIC_INLINE void P0_3_enable_pps(void){
 198:../hal/GPIO.h ****     PORT0->PPS |= 0x00000008UL;
 199:../hal/GPIO.h **** }
 200:../hal/GPIO.h **** 
 201:../hal/GPIO.h **** __STATIC_INLINE void P0_3_disable_pps(void){
 202:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000008UL;
 203:../hal/GPIO.h **** }
 204:../hal/GPIO.h **** 
 205:../hal/GPIO.h **** __STATIC_INLINE void P0_4_set_mode(uint8_t mode){
 206:../hal/GPIO.h ****     PORT0->IOCR4 &= ~0x000000f8UL;
 207:../hal/GPIO.h ****     PORT0->IOCR4 |= mode << 0;
 208:../hal/GPIO.h **** }
 209:../hal/GPIO.h **** 
 210:../hal/GPIO.h **** __STATIC_INLINE void P0_4_set_hwsel(uint32_t config){
 211:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00000300UL;
 212:../hal/GPIO.h ****     PORT0->HWSEL |= config << 8;
 213:../hal/GPIO.h **** }
 214:../hal/GPIO.h **** 
 215:../hal/GPIO.h **** __STATIC_INLINE void P0_4_set_standard_hysteresis(){
 216:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x00040000UL;
 217:../hal/GPIO.h **** }
 218:../hal/GPIO.h **** 
 219:../hal/GPIO.h **** __STATIC_INLINE void P0_4_set_large_hysteresis(){
 220:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x00040000UL;
 221:../hal/GPIO.h **** }
 222:../hal/GPIO.h **** 
 223:../hal/GPIO.h **** __STATIC_INLINE void P0_4_set(void){
 224:../hal/GPIO.h ****     PORT0->OMR = 0x00000010UL;
 225:../hal/GPIO.h **** }
 226:../hal/GPIO.h **** 
 227:../hal/GPIO.h **** __STATIC_INLINE void P0_4_reset(void){
 228:../hal/GPIO.h ****     PORT0->OMR = 0x00100000UL;
 229:../hal/GPIO.h **** }
 230:../hal/GPIO.h **** 
 231:../hal/GPIO.h **** __STATIC_INLINE void P0_4_toggle(void){
 232:../hal/GPIO.h ****     PORT0->OMR = 0x00100010UL;
 233:../hal/GPIO.h **** }
 234:../hal/GPIO.h **** 
 235:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_4_read(void){
 236:../hal/GPIO.h ****     return(PORT0->IN & 0x00000010UL);
 237:../hal/GPIO.h **** }
 238:../hal/GPIO.h **** 
 239:../hal/GPIO.h **** __STATIC_INLINE void P0_4_enable_pps(void){
 240:../hal/GPIO.h ****     PORT0->PPS |= 0x00000010UL;
 241:../hal/GPIO.h **** }
 242:../hal/GPIO.h **** 
 243:../hal/GPIO.h **** __STATIC_INLINE void P0_4_disable_pps(void){
 244:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000010UL;
 245:../hal/GPIO.h **** }
 246:../hal/GPIO.h **** 
 247:../hal/GPIO.h **** __STATIC_INLINE void P0_5_set_mode(uint8_t mode){
 248:../hal/GPIO.h ****     PORT0->IOCR4 &= ~0x0000f800UL;
 249:../hal/GPIO.h ****     PORT0->IOCR4 |= mode << 8;
 250:../hal/GPIO.h **** }
 251:../hal/GPIO.h **** 
 252:../hal/GPIO.h **** __STATIC_INLINE void P0_5_set_hwsel(uint32_t config){
 253:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00000c00UL;
 254:../hal/GPIO.h ****     PORT0->HWSEL |= config << 10;
 255:../hal/GPIO.h **** }
 256:../hal/GPIO.h **** 
 257:../hal/GPIO.h **** __STATIC_INLINE void P0_5_set_standard_hysteresis(){
 258:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x00400000UL;
 259:../hal/GPIO.h **** }
 260:../hal/GPIO.h **** 
 261:../hal/GPIO.h **** __STATIC_INLINE void P0_5_set_large_hysteresis(){
 262:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x00400000UL;
 263:../hal/GPIO.h **** }
 264:../hal/GPIO.h **** 
 265:../hal/GPIO.h **** __STATIC_INLINE void P0_5_set(void){
 266:../hal/GPIO.h ****     PORT0->OMR = 0x00000020UL;
 267:../hal/GPIO.h **** }
 268:../hal/GPIO.h **** 
 269:../hal/GPIO.h **** __STATIC_INLINE void P0_5_reset(void){
 270:../hal/GPIO.h ****     PORT0->OMR = 0x00200000UL;
 271:../hal/GPIO.h **** }
 272:../hal/GPIO.h **** 
 273:../hal/GPIO.h **** __STATIC_INLINE void P0_5_toggle(void){
 274:../hal/GPIO.h ****     PORT0->OMR = 0x00200020UL;
 275:../hal/GPIO.h **** }
 276:../hal/GPIO.h **** 
 277:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_5_read(void){
 278:../hal/GPIO.h ****     return(PORT0->IN & 0x00000020UL);
 279:../hal/GPIO.h **** }
 280:../hal/GPIO.h **** 
 281:../hal/GPIO.h **** __STATIC_INLINE void P0_5_enable_pps(void){
 282:../hal/GPIO.h ****     PORT0->PPS |= 0x00000020UL;
 283:../hal/GPIO.h **** }
 284:../hal/GPIO.h **** 
 285:../hal/GPIO.h **** __STATIC_INLINE void P0_5_disable_pps(void){
 286:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000020UL;
 287:../hal/GPIO.h **** }
 288:../hal/GPIO.h **** 
 289:../hal/GPIO.h **** __STATIC_INLINE void P0_6_set_mode(uint8_t mode){
 290:../hal/GPIO.h ****     PORT0->IOCR4 &= ~0x00f80000UL;
 291:../hal/GPIO.h ****     PORT0->IOCR4 |= mode << 16;
 292:../hal/GPIO.h **** }
 293:../hal/GPIO.h **** 
 294:../hal/GPIO.h **** __STATIC_INLINE void P0_6_set_hwsel(uint32_t config){
 295:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00003000UL;
 296:../hal/GPIO.h ****     PORT0->HWSEL |= config << 12;
 297:../hal/GPIO.h **** }
 298:../hal/GPIO.h **** 
 299:../hal/GPIO.h **** __STATIC_INLINE void P0_6_set_standard_hysteresis(){
 300:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x04000000UL;
 301:../hal/GPIO.h **** }
 302:../hal/GPIO.h **** 
 303:../hal/GPIO.h **** __STATIC_INLINE void P0_6_set_large_hysteresis(){
 304:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x04000000UL;
 305:../hal/GPIO.h **** }
 306:../hal/GPIO.h **** 
 307:../hal/GPIO.h **** __STATIC_INLINE void P0_6_set(void){
 308:../hal/GPIO.h ****     PORT0->OMR = 0x00000040UL;
 309:../hal/GPIO.h **** }
 310:../hal/GPIO.h **** 
 311:../hal/GPIO.h **** __STATIC_INLINE void P0_6_reset(void){
 312:../hal/GPIO.h ****     PORT0->OMR = 0x00400000UL;
 313:../hal/GPIO.h **** }
 314:../hal/GPIO.h **** 
 315:../hal/GPIO.h **** __STATIC_INLINE void P0_6_toggle(void){
 316:../hal/GPIO.h ****     PORT0->OMR = 0x00400040UL;
 317:../hal/GPIO.h **** }
 318:../hal/GPIO.h **** 
 319:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_6_read(void){
 320:../hal/GPIO.h ****     return(PORT0->IN & 0x00000040UL);
 321:../hal/GPIO.h **** }
 322:../hal/GPIO.h **** 
 323:../hal/GPIO.h **** __STATIC_INLINE void P0_6_enable_pps(void){
 324:../hal/GPIO.h ****     PORT0->PPS |= 0x00000040UL;
 325:../hal/GPIO.h **** }
 326:../hal/GPIO.h **** 
 327:../hal/GPIO.h **** __STATIC_INLINE void P0_6_disable_pps(void){
 328:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000040UL;
 329:../hal/GPIO.h **** }
 330:../hal/GPIO.h **** 
 331:../hal/GPIO.h **** __STATIC_INLINE void P0_7_set_mode(uint8_t mode){
 332:../hal/GPIO.h ****     PORT0->IOCR4 &= ~0xf8000000UL;
 333:../hal/GPIO.h ****     PORT0->IOCR4 |= mode << 24;
 334:../hal/GPIO.h **** }
 335:../hal/GPIO.h **** 
 336:../hal/GPIO.h **** __STATIC_INLINE void P0_7_set_hwsel(uint32_t config){
 337:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x0000c000UL;
 338:../hal/GPIO.h ****     PORT0->HWSEL |= config << 14;
 339:../hal/GPIO.h **** }
 340:../hal/GPIO.h **** 
 341:../hal/GPIO.h **** __STATIC_INLINE void P0_7_set_standard_hysteresis(){
 342:../hal/GPIO.h ****     PORT0->PHCR0 &= ~0x40000000UL;
 343:../hal/GPIO.h **** }
 344:../hal/GPIO.h **** 
 345:../hal/GPIO.h **** __STATIC_INLINE void P0_7_set_large_hysteresis(){
 346:../hal/GPIO.h ****     PORT0->PHCR0 |= 0x40000000UL;
 347:../hal/GPIO.h **** }
 348:../hal/GPIO.h **** 
 349:../hal/GPIO.h **** __STATIC_INLINE void P0_7_set(void){
 350:../hal/GPIO.h ****     PORT0->OMR = 0x00000080UL;
 351:../hal/GPIO.h **** }
 352:../hal/GPIO.h **** 
 353:../hal/GPIO.h **** __STATIC_INLINE void P0_7_reset(void){
 354:../hal/GPIO.h ****     PORT0->OMR = 0x00800000UL;
 355:../hal/GPIO.h **** }
 356:../hal/GPIO.h **** 
 357:../hal/GPIO.h **** __STATIC_INLINE void P0_7_toggle(void){
 358:../hal/GPIO.h ****     PORT0->OMR = 0x00800080UL;
 359:../hal/GPIO.h **** }
 360:../hal/GPIO.h **** 
 361:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_7_read(void){
 362:../hal/GPIO.h ****     return(PORT0->IN & 0x00000080UL);
 363:../hal/GPIO.h **** }
 364:../hal/GPIO.h **** 
 365:../hal/GPIO.h **** __STATIC_INLINE void P0_7_enable_pps(void){
 366:../hal/GPIO.h ****     PORT0->PPS |= 0x00000080UL;
 367:../hal/GPIO.h **** }
 368:../hal/GPIO.h **** 
 369:../hal/GPIO.h **** __STATIC_INLINE void P0_7_disable_pps(void){
 370:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000080UL;
 371:../hal/GPIO.h **** }
 372:../hal/GPIO.h **** 
 373:../hal/GPIO.h **** __STATIC_INLINE void P0_8_set_mode(uint8_t mode){
 374:../hal/GPIO.h ****     PORT0->IOCR8 &= ~0x000000f8UL;
 375:../hal/GPIO.h ****     PORT0->IOCR8 |= mode << 0;
 376:../hal/GPIO.h **** }
 377:../hal/GPIO.h **** 
 378:../hal/GPIO.h **** __STATIC_INLINE void P0_8_set_hwsel(uint32_t config){
 379:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00030000UL;
 380:../hal/GPIO.h ****     PORT0->HWSEL |= config << 16;
 381:../hal/GPIO.h **** }
 382:../hal/GPIO.h **** 
 383:../hal/GPIO.h **** __STATIC_INLINE void P0_8_set_standard_hysteresis(){
 384:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x00000004UL;
 385:../hal/GPIO.h **** }
 386:../hal/GPIO.h **** 
 387:../hal/GPIO.h **** __STATIC_INLINE void P0_8_set_large_hysteresis(){
 388:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x00000004UL;
 389:../hal/GPIO.h **** }
 390:../hal/GPIO.h **** 
 391:../hal/GPIO.h **** __STATIC_INLINE void P0_8_set(void){
 392:../hal/GPIO.h ****     PORT0->OMR = 0x00000100UL;
 393:../hal/GPIO.h **** }
 394:../hal/GPIO.h **** 
 395:../hal/GPIO.h **** __STATIC_INLINE void P0_8_reset(void){
 396:../hal/GPIO.h ****     PORT0->OMR = 0x01000000UL;
 397:../hal/GPIO.h **** }
 398:../hal/GPIO.h **** 
 399:../hal/GPIO.h **** __STATIC_INLINE void P0_8_toggle(void){
 400:../hal/GPIO.h ****     PORT0->OMR = 0x01000100UL;
 401:../hal/GPIO.h **** }
 402:../hal/GPIO.h **** 
 403:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_8_read(void){
 404:../hal/GPIO.h ****     return(PORT0->IN & 0x00000100UL);
 405:../hal/GPIO.h **** }
 406:../hal/GPIO.h **** 
 407:../hal/GPIO.h **** __STATIC_INLINE void P0_8_enable_pps(void){
 408:../hal/GPIO.h ****     PORT0->PPS |= 0x00000100UL;
 409:../hal/GPIO.h **** }
 410:../hal/GPIO.h **** 
 411:../hal/GPIO.h **** __STATIC_INLINE void P0_8_disable_pps(void){
 412:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000100UL;
 413:../hal/GPIO.h **** }
 414:../hal/GPIO.h **** 
 415:../hal/GPIO.h **** __STATIC_INLINE void P0_9_set_mode(uint8_t mode){
 416:../hal/GPIO.h ****     PORT0->IOCR8 &= ~0x0000f800UL;
 417:../hal/GPIO.h ****     PORT0->IOCR8 |= mode << 8;
 418:../hal/GPIO.h **** }
 419:../hal/GPIO.h **** 
 420:../hal/GPIO.h **** __STATIC_INLINE void P0_9_set_hwsel(uint32_t config){
 421:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x000c0000UL;
 422:../hal/GPIO.h ****     PORT0->HWSEL |= config << 18;
 423:../hal/GPIO.h **** }
 424:../hal/GPIO.h **** 
 425:../hal/GPIO.h **** __STATIC_INLINE void P0_9_set_standard_hysteresis(){
 426:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x00000040UL;
 427:../hal/GPIO.h **** }
 428:../hal/GPIO.h **** 
 429:../hal/GPIO.h **** __STATIC_INLINE void P0_9_set_large_hysteresis(){
 430:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x00000040UL;
 431:../hal/GPIO.h **** }
 432:../hal/GPIO.h **** 
 433:../hal/GPIO.h **** __STATIC_INLINE void P0_9_set(void){
 434:../hal/GPIO.h ****     PORT0->OMR = 0x00000200UL;
 435:../hal/GPIO.h **** }
 436:../hal/GPIO.h **** 
 437:../hal/GPIO.h **** __STATIC_INLINE void P0_9_reset(void){
 438:../hal/GPIO.h ****     PORT0->OMR = 0x02000000UL;
 439:../hal/GPIO.h **** }
 440:../hal/GPIO.h **** 
 441:../hal/GPIO.h **** __STATIC_INLINE void P0_9_toggle(void){
 442:../hal/GPIO.h ****     PORT0->OMR = 0x02000200UL;
 443:../hal/GPIO.h **** }
 444:../hal/GPIO.h **** 
 445:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_9_read(void){
 446:../hal/GPIO.h ****     return(PORT0->IN & 0x00000200UL);
 447:../hal/GPIO.h **** }
 448:../hal/GPIO.h **** 
 449:../hal/GPIO.h **** __STATIC_INLINE void P0_9_enable_pps(void){
 450:../hal/GPIO.h ****     PORT0->PPS |= 0x00000200UL;
 451:../hal/GPIO.h **** }
 452:../hal/GPIO.h **** 
 453:../hal/GPIO.h **** __STATIC_INLINE void P0_9_disable_pps(void){
 454:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000200UL;
 455:../hal/GPIO.h **** }
 456:../hal/GPIO.h **** 
 457:../hal/GPIO.h **** __STATIC_INLINE void P0_10_set_mode(uint8_t mode){
 458:../hal/GPIO.h ****     PORT0->IOCR8 &= ~0x00f80000UL;
 459:../hal/GPIO.h ****     PORT0->IOCR8 |= mode << 16;
 460:../hal/GPIO.h **** }
 461:../hal/GPIO.h **** 
 462:../hal/GPIO.h **** __STATIC_INLINE void P0_10_set_hwsel(uint32_t config){
 463:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00300000UL;
 464:../hal/GPIO.h ****     PORT0->HWSEL |= config << 20;
 465:../hal/GPIO.h **** }
 466:../hal/GPIO.h **** 
 467:../hal/GPIO.h **** __STATIC_INLINE void P0_10_set_standard_hysteresis(){
 468:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x00000400UL;
 469:../hal/GPIO.h **** }
 470:../hal/GPIO.h **** 
 471:../hal/GPIO.h **** __STATIC_INLINE void P0_10_set_large_hysteresis(){
 472:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x00000400UL;
 473:../hal/GPIO.h **** }
 474:../hal/GPIO.h **** 
 475:../hal/GPIO.h **** __STATIC_INLINE void P0_10_set(void){
 476:../hal/GPIO.h ****     PORT0->OMR = 0x00000400UL;
 477:../hal/GPIO.h **** }
 478:../hal/GPIO.h **** 
 479:../hal/GPIO.h **** __STATIC_INLINE void P0_10_reset(void){
 480:../hal/GPIO.h ****     PORT0->OMR = 0x04000000UL;
 481:../hal/GPIO.h **** }
 482:../hal/GPIO.h **** 
 483:../hal/GPIO.h **** __STATIC_INLINE void P0_10_toggle(void){
 484:../hal/GPIO.h ****     PORT0->OMR = 0x04000400UL;
 485:../hal/GPIO.h **** }
 486:../hal/GPIO.h **** 
 487:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_10_read(void){
 488:../hal/GPIO.h ****     return(PORT0->IN & 0x00000400UL);
 489:../hal/GPIO.h **** }
 490:../hal/GPIO.h **** 
 491:../hal/GPIO.h **** __STATIC_INLINE void P0_10_enable_pps(void){
 492:../hal/GPIO.h ****     PORT0->PPS |= 0x00000400UL;
 493:../hal/GPIO.h **** }
 494:../hal/GPIO.h **** 
 495:../hal/GPIO.h **** __STATIC_INLINE void P0_10_disable_pps(void){
 496:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000400UL;
 497:../hal/GPIO.h **** }
 498:../hal/GPIO.h **** 
 499:../hal/GPIO.h **** __STATIC_INLINE void P0_11_set_mode(uint8_t mode){
 500:../hal/GPIO.h ****     PORT0->IOCR8 &= ~0xf8000000UL;
 501:../hal/GPIO.h ****     PORT0->IOCR8 |= mode << 24;
 502:../hal/GPIO.h **** }
 503:../hal/GPIO.h **** 
 504:../hal/GPIO.h **** __STATIC_INLINE void P0_11_set_hwsel(uint32_t config){
 505:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x00c00000UL;
 506:../hal/GPIO.h ****     PORT0->HWSEL |= config << 22;
 507:../hal/GPIO.h **** }
 508:../hal/GPIO.h **** 
 509:../hal/GPIO.h **** __STATIC_INLINE void P0_11_set_standard_hysteresis(){
 510:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x00004000UL;
 511:../hal/GPIO.h **** }
 512:../hal/GPIO.h **** 
 513:../hal/GPIO.h **** __STATIC_INLINE void P0_11_set_large_hysteresis(){
 514:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x00004000UL;
 515:../hal/GPIO.h **** }
 516:../hal/GPIO.h **** 
 517:../hal/GPIO.h **** __STATIC_INLINE void P0_11_set(void){
 518:../hal/GPIO.h ****     PORT0->OMR = 0x00000800UL;
 519:../hal/GPIO.h **** }
 520:../hal/GPIO.h **** 
 521:../hal/GPIO.h **** __STATIC_INLINE void P0_11_reset(void){
 522:../hal/GPIO.h ****     PORT0->OMR = 0x08000000UL;
 523:../hal/GPIO.h **** }
 524:../hal/GPIO.h **** 
 525:../hal/GPIO.h **** __STATIC_INLINE void P0_11_toggle(void){
 526:../hal/GPIO.h ****     PORT0->OMR = 0x08000800UL;
 527:../hal/GPIO.h **** }
 528:../hal/GPIO.h **** 
 529:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_11_read(void){
 530:../hal/GPIO.h ****     return(PORT0->IN & 0x00000800UL);
 531:../hal/GPIO.h **** }
 532:../hal/GPIO.h **** 
 533:../hal/GPIO.h **** __STATIC_INLINE void P0_11_enable_pps(void){
 534:../hal/GPIO.h ****     PORT0->PPS |= 0x00000800UL;
 535:../hal/GPIO.h **** }
 536:../hal/GPIO.h **** 
 537:../hal/GPIO.h **** __STATIC_INLINE void P0_11_disable_pps(void){
 538:../hal/GPIO.h ****     PORT0->PPS &= ~0x00000800UL;
 539:../hal/GPIO.h **** }
 540:../hal/GPIO.h **** 
 541:../hal/GPIO.h **** __STATIC_INLINE void P0_12_set_mode(uint8_t mode){
 542:../hal/GPIO.h ****     PORT0->IOCR12 &= ~0x000000f8UL;
 543:../hal/GPIO.h ****     PORT0->IOCR12 |= mode << 0;
 544:../hal/GPIO.h **** }
 545:../hal/GPIO.h **** 
 546:../hal/GPIO.h **** __STATIC_INLINE void P0_12_set_hwsel(uint32_t config){
 547:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x03000000UL;
 548:../hal/GPIO.h ****     PORT0->HWSEL |= config << 24;
 549:../hal/GPIO.h **** }
 550:../hal/GPIO.h **** 
 551:../hal/GPIO.h **** __STATIC_INLINE void P0_12_set_standard_hysteresis(){
 552:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x00040000UL;
 553:../hal/GPIO.h **** }
 554:../hal/GPIO.h **** 
 555:../hal/GPIO.h **** __STATIC_INLINE void P0_12_set_large_hysteresis(){
 556:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x00040000UL;
 557:../hal/GPIO.h **** }
 558:../hal/GPIO.h **** 
 559:../hal/GPIO.h **** __STATIC_INLINE void P0_12_set(void){
 560:../hal/GPIO.h ****     PORT0->OMR = 0x00001000UL;
 561:../hal/GPIO.h **** }
 562:../hal/GPIO.h **** 
 563:../hal/GPIO.h **** __STATIC_INLINE void P0_12_reset(void){
 564:../hal/GPIO.h ****     PORT0->OMR = 0x10000000UL;
 565:../hal/GPIO.h **** }
 566:../hal/GPIO.h **** 
 567:../hal/GPIO.h **** __STATIC_INLINE void P0_12_toggle(void){
 568:../hal/GPIO.h ****     PORT0->OMR = 0x10001000UL;
 569:../hal/GPIO.h **** }
 570:../hal/GPIO.h **** 
 571:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_12_read(void){
 572:../hal/GPIO.h ****     return(PORT0->IN & 0x00001000UL);
 573:../hal/GPIO.h **** }
 574:../hal/GPIO.h **** 
 575:../hal/GPIO.h **** __STATIC_INLINE void P0_12_enable_pps(void){
 576:../hal/GPIO.h ****     PORT0->PPS |= 0x00001000UL;
 577:../hal/GPIO.h **** }
 578:../hal/GPIO.h **** 
 579:../hal/GPIO.h **** __STATIC_INLINE void P0_12_disable_pps(void){
 580:../hal/GPIO.h ****     PORT0->PPS &= ~0x00001000UL;
 581:../hal/GPIO.h **** }
 582:../hal/GPIO.h **** 
 583:../hal/GPIO.h **** __STATIC_INLINE void P0_13_set_mode(uint8_t mode){
 584:../hal/GPIO.h ****     PORT0->IOCR12 &= ~0x0000f800UL;
 585:../hal/GPIO.h ****     PORT0->IOCR12 |= mode << 8;
 586:../hal/GPIO.h **** }
 587:../hal/GPIO.h **** 
 588:../hal/GPIO.h **** __STATIC_INLINE void P0_13_set_hwsel(uint32_t config){
 589:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x0c000000UL;
 590:../hal/GPIO.h ****     PORT0->HWSEL |= config << 26;
 591:../hal/GPIO.h **** }
 592:../hal/GPIO.h **** 
 593:../hal/GPIO.h **** __STATIC_INLINE void P0_13_set_standard_hysteresis(){
 594:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x00400000UL;
 595:../hal/GPIO.h **** }
 596:../hal/GPIO.h **** 
 597:../hal/GPIO.h **** __STATIC_INLINE void P0_13_set_large_hysteresis(){
 598:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x00400000UL;
 599:../hal/GPIO.h **** }
 600:../hal/GPIO.h **** 
 601:../hal/GPIO.h **** __STATIC_INLINE void P0_13_set(void){
 602:../hal/GPIO.h ****     PORT0->OMR = 0x00002000UL;
 603:../hal/GPIO.h **** }
 604:../hal/GPIO.h **** 
 605:../hal/GPIO.h **** __STATIC_INLINE void P0_13_reset(void){
 606:../hal/GPIO.h ****     PORT0->OMR = 0x20000000UL;
 607:../hal/GPIO.h **** }
 608:../hal/GPIO.h **** 
 609:../hal/GPIO.h **** __STATIC_INLINE void P0_13_toggle(void){
 610:../hal/GPIO.h ****     PORT0->OMR = 0x20002000UL;
 611:../hal/GPIO.h **** }
 612:../hal/GPIO.h **** 
 613:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_13_read(void){
 614:../hal/GPIO.h ****     return(PORT0->IN & 0x00002000UL);
 615:../hal/GPIO.h **** }
 616:../hal/GPIO.h **** 
 617:../hal/GPIO.h **** __STATIC_INLINE void P0_13_enable_pps(void){
 618:../hal/GPIO.h ****     PORT0->PPS |= 0x00002000UL;
 619:../hal/GPIO.h **** }
 620:../hal/GPIO.h **** 
 621:../hal/GPIO.h **** __STATIC_INLINE void P0_13_disable_pps(void){
 622:../hal/GPIO.h ****     PORT0->PPS &= ~0x00002000UL;
 623:../hal/GPIO.h **** }
 624:../hal/GPIO.h **** 
 625:../hal/GPIO.h **** __STATIC_INLINE void P0_14_set_mode(uint8_t mode){
 626:../hal/GPIO.h ****     PORT0->IOCR12 &= ~0x00f80000UL;
 627:../hal/GPIO.h ****     PORT0->IOCR12 |= mode << 16;
 628:../hal/GPIO.h **** }
 629:../hal/GPIO.h **** 
 630:../hal/GPIO.h **** __STATIC_INLINE void P0_14_set_hwsel(uint32_t config){
 631:../hal/GPIO.h ****     PORT0->HWSEL &= ~0x30000000UL;
 632:../hal/GPIO.h ****     PORT0->HWSEL |= config << 28;
 633:../hal/GPIO.h **** }
 634:../hal/GPIO.h **** 
 635:../hal/GPIO.h **** __STATIC_INLINE void P0_14_set_standard_hysteresis(){
 636:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x04000000UL;
 637:../hal/GPIO.h **** }
 638:../hal/GPIO.h **** 
 639:../hal/GPIO.h **** __STATIC_INLINE void P0_14_set_large_hysteresis(){
 640:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x04000000UL;
 641:../hal/GPIO.h **** }
 642:../hal/GPIO.h **** 
 643:../hal/GPIO.h **** __STATIC_INLINE void P0_14_set(void){
 644:../hal/GPIO.h ****     PORT0->OMR = 0x00004000UL;
 645:../hal/GPIO.h **** }
 646:../hal/GPIO.h **** 
 647:../hal/GPIO.h **** __STATIC_INLINE void P0_14_reset(void){
 648:../hal/GPIO.h ****     PORT0->OMR = 0x40000000UL;
 649:../hal/GPIO.h **** }
 650:../hal/GPIO.h **** 
 651:../hal/GPIO.h **** __STATIC_INLINE void P0_14_toggle(void){
 652:../hal/GPIO.h ****     PORT0->OMR = 0x40004000UL;
 653:../hal/GPIO.h **** }
 654:../hal/GPIO.h **** 
 655:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_14_read(void){
 656:../hal/GPIO.h ****     return(PORT0->IN & 0x00004000UL);
 657:../hal/GPIO.h **** }
 658:../hal/GPIO.h **** 
 659:../hal/GPIO.h **** __STATIC_INLINE void P0_14_enable_pps(void){
 660:../hal/GPIO.h ****     PORT0->PPS |= 0x00004000UL;
 661:../hal/GPIO.h **** }
 662:../hal/GPIO.h **** 
 663:../hal/GPIO.h **** __STATIC_INLINE void P0_14_disable_pps(void){
 664:../hal/GPIO.h ****     PORT0->PPS &= ~0x00004000UL;
 665:../hal/GPIO.h **** }
 666:../hal/GPIO.h **** 
 667:../hal/GPIO.h **** __STATIC_INLINE void P0_15_set_mode(uint8_t mode){
 668:../hal/GPIO.h ****     PORT0->IOCR12 &= ~0xf8000000UL;
 669:../hal/GPIO.h ****     PORT0->IOCR12 |= mode << 24;
 670:../hal/GPIO.h **** }
 671:../hal/GPIO.h **** 
 672:../hal/GPIO.h **** __STATIC_INLINE void P0_15_set_hwsel(uint32_t config){
 673:../hal/GPIO.h ****     PORT0->HWSEL &= ~0xc0000000UL;
 674:../hal/GPIO.h ****     PORT0->HWSEL |= config << 30;
 675:../hal/GPIO.h **** }
 676:../hal/GPIO.h **** 
 677:../hal/GPIO.h **** __STATIC_INLINE void P0_15_set_standard_hysteresis(){
 678:../hal/GPIO.h ****     PORT0->PHCR1 &= ~0x40000000UL;
 679:../hal/GPIO.h **** }
 680:../hal/GPIO.h **** 
 681:../hal/GPIO.h **** __STATIC_INLINE void P0_15_set_large_hysteresis(){
 682:../hal/GPIO.h ****     PORT0->PHCR1 |= 0x40000000UL;
 683:../hal/GPIO.h **** }
 684:../hal/GPIO.h **** 
 685:../hal/GPIO.h **** __STATIC_INLINE void P0_15_set(void){
 686:../hal/GPIO.h ****     PORT0->OMR = 0x00008000UL;
 687:../hal/GPIO.h **** }
 688:../hal/GPIO.h **** 
 689:../hal/GPIO.h **** __STATIC_INLINE void P0_15_reset(void){
 690:../hal/GPIO.h ****     PORT0->OMR = 0x80000000UL;
 691:../hal/GPIO.h **** }
 692:../hal/GPIO.h **** 
 693:../hal/GPIO.h **** __STATIC_INLINE void P0_15_toggle(void){
 694:../hal/GPIO.h ****     PORT0->OMR = 0x80008000UL;
 695:../hal/GPIO.h **** }
 696:../hal/GPIO.h **** 
 697:../hal/GPIO.h **** __STATIC_INLINE uint32_t P0_15_read(void){
 698:../hal/GPIO.h ****     return(PORT0->IN & 0x00008000UL);
 699:../hal/GPIO.h **** }
 700:../hal/GPIO.h **** 
 701:../hal/GPIO.h **** __STATIC_INLINE void P0_15_enable_pps(void){
 702:../hal/GPIO.h ****     PORT0->PPS |= 0x00008000UL;
 703:../hal/GPIO.h **** }
 704:../hal/GPIO.h **** 
 705:../hal/GPIO.h **** __STATIC_INLINE void P0_15_disable_pps(void){
 706:../hal/GPIO.h ****     PORT0->PPS &= ~0x00008000UL;
 707:../hal/GPIO.h **** }
 708:../hal/GPIO.h **** 
 709:../hal/GPIO.h **** __STATIC_INLINE void P1_0_set_mode(uint8_t mode){
 710:../hal/GPIO.h ****     PORT1->IOCR0 &= ~0x000000f8UL;
 711:../hal/GPIO.h ****     PORT1->IOCR0 |= mode << 0;
 712:../hal/GPIO.h **** }
 713:../hal/GPIO.h **** 
 714:../hal/GPIO.h **** __STATIC_INLINE void P1_0_set_hwsel(uint32_t config){
 715:../hal/GPIO.h ****     PORT1->HWSEL &= ~0x00000003UL;
 716:../hal/GPIO.h ****     PORT1->HWSEL |= config << 0;
 717:../hal/GPIO.h **** }
 718:../hal/GPIO.h **** 
 719:../hal/GPIO.h **** __STATIC_INLINE void P1_0_set_standard_hysteresis(){
 720:../hal/GPIO.h ****     PORT1->PHCR0 &= ~0x00000004UL;
 721:../hal/GPIO.h **** }
 722:../hal/GPIO.h **** 
 723:../hal/GPIO.h **** __STATIC_INLINE void P1_0_set_large_hysteresis(){
 724:../hal/GPIO.h ****     PORT1->PHCR0 |= 0x00000004UL;
 725:../hal/GPIO.h **** }
 726:../hal/GPIO.h **** 
 727:../hal/GPIO.h **** __STATIC_INLINE void P1_0_set(void){
 728:../hal/GPIO.h ****     PORT1->OMR = 0x00000001UL;
 729:../hal/GPIO.h **** }
 730:../hal/GPIO.h **** 
 731:../hal/GPIO.h **** __STATIC_INLINE void P1_0_reset(void){
 732:../hal/GPIO.h ****     PORT1->OMR = 0x00010000UL;
 733:../hal/GPIO.h **** }
 734:../hal/GPIO.h **** 
 735:../hal/GPIO.h **** __STATIC_INLINE void P1_0_toggle(void){
 736:../hal/GPIO.h ****     PORT1->OMR = 0x00010001UL;
 737:../hal/GPIO.h **** }
 738:../hal/GPIO.h **** 
 739:../hal/GPIO.h **** __STATIC_INLINE uint32_t P1_0_read(void){
 740:../hal/GPIO.h ****     return(PORT1->IN & 0x00000001UL);
 741:../hal/GPIO.h **** }
 742:../hal/GPIO.h **** 
 743:../hal/GPIO.h **** __STATIC_INLINE void P1_0_enable_pps(void){
 744:../hal/GPIO.h ****     PORT1->PPS |= 0x00000001UL;
 745:../hal/GPIO.h **** }
 746:../hal/GPIO.h **** 
 747:../hal/GPIO.h **** __STATIC_INLINE void P1_0_disable_pps(void){
 748:../hal/GPIO.h ****     PORT1->PPS &= ~0x00000001UL;
 749:../hal/GPIO.h **** }
 750:../hal/GPIO.h **** 
 751:../hal/GPIO.h **** __STATIC_INLINE void P1_1_set_mode(uint8_t mode){
 752:../hal/GPIO.h ****     PORT1->IOCR0 &= ~0x0000f800UL;
 753:../hal/GPIO.h ****     PORT1->IOCR0 |= mode << 8;
 754:../hal/GPIO.h **** }
 755:../hal/GPIO.h **** 
 756:../hal/GPIO.h **** __STATIC_INLINE void P1_1_set_hwsel(uint32_t config){
 757:../hal/GPIO.h ****     PORT1->HWSEL &= ~0x0000000cUL;
 758:../hal/GPIO.h ****     PORT1->HWSEL |= config << 2;
 759:../hal/GPIO.h **** }
 760:../hal/GPIO.h **** 
 761:../hal/GPIO.h **** __STATIC_INLINE void P1_1_set_standard_hysteresis(){
 762:../hal/GPIO.h ****     PORT1->PHCR0 &= ~0x00000040UL;
 763:../hal/GPIO.h **** }
 764:../hal/GPIO.h **** 
 765:../hal/GPIO.h **** __STATIC_INLINE void P1_1_set_large_hysteresis(){
 766:../hal/GPIO.h ****     PORT1->PHCR0 |= 0x00000040UL;
 767:../hal/GPIO.h **** }
 768:../hal/GPIO.h **** 
 769:../hal/GPIO.h **** __STATIC_INLINE void P1_1_set(void){
 770:../hal/GPIO.h ****     PORT1->OMR = 0x00000002UL;
 771:../hal/GPIO.h **** }
 772:../hal/GPIO.h **** 
 773:../hal/GPIO.h **** __STATIC_INLINE void P1_1_reset(void){
 774:../hal/GPIO.h ****     PORT1->OMR = 0x00020000UL;
 775:../hal/GPIO.h **** }
 776:../hal/GPIO.h **** 
 777:../hal/GPIO.h **** __STATIC_INLINE void P1_1_toggle(void){
 778:../hal/GPIO.h ****     PORT1->OMR = 0x00020002UL;
 779:../hal/GPIO.h **** }
 780:../hal/GPIO.h **** 
 781:../hal/GPIO.h **** __STATIC_INLINE uint32_t P1_1_read(void){
 782:../hal/GPIO.h ****     return(PORT1->IN & 0x00000002UL);
 783:../hal/GPIO.h **** }
 784:../hal/GPIO.h **** 
 785:../hal/GPIO.h **** __STATIC_INLINE void P1_1_enable_pps(void){
 786:../hal/GPIO.h ****     PORT1->PPS |= 0x00000002UL;
 787:../hal/GPIO.h **** }
 788:../hal/GPIO.h **** 
 789:../hal/GPIO.h **** __STATIC_INLINE void P1_1_disable_pps(void){
 790:../hal/GPIO.h ****     PORT1->PPS &= ~0x00000002UL;
 791:../hal/GPIO.h **** }
 792:../hal/GPIO.h **** 
 793:../hal/GPIO.h **** __STATIC_INLINE void P1_2_set_mode(uint8_t mode){
 794:../hal/GPIO.h ****     PORT1->IOCR0 &= ~0x00f80000UL;
 795:../hal/GPIO.h ****     PORT1->IOCR0 |= mode << 16;
 796:../hal/GPIO.h **** }
 797:../hal/GPIO.h **** 
 798:../hal/GPIO.h **** __STATIC_INLINE void P1_2_set_hwsel(uint32_t config){
 799:../hal/GPIO.h ****     PORT1->HWSEL &= ~0x00000030UL;
 800:../hal/GPIO.h ****     PORT1->HWSEL |= config << 4;
 801:../hal/GPIO.h **** }
 802:../hal/GPIO.h **** 
 803:../hal/GPIO.h **** __STATIC_INLINE void P1_2_set_standard_hysteresis(){
 804:../hal/GPIO.h ****     PORT1->PHCR0 &= ~0x00000400UL;
 805:../hal/GPIO.h **** }
 806:../hal/GPIO.h **** 
 807:../hal/GPIO.h **** __STATIC_INLINE void P1_2_set_large_hysteresis(){
 808:../hal/GPIO.h ****     PORT1->PHCR0 |= 0x00000400UL;
 809:../hal/GPIO.h **** }
 810:../hal/GPIO.h **** 
 811:../hal/GPIO.h **** __STATIC_INLINE void P1_2_set(void){
 812:../hal/GPIO.h ****     PORT1->OMR = 0x00000004UL;
 813:../hal/GPIO.h **** }
 814:../hal/GPIO.h **** 
 815:../hal/GPIO.h **** __STATIC_INLINE void P1_2_reset(void){
 816:../hal/GPIO.h ****     PORT1->OMR = 0x00040000UL;
 817:../hal/GPIO.h **** }
 818:../hal/GPIO.h **** 
 819:../hal/GPIO.h **** __STATIC_INLINE void P1_2_toggle(void){
 820:../hal/GPIO.h ****     PORT1->OMR = 0x00040004UL;
 821:../hal/GPIO.h **** }
 822:../hal/GPIO.h **** 
 823:../hal/GPIO.h **** __STATIC_INLINE uint32_t P1_2_read(void){
 824:../hal/GPIO.h ****     return(PORT1->IN & 0x00000004UL);
 825:../hal/GPIO.h **** }
 826:../hal/GPIO.h **** 
 827:../hal/GPIO.h **** __STATIC_INLINE void P1_2_enable_pps(void){
 828:../hal/GPIO.h ****     PORT1->PPS |= 0x00000004UL;
 829:../hal/GPIO.h **** }
 830:../hal/GPIO.h **** 
 831:../hal/GPIO.h **** __STATIC_INLINE void P1_2_disable_pps(void){
 832:../hal/GPIO.h ****     PORT1->PPS &= ~0x00000004UL;
 833:../hal/GPIO.h **** }
 834:../hal/GPIO.h **** 
 835:../hal/GPIO.h **** __STATIC_INLINE void P1_3_set_mode(uint8_t mode){
 836:../hal/GPIO.h ****     PORT1->IOCR0 &= ~0xf8000000UL;
 837:../hal/GPIO.h ****     PORT1->IOCR0 |= mode << 24;
 838:../hal/GPIO.h **** }
 839:../hal/GPIO.h **** 
 840:../hal/GPIO.h **** __STATIC_INLINE void P1_3_set_hwsel(uint32_t config){
 841:../hal/GPIO.h ****     PORT1->HWSEL &= ~0x000000c0UL;
 842:../hal/GPIO.h ****     PORT1->HWSEL |= config << 6;
 843:../hal/GPIO.h **** }
 844:../hal/GPIO.h **** 
 845:../hal/GPIO.h **** __STATIC_INLINE void P1_3_set_standard_hysteresis(){
 846:../hal/GPIO.h ****     PORT1->PHCR0 &= ~0x00004000UL;
 847:../hal/GPIO.h **** }
 848:../hal/GPIO.h **** 
 849:../hal/GPIO.h **** __STATIC_INLINE void P1_3_set_large_hysteresis(){
 850:../hal/GPIO.h ****     PORT1->PHCR0 |= 0x00004000UL;
 851:../hal/GPIO.h **** }
 852:../hal/GPIO.h **** 
 853:../hal/GPIO.h **** __STATIC_INLINE void P1_3_set(void){
 854:../hal/GPIO.h ****     PORT1->OMR = 0x00000008UL;
 855:../hal/GPIO.h **** }
 856:../hal/GPIO.h **** 
 857:../hal/GPIO.h **** __STATIC_INLINE void P1_3_reset(void){
 858:../hal/GPIO.h ****     PORT1->OMR = 0x00080000UL;
 859:../hal/GPIO.h **** }
 860:../hal/GPIO.h **** 
 861:../hal/GPIO.h **** __STATIC_INLINE void P1_3_toggle(void){
 862:../hal/GPIO.h ****     PORT1->OMR = 0x00080008UL;
 863:../hal/GPIO.h **** }
 864:../hal/GPIO.h **** 
 865:../hal/GPIO.h **** __STATIC_INLINE uint32_t P1_3_read(void){
 866:../hal/GPIO.h ****     return(PORT1->IN & 0x00000008UL);
 867:../hal/GPIO.h **** }
 868:../hal/GPIO.h **** 
 869:../hal/GPIO.h **** __STATIC_INLINE void P1_3_enable_pps(void){
 870:../hal/GPIO.h ****     PORT1->PPS |= 0x00000008UL;
 871:../hal/GPIO.h **** }
 872:../hal/GPIO.h **** 
 873:../hal/GPIO.h **** __STATIC_INLINE void P1_3_disable_pps(void){
 874:../hal/GPIO.h ****     PORT1->PPS &= ~0x00000008UL;
 875:../hal/GPIO.h **** }
 876:../hal/GPIO.h **** 
 877:../hal/GPIO.h **** __STATIC_INLINE void P1_4_set_mode(uint8_t mode){
 878:../hal/GPIO.h ****     PORT1->IOCR4 &= ~0x000000f8UL;
 879:../hal/GPIO.h ****     PORT1->IOCR4 |= mode << 0;
 880:../hal/GPIO.h **** }
 881:../hal/GPIO.h **** 
 882:../hal/GPIO.h **** __STATIC_INLINE void P1_4_set_hwsel(uint32_t config){
 883:../hal/GPIO.h ****     PORT1->HWSEL &= ~0x00000300UL;
 884:../hal/GPIO.h ****     PORT1->HWSEL |= config << 8;
 885:../hal/GPIO.h **** }
 886:../hal/GPIO.h **** 
 887:../hal/GPIO.h **** __STATIC_INLINE void P1_4_set_standard_hysteresis(){
 888:../hal/GPIO.h ****     PORT1->PHCR0 &= ~0x00040000UL;
 889:../hal/GPIO.h **** }
 890:../hal/GPIO.h **** 
 891:../hal/GPIO.h **** __STATIC_INLINE void P1_4_set_large_hysteresis(){
 892:../hal/GPIO.h ****     PORT1->PHCR0 |= 0x00040000UL;
 893:../hal/GPIO.h **** }
 894:../hal/GPIO.h **** 
 895:../hal/GPIO.h **** __STATIC_INLINE void P1_4_set(void){
 896:../hal/GPIO.h ****     PORT1->OMR = 0x00000010UL;
 897:../hal/GPIO.h **** }
 898:../hal/GPIO.h **** 
 899:../hal/GPIO.h **** __STATIC_INLINE void P1_4_reset(void){
 900:../hal/GPIO.h ****     PORT1->OMR = 0x00100000UL;
 901:../hal/GPIO.h **** }
 902:../hal/GPIO.h **** 
 903:../hal/GPIO.h **** __STATIC_INLINE void P1_4_toggle(void){
 904:../hal/GPIO.h ****     PORT1->OMR = 0x00100010UL;
 905:../hal/GPIO.h **** }
 906:../hal/GPIO.h **** 
 907:../hal/GPIO.h **** __STATIC_INLINE uint32_t P1_4_read(void){
 908:../hal/GPIO.h ****     return(PORT1->IN & 0x00000010UL);
 909:../hal/GPIO.h **** }
 910:../hal/GPIO.h **** 
 911:../hal/GPIO.h **** __STATIC_INLINE void P1_4_enable_pps(void){
 912:../hal/GPIO.h ****     PORT1->PPS |= 0x00000010UL;
 913:../hal/GPIO.h **** }
 914:../hal/GPIO.h **** 
 915:../hal/GPIO.h **** __STATIC_INLINE void P1_4_disable_pps(void){
 916:../hal/GPIO.h ****     PORT1->PPS &= ~0x00000010UL;
 917:../hal/GPIO.h **** }
 918:../hal/GPIO.h **** 
 919:../hal/GPIO.h **** __STATIC_INLINE void P1_5_set_mode(uint8_t mode){
 920:../hal/GPIO.h ****     PORT1->IOCR4 &= ~0x0000f800UL;
 921:../hal/GPIO.h ****     PORT1->IOCR4 |= mode << 8;
 922:../hal/GPIO.h **** }
 923:../hal/GPIO.h **** 
 924:../hal/GPIO.h **** __STATIC_INLINE void P1_5_set_hwsel(uint32_t config){
 925:../hal/GPIO.h ****     PORT1->HWSEL &= ~0x00000c00UL;
 926:../hal/GPIO.h ****     PORT1->HWSEL |= config << 10;
 927:../hal/GPIO.h **** }
 928:../hal/GPIO.h **** 
 929:../hal/GPIO.h **** __STATIC_INLINE void P1_5_set_standard_hysteresis(){
 930:../hal/GPIO.h ****     PORT1->PHCR0 &= ~0x00400000UL;
 931:../hal/GPIO.h **** }
 932:../hal/GPIO.h **** 
 933:../hal/GPIO.h **** __STATIC_INLINE void P1_5_set_large_hysteresis(){
 934:../hal/GPIO.h ****     PORT1->PHCR0 |= 0x00400000UL;
 935:../hal/GPIO.h **** }
 936:../hal/GPIO.h **** 
 937:../hal/GPIO.h **** __STATIC_INLINE void P1_5_set(void){
 938:../hal/GPIO.h ****     PORT1->OMR = 0x00000020UL;
 939:../hal/GPIO.h **** }
 940:../hal/GPIO.h **** 
 941:../hal/GPIO.h **** __STATIC_INLINE void P1_5_reset(void){
 942:../hal/GPIO.h ****     PORT1->OMR = 0x00200000UL;
 943:../hal/GPIO.h **** }
 944:../hal/GPIO.h **** 
 945:../hal/GPIO.h **** __STATIC_INLINE void P1_5_toggle(void){
 946:../hal/GPIO.h ****     PORT1->OMR = 0x00200020UL;
 947:../hal/GPIO.h **** }
 948:../hal/GPIO.h **** 
 949:../hal/GPIO.h **** __STATIC_INLINE uint32_t P1_5_read(void){
 950:../hal/GPIO.h ****     return(PORT1->IN & 0x00000020UL);
 951:../hal/GPIO.h **** }
 952:../hal/GPIO.h **** 
 953:../hal/GPIO.h **** __STATIC_INLINE void P1_5_enable_pps(void){
 954:../hal/GPIO.h ****     PORT1->PPS |= 0x00000020UL;
 955:../hal/GPIO.h **** }
 956:../hal/GPIO.h **** 
 957:../hal/GPIO.h **** __STATIC_INLINE void P1_5_disable_pps(void){
 958:../hal/GPIO.h ****     PORT1->PPS &= ~0x00000020UL;
 959:../hal/GPIO.h **** }
 960:../hal/GPIO.h **** 
 961:../hal/GPIO.h **** __STATIC_INLINE void P2_0_set_mode(uint8_t mode){
 962:../hal/GPIO.h ****     PORT2->IOCR0 &= ~0x000000f8UL;
 963:../hal/GPIO.h ****     PORT2->IOCR0 |= mode << 0;
 964:../hal/GPIO.h **** }
 965:../hal/GPIO.h **** 
 966:../hal/GPIO.h **** __STATIC_INLINE void P2_0_set_hwsel(uint32_t config){
 967:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00000003UL;
 968:../hal/GPIO.h ****     PORT2->HWSEL |= config << 0;
 969:../hal/GPIO.h **** }
 970:../hal/GPIO.h **** 
 971:../hal/GPIO.h **** __STATIC_INLINE void P2_0_set_standard_hysteresis(){
 972:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x00000004UL;
 973:../hal/GPIO.h **** }
 974:../hal/GPIO.h **** 
 975:../hal/GPIO.h **** __STATIC_INLINE void P2_0_set_large_hysteresis(){
 976:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x00000004UL;
 977:../hal/GPIO.h **** }
 978:../hal/GPIO.h **** 
 979:../hal/GPIO.h **** __STATIC_INLINE void P2_0_enable_digital(void){
 980:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000001UL;
 981:../hal/GPIO.h **** }
 982:../hal/GPIO.h **** 
 983:../hal/GPIO.h **** __STATIC_INLINE void P2_0_disable_digital(void){
 984:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000001UL;
 985:../hal/GPIO.h **** }
 986:../hal/GPIO.h **** 
 987:../hal/GPIO.h **** __STATIC_INLINE void P2_0_set(void){
 988:../hal/GPIO.h ****     PORT2->OMR = 0x00000001UL;
 989:../hal/GPIO.h **** }
 990:../hal/GPIO.h **** 
 991:../hal/GPIO.h **** __STATIC_INLINE void P2_0_reset(void){
 992:../hal/GPIO.h ****     PORT2->OMR = 0x00010000UL;
 993:../hal/GPIO.h **** }
 994:../hal/GPIO.h **** 
 995:../hal/GPIO.h **** __STATIC_INLINE void P2_0_toggle(void){
 996:../hal/GPIO.h ****     PORT2->OMR = 0x00010001UL;
 997:../hal/GPIO.h **** }
 998:../hal/GPIO.h **** 
 999:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_0_read(void){
1000:../hal/GPIO.h ****     return(PORT2->IN & 0x00000001UL);
1001:../hal/GPIO.h **** }
1002:../hal/GPIO.h **** 
1003:../hal/GPIO.h **** __STATIC_INLINE void P2_0_enable_pps(void){
1004:../hal/GPIO.h ****     PORT2->PPS |= 0x00000001UL;
1005:../hal/GPIO.h **** }
1006:../hal/GPIO.h **** 
1007:../hal/GPIO.h **** __STATIC_INLINE void P2_0_disable_pps(void){
1008:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000001UL;
1009:../hal/GPIO.h **** }
1010:../hal/GPIO.h **** 
1011:../hal/GPIO.h **** __STATIC_INLINE void P2_1_set_mode(uint8_t mode){
1012:../hal/GPIO.h ****     PORT2->IOCR0 &= ~0x0000f800UL;
1013:../hal/GPIO.h ****     PORT2->IOCR0 |= mode << 8;
1014:../hal/GPIO.h **** }
1015:../hal/GPIO.h **** 
1016:../hal/GPIO.h **** __STATIC_INLINE void P2_1_set_hwsel(uint32_t config){
1017:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x0000000cUL;
1018:../hal/GPIO.h ****     PORT2->HWSEL |= config << 2;
1019:../hal/GPIO.h **** }
1020:../hal/GPIO.h **** 
1021:../hal/GPIO.h **** __STATIC_INLINE void P2_1_set_standard_hysteresis(){
1022:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x00000040UL;
1023:../hal/GPIO.h **** }
1024:../hal/GPIO.h **** 
1025:../hal/GPIO.h **** __STATIC_INLINE void P2_1_set_large_hysteresis(){
1026:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x00000040UL;
1027:../hal/GPIO.h **** }
1028:../hal/GPIO.h **** 
1029:../hal/GPIO.h **** __STATIC_INLINE void P2_1_enable_digital(void){
1030:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000002UL;
1031:../hal/GPIO.h **** }
1032:../hal/GPIO.h **** 
1033:../hal/GPIO.h **** __STATIC_INLINE void P2_1_disable_digital(void){
1034:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000002UL;
1035:../hal/GPIO.h **** }
1036:../hal/GPIO.h **** 
1037:../hal/GPIO.h **** __STATIC_INLINE void P2_1_set(void){
1038:../hal/GPIO.h ****     PORT2->OMR = 0x00000002UL;
1039:../hal/GPIO.h **** }
1040:../hal/GPIO.h **** 
1041:../hal/GPIO.h **** __STATIC_INLINE void P2_1_reset(void){
1042:../hal/GPIO.h ****     PORT2->OMR = 0x00020000UL;
1043:../hal/GPIO.h **** }
1044:../hal/GPIO.h **** 
1045:../hal/GPIO.h **** __STATIC_INLINE void P2_1_toggle(void){
1046:../hal/GPIO.h ****     PORT2->OMR = 0x00020002UL;
1047:../hal/GPIO.h **** }
1048:../hal/GPIO.h **** 
1049:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_1_read(void){
1050:../hal/GPIO.h ****     return(PORT2->IN & 0x00000002UL);
1051:../hal/GPIO.h **** }
1052:../hal/GPIO.h **** 
1053:../hal/GPIO.h **** __STATIC_INLINE void P2_1_enable_pps(void){
1054:../hal/GPIO.h ****     PORT2->PPS |= 0x00000002UL;
1055:../hal/GPIO.h **** }
1056:../hal/GPIO.h **** 
1057:../hal/GPIO.h **** __STATIC_INLINE void P2_1_disable_pps(void){
1058:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000002UL;
1059:../hal/GPIO.h **** }
1060:../hal/GPIO.h **** 
1061:../hal/GPIO.h **** __STATIC_INLINE void P2_2_set_mode(uint8_t mode){
1062:../hal/GPIO.h ****     PORT2->IOCR0 &= ~0x00f80000UL;
1063:../hal/GPIO.h ****     PORT2->IOCR0 |= mode << 16;
1064:../hal/GPIO.h **** }
1065:../hal/GPIO.h **** 
1066:../hal/GPIO.h **** __STATIC_INLINE void P2_2_set_hwsel(uint32_t config){
1067:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00000030UL;
1068:../hal/GPIO.h ****     PORT2->HWSEL |= config << 4;
1069:../hal/GPIO.h **** }
1070:../hal/GPIO.h **** 
1071:../hal/GPIO.h **** __STATIC_INLINE void P2_2_set_standard_hysteresis(){
1072:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x00000400UL;
1073:../hal/GPIO.h **** }
1074:../hal/GPIO.h **** 
1075:../hal/GPIO.h **** __STATIC_INLINE void P2_2_set_large_hysteresis(){
1076:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x00000400UL;
1077:../hal/GPIO.h **** }
1078:../hal/GPIO.h **** 
1079:../hal/GPIO.h **** __STATIC_INLINE void P2_2_enable_digital(void){
1080:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000004UL;
1081:../hal/GPIO.h **** }
1082:../hal/GPIO.h **** 
1083:../hal/GPIO.h **** __STATIC_INLINE void P2_2_disable_digital(void){
1084:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000004UL;
1085:../hal/GPIO.h **** }
1086:../hal/GPIO.h **** 
1087:../hal/GPIO.h **** __STATIC_INLINE void P2_2_set(void){
1088:../hal/GPIO.h ****     PORT2->OMR = 0x00000004UL;
1089:../hal/GPIO.h **** }
1090:../hal/GPIO.h **** 
1091:../hal/GPIO.h **** __STATIC_INLINE void P2_2_reset(void){
1092:../hal/GPIO.h ****     PORT2->OMR = 0x00040000UL;
1093:../hal/GPIO.h **** }
1094:../hal/GPIO.h **** 
1095:../hal/GPIO.h **** __STATIC_INLINE void P2_2_toggle(void){
1096:../hal/GPIO.h ****     PORT2->OMR = 0x00040004UL;
1097:../hal/GPIO.h **** }
1098:../hal/GPIO.h **** 
1099:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_2_read(void){
1100:../hal/GPIO.h ****     return(PORT2->IN & 0x00000004UL);
1101:../hal/GPIO.h **** }
1102:../hal/GPIO.h **** 
1103:../hal/GPIO.h **** __STATIC_INLINE void P2_2_enable_pps(void){
1104:../hal/GPIO.h ****     PORT2->PPS |= 0x00000004UL;
1105:../hal/GPIO.h **** }
1106:../hal/GPIO.h **** 
1107:../hal/GPIO.h **** __STATIC_INLINE void P2_2_disable_pps(void){
1108:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000004UL;
1109:../hal/GPIO.h **** }
1110:../hal/GPIO.h **** 
1111:../hal/GPIO.h **** __STATIC_INLINE void P2_3_set_mode(uint8_t mode){
1112:../hal/GPIO.h ****     PORT2->IOCR0 &= ~0xf8000000UL;
1113:../hal/GPIO.h ****     PORT2->IOCR0 |= mode << 24;
1114:../hal/GPIO.h **** }
1115:../hal/GPIO.h **** 
1116:../hal/GPIO.h **** __STATIC_INLINE void P2_3_set_hwsel(uint32_t config){
1117:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x000000c0UL;
1118:../hal/GPIO.h ****     PORT2->HWSEL |= config << 6;
1119:../hal/GPIO.h **** }
1120:../hal/GPIO.h **** 
1121:../hal/GPIO.h **** __STATIC_INLINE void P2_3_set_standard_hysteresis(){
1122:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x00004000UL;
1123:../hal/GPIO.h **** }
1124:../hal/GPIO.h **** 
1125:../hal/GPIO.h **** __STATIC_INLINE void P2_3_set_large_hysteresis(){
1126:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x00004000UL;
1127:../hal/GPIO.h **** }
1128:../hal/GPIO.h **** 
1129:../hal/GPIO.h **** __STATIC_INLINE void P2_3_enable_digital(void){
1130:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000008UL;
1131:../hal/GPIO.h **** }
1132:../hal/GPIO.h **** 
1133:../hal/GPIO.h **** __STATIC_INLINE void P2_3_disable_digital(void){
1134:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000008UL;
1135:../hal/GPIO.h **** }
1136:../hal/GPIO.h **** 
1137:../hal/GPIO.h **** __STATIC_INLINE void P2_3_set(void){
1138:../hal/GPIO.h ****     PORT2->OMR = 0x00000008UL;
1139:../hal/GPIO.h **** }
1140:../hal/GPIO.h **** 
1141:../hal/GPIO.h **** __STATIC_INLINE void P2_3_reset(void){
1142:../hal/GPIO.h ****     PORT2->OMR = 0x00080000UL;
1143:../hal/GPIO.h **** }
1144:../hal/GPIO.h **** 
1145:../hal/GPIO.h **** __STATIC_INLINE void P2_3_toggle(void){
1146:../hal/GPIO.h ****     PORT2->OMR = 0x00080008UL;
1147:../hal/GPIO.h **** }
1148:../hal/GPIO.h **** 
1149:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_3_read(void){
1150:../hal/GPIO.h ****     return(PORT2->IN & 0x00000008UL);
1151:../hal/GPIO.h **** }
1152:../hal/GPIO.h **** 
1153:../hal/GPIO.h **** __STATIC_INLINE void P2_3_enable_pps(void){
1154:../hal/GPIO.h ****     PORT2->PPS |= 0x00000008UL;
1155:../hal/GPIO.h **** }
1156:../hal/GPIO.h **** 
1157:../hal/GPIO.h **** __STATIC_INLINE void P2_3_disable_pps(void){
1158:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000008UL;
1159:../hal/GPIO.h **** }
1160:../hal/GPIO.h **** 
1161:../hal/GPIO.h **** __STATIC_INLINE void P2_4_set_mode(uint8_t mode){
1162:../hal/GPIO.h ****     PORT2->IOCR4 &= ~0x000000f8UL;
1163:../hal/GPIO.h ****     PORT2->IOCR4 |= mode << 0;
1164:../hal/GPIO.h **** }
1165:../hal/GPIO.h **** 
1166:../hal/GPIO.h **** __STATIC_INLINE void P2_4_set_hwsel(uint32_t config){
1167:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00000300UL;
1168:../hal/GPIO.h ****     PORT2->HWSEL |= config << 8;
1169:../hal/GPIO.h **** }
1170:../hal/GPIO.h **** 
1171:../hal/GPIO.h **** __STATIC_INLINE void P2_4_set_standard_hysteresis(){
1172:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x00040000UL;
1173:../hal/GPIO.h **** }
1174:../hal/GPIO.h **** 
1175:../hal/GPIO.h **** __STATIC_INLINE void P2_4_set_large_hysteresis(){
1176:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x00040000UL;
1177:../hal/GPIO.h **** }
1178:../hal/GPIO.h **** 
1179:../hal/GPIO.h **** __STATIC_INLINE void P2_4_enable_digital(void){
1180:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000010UL;
1181:../hal/GPIO.h **** }
1182:../hal/GPIO.h **** 
1183:../hal/GPIO.h **** __STATIC_INLINE void P2_4_disable_digital(void){
1184:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000010UL;
1185:../hal/GPIO.h **** }
1186:../hal/GPIO.h **** 
1187:../hal/GPIO.h **** __STATIC_INLINE void P2_4_set(void){
1188:../hal/GPIO.h ****     PORT2->OMR = 0x00000010UL;
1189:../hal/GPIO.h **** }
1190:../hal/GPIO.h **** 
1191:../hal/GPIO.h **** __STATIC_INLINE void P2_4_reset(void){
1192:../hal/GPIO.h ****     PORT2->OMR = 0x00100000UL;
1193:../hal/GPIO.h **** }
1194:../hal/GPIO.h **** 
1195:../hal/GPIO.h **** __STATIC_INLINE void P2_4_toggle(void){
1196:../hal/GPIO.h ****     PORT2->OMR = 0x00100010UL;
1197:../hal/GPIO.h **** }
1198:../hal/GPIO.h **** 
1199:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_4_read(void){
1200:../hal/GPIO.h ****     return(PORT2->IN & 0x00000010UL);
1201:../hal/GPIO.h **** }
1202:../hal/GPIO.h **** 
1203:../hal/GPIO.h **** __STATIC_INLINE void P2_4_enable_pps(void){
1204:../hal/GPIO.h ****     PORT2->PPS |= 0x00000010UL;
1205:../hal/GPIO.h **** }
1206:../hal/GPIO.h **** 
1207:../hal/GPIO.h **** __STATIC_INLINE void P2_4_disable_pps(void){
1208:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000010UL;
1209:../hal/GPIO.h **** }
1210:../hal/GPIO.h **** 
1211:../hal/GPIO.h **** __STATIC_INLINE void P2_5_set_mode(uint8_t mode){
1212:../hal/GPIO.h ****     PORT2->IOCR4 &= ~0x0000f800UL;
1213:../hal/GPIO.h ****     PORT2->IOCR4 |= mode << 8;
1214:../hal/GPIO.h **** }
1215:../hal/GPIO.h **** 
1216:../hal/GPIO.h **** __STATIC_INLINE void P2_5_set_hwsel(uint32_t config){
1217:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00000c00UL;
1218:../hal/GPIO.h ****     PORT2->HWSEL |= config << 10;
1219:../hal/GPIO.h **** }
1220:../hal/GPIO.h **** 
1221:../hal/GPIO.h **** __STATIC_INLINE void P2_5_set_standard_hysteresis(){
1222:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x00400000UL;
1223:../hal/GPIO.h **** }
1224:../hal/GPIO.h **** 
1225:../hal/GPIO.h **** __STATIC_INLINE void P2_5_set_large_hysteresis(){
1226:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x00400000UL;
1227:../hal/GPIO.h **** }
1228:../hal/GPIO.h **** 
1229:../hal/GPIO.h **** __STATIC_INLINE void P2_5_enable_digital(void){
1230:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000020UL;
1231:../hal/GPIO.h **** }
1232:../hal/GPIO.h **** 
1233:../hal/GPIO.h **** __STATIC_INLINE void P2_5_disable_digital(void){
1234:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000020UL;
1235:../hal/GPIO.h **** }
1236:../hal/GPIO.h **** 
1237:../hal/GPIO.h **** __STATIC_INLINE void P2_5_set(void){
1238:../hal/GPIO.h ****     PORT2->OMR = 0x00000020UL;
1239:../hal/GPIO.h **** }
1240:../hal/GPIO.h **** 
1241:../hal/GPIO.h **** __STATIC_INLINE void P2_5_reset(void){
1242:../hal/GPIO.h ****     PORT2->OMR = 0x00200000UL;
1243:../hal/GPIO.h **** }
1244:../hal/GPIO.h **** 
1245:../hal/GPIO.h **** __STATIC_INLINE void P2_5_toggle(void){
1246:../hal/GPIO.h ****     PORT2->OMR = 0x00200020UL;
1247:../hal/GPIO.h **** }
1248:../hal/GPIO.h **** 
1249:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_5_read(void){
1250:../hal/GPIO.h ****     return(PORT2->IN & 0x00000020UL);
1251:../hal/GPIO.h **** }
1252:../hal/GPIO.h **** 
1253:../hal/GPIO.h **** __STATIC_INLINE void P2_5_enable_pps(void){
1254:../hal/GPIO.h ****     PORT2->PPS |= 0x00000020UL;
1255:../hal/GPIO.h **** }
1256:../hal/GPIO.h **** 
1257:../hal/GPIO.h **** __STATIC_INLINE void P2_5_disable_pps(void){
1258:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000020UL;
1259:../hal/GPIO.h **** }
1260:../hal/GPIO.h **** 
1261:../hal/GPIO.h **** __STATIC_INLINE void P2_6_set_mode(uint8_t mode){
1262:../hal/GPIO.h ****     PORT2->IOCR4 &= ~0x00f80000UL;
1263:../hal/GPIO.h ****     PORT2->IOCR4 |= mode << 16;
1264:../hal/GPIO.h **** }
1265:../hal/GPIO.h **** 
1266:../hal/GPIO.h **** __STATIC_INLINE void P2_6_set_hwsel(uint32_t config){
1267:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00003000UL;
1268:../hal/GPIO.h ****     PORT2->HWSEL |= config << 12;
1269:../hal/GPIO.h **** }
1270:../hal/GPIO.h **** 
1271:../hal/GPIO.h **** __STATIC_INLINE void P2_6_set_standard_hysteresis(){
1272:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x04000000UL;
1273:../hal/GPIO.h **** }
1274:../hal/GPIO.h **** 
1275:../hal/GPIO.h **** __STATIC_INLINE void P2_6_set_large_hysteresis(){
1276:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x04000000UL;
1277:../hal/GPIO.h **** }
1278:../hal/GPIO.h **** 
1279:../hal/GPIO.h **** __STATIC_INLINE void P2_6_enable_digital(void){
1280:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000040UL;
1281:../hal/GPIO.h **** }
1282:../hal/GPIO.h **** 
1283:../hal/GPIO.h **** __STATIC_INLINE void P2_6_disable_digital(void){
1284:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000040UL;
1285:../hal/GPIO.h **** }
1286:../hal/GPIO.h **** 
1287:../hal/GPIO.h **** __STATIC_INLINE void P2_6_set(void){
1288:../hal/GPIO.h ****     PORT2->OMR = 0x00000040UL;
1289:../hal/GPIO.h **** }
1290:../hal/GPIO.h **** 
1291:../hal/GPIO.h **** __STATIC_INLINE void P2_6_reset(void){
1292:../hal/GPIO.h ****     PORT2->OMR = 0x00400000UL;
1293:../hal/GPIO.h **** }
1294:../hal/GPIO.h **** 
1295:../hal/GPIO.h **** __STATIC_INLINE void P2_6_toggle(void){
1296:../hal/GPIO.h ****     PORT2->OMR = 0x00400040UL;
1297:../hal/GPIO.h **** }
1298:../hal/GPIO.h **** 
1299:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_6_read(void){
1300:../hal/GPIO.h ****     return(PORT2->IN & 0x00000040UL);
1301:../hal/GPIO.h **** }
1302:../hal/GPIO.h **** 
1303:../hal/GPIO.h **** __STATIC_INLINE void P2_6_enable_pps(void){
1304:../hal/GPIO.h ****     PORT2->PPS |= 0x00000040UL;
1305:../hal/GPIO.h **** }
1306:../hal/GPIO.h **** 
1307:../hal/GPIO.h **** __STATIC_INLINE void P2_6_disable_pps(void){
1308:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000040UL;
1309:../hal/GPIO.h **** }
1310:../hal/GPIO.h **** 
1311:../hal/GPIO.h **** __STATIC_INLINE void P2_7_set_mode(uint8_t mode){
1312:../hal/GPIO.h ****     PORT2->IOCR4 &= ~0xf8000000UL;
1313:../hal/GPIO.h ****     PORT2->IOCR4 |= mode << 24;
1314:../hal/GPIO.h **** }
1315:../hal/GPIO.h **** 
1316:../hal/GPIO.h **** __STATIC_INLINE void P2_7_set_hwsel(uint32_t config){
1317:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x0000c000UL;
1318:../hal/GPIO.h ****     PORT2->HWSEL |= config << 14;
1319:../hal/GPIO.h **** }
1320:../hal/GPIO.h **** 
1321:../hal/GPIO.h **** __STATIC_INLINE void P2_7_set_standard_hysteresis(){
1322:../hal/GPIO.h ****     PORT2->PHCR0 &= ~0x40000000UL;
1323:../hal/GPIO.h **** }
1324:../hal/GPIO.h **** 
1325:../hal/GPIO.h **** __STATIC_INLINE void P2_7_set_large_hysteresis(){
1326:../hal/GPIO.h ****     PORT2->PHCR0 |= 0x40000000UL;
1327:../hal/GPIO.h **** }
1328:../hal/GPIO.h **** 
1329:../hal/GPIO.h **** __STATIC_INLINE void P2_7_enable_digital(void){
 741              	.LM20:
 742              	.LFBB3:
 743 0000 80B5     	 push {r7,lr}
 744 0002 00AF     	 add r7,sp,#0
1330:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000080UL;
 746              	.LM21:
 747 0004 034B     	 ldr r3,.L12
 748 0006 034A     	 ldr r2,.L12
 749 0008 126E     	 ldr r2,[r2,#96]
 750 000a 8021     	 mov r1,#128
 751 000c 8A43     	 bic r2,r1
 752 000e 1A66     	 str r2,[r3,#96]
1331:../hal/GPIO.h **** }
 754              	.LM22:
 755 0010 BD46     	 mov sp,r7
 756              	 
 757 0012 80BD     	 pop {r7,pc}
 758              	.L13:
 759              	 .align 2
 760              	.L12:
 761 0014 00020440 	 .word 1074004480
 763              	.Lscope3:
 765              	 .stabd 78,0,0
 766              	 .section .text._ZL19P2_9_enable_digitalv,"ax",%progbits
 767              	 .align 2
 769              	 .code 16
 770              	 .thumb_func
 772              	_ZL19P2_9_enable_digitalv:
 773              	 .stabd 46,0,0
1332:../hal/GPIO.h **** 
1333:../hal/GPIO.h **** __STATIC_INLINE void P2_7_disable_digital(void){
1334:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000080UL;
1335:../hal/GPIO.h **** }
1336:../hal/GPIO.h **** 
1337:../hal/GPIO.h **** __STATIC_INLINE void P2_7_set(void){
1338:../hal/GPIO.h ****     PORT2->OMR = 0x00000080UL;
1339:../hal/GPIO.h **** }
1340:../hal/GPIO.h **** 
1341:../hal/GPIO.h **** __STATIC_INLINE void P2_7_reset(void){
1342:../hal/GPIO.h ****     PORT2->OMR = 0x00800000UL;
1343:../hal/GPIO.h **** }
1344:../hal/GPIO.h **** 
1345:../hal/GPIO.h **** __STATIC_INLINE void P2_7_toggle(void){
1346:../hal/GPIO.h ****     PORT2->OMR = 0x00800080UL;
1347:../hal/GPIO.h **** }
1348:../hal/GPIO.h **** 
1349:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_7_read(void){
1350:../hal/GPIO.h ****     return(PORT2->IN & 0x00000080UL);
1351:../hal/GPIO.h **** }
1352:../hal/GPIO.h **** 
1353:../hal/GPIO.h **** __STATIC_INLINE void P2_7_enable_pps(void){
1354:../hal/GPIO.h ****     PORT2->PPS |= 0x00000080UL;
1355:../hal/GPIO.h **** }
1356:../hal/GPIO.h **** 
1357:../hal/GPIO.h **** __STATIC_INLINE void P2_7_disable_pps(void){
1358:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000080UL;
1359:../hal/GPIO.h **** }
1360:../hal/GPIO.h **** 
1361:../hal/GPIO.h **** __STATIC_INLINE void P2_8_set_mode(uint8_t mode){
1362:../hal/GPIO.h ****     PORT2->IOCR8 &= ~0x000000f8UL;
1363:../hal/GPIO.h ****     PORT2->IOCR8 |= mode << 0;
1364:../hal/GPIO.h **** }
1365:../hal/GPIO.h **** 
1366:../hal/GPIO.h **** __STATIC_INLINE void P2_8_set_hwsel(uint32_t config){
1367:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00030000UL;
1368:../hal/GPIO.h ****     PORT2->HWSEL |= config << 16;
1369:../hal/GPIO.h **** }
1370:../hal/GPIO.h **** 
1371:../hal/GPIO.h **** __STATIC_INLINE void P2_8_set_standard_hysteresis(){
1372:../hal/GPIO.h ****     PORT2->PHCR1 &= ~0x00000004UL;
1373:../hal/GPIO.h **** }
1374:../hal/GPIO.h **** 
1375:../hal/GPIO.h **** __STATIC_INLINE void P2_8_set_large_hysteresis(){
1376:../hal/GPIO.h ****     PORT2->PHCR1 |= 0x00000004UL;
1377:../hal/GPIO.h **** }
1378:../hal/GPIO.h **** 
1379:../hal/GPIO.h **** __STATIC_INLINE void P2_8_enable_digital(void){
1380:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000100UL;
1381:../hal/GPIO.h **** }
1382:../hal/GPIO.h **** 
1383:../hal/GPIO.h **** __STATIC_INLINE void P2_8_disable_digital(void){
1384:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000100UL;
1385:../hal/GPIO.h **** }
1386:../hal/GPIO.h **** 
1387:../hal/GPIO.h **** __STATIC_INLINE void P2_8_set(void){
1388:../hal/GPIO.h ****     PORT2->OMR = 0x00000100UL;
1389:../hal/GPIO.h **** }
1390:../hal/GPIO.h **** 
1391:../hal/GPIO.h **** __STATIC_INLINE void P2_8_reset(void){
1392:../hal/GPIO.h ****     PORT2->OMR = 0x01000000UL;
1393:../hal/GPIO.h **** }
1394:../hal/GPIO.h **** 
1395:../hal/GPIO.h **** __STATIC_INLINE void P2_8_toggle(void){
1396:../hal/GPIO.h ****     PORT2->OMR = 0x01000100UL;
1397:../hal/GPIO.h **** }
1398:../hal/GPIO.h **** 
1399:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_8_read(void){
1400:../hal/GPIO.h ****     return(PORT2->IN & 0x00000100UL);
1401:../hal/GPIO.h **** }
1402:../hal/GPIO.h **** 
1403:../hal/GPIO.h **** __STATIC_INLINE void P2_8_enable_pps(void){
1404:../hal/GPIO.h ****     PORT2->PPS |= 0x00000100UL;
1405:../hal/GPIO.h **** }
1406:../hal/GPIO.h **** 
1407:../hal/GPIO.h **** __STATIC_INLINE void P2_8_disable_pps(void){
1408:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000100UL;
1409:../hal/GPIO.h **** }
1410:../hal/GPIO.h **** 
1411:../hal/GPIO.h **** __STATIC_INLINE void P2_9_set_mode(uint8_t mode){
1412:../hal/GPIO.h ****     PORT2->IOCR8 &= ~0x0000f800UL;
1413:../hal/GPIO.h ****     PORT2->IOCR8 |= mode << 8;
1414:../hal/GPIO.h **** }
1415:../hal/GPIO.h **** 
1416:../hal/GPIO.h **** __STATIC_INLINE void P2_9_set_hwsel(uint32_t config){
1417:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x000c0000UL;
1418:../hal/GPIO.h ****     PORT2->HWSEL |= config << 18;
1419:../hal/GPIO.h **** }
1420:../hal/GPIO.h **** 
1421:../hal/GPIO.h **** __STATIC_INLINE void P2_9_set_standard_hysteresis(){
1422:../hal/GPIO.h ****     PORT2->PHCR1 &= ~0x00000040UL;
1423:../hal/GPIO.h **** }
1424:../hal/GPIO.h **** 
1425:../hal/GPIO.h **** __STATIC_INLINE void P2_9_set_large_hysteresis(){
1426:../hal/GPIO.h ****     PORT2->PHCR1 |= 0x00000040UL;
1427:../hal/GPIO.h **** }
1428:../hal/GPIO.h **** 
1429:../hal/GPIO.h **** __STATIC_INLINE void P2_9_enable_digital(void){
 775              	.LM23:
 776              	.LFBB4:
 777 0000 80B5     	 push {r7,lr}
 778 0002 00AF     	 add r7,sp,#0
1430:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000200UL;
 780              	.LM24:
 781 0004 034B     	 ldr r3,.L15
 782 0006 034A     	 ldr r2,.L15
 783 0008 126E     	 ldr r2,[r2,#96]
 784 000a 0349     	 ldr r1,.L15+4
 785 000c 0A40     	 and r2,r1
 786 000e 1A66     	 str r2,[r3,#96]
1431:../hal/GPIO.h **** }
 788              	.LM25:
 789 0010 BD46     	 mov sp,r7
 790              	 
 791 0012 80BD     	 pop {r7,pc}
 792              	.L16:
 793              	 .align 2
 794              	.L15:
 795 0014 00020440 	 .word 1074004480
 796 0018 FFFDFFFF 	 .word -513
 798              	.Lscope4:
 800              	 .stabd 78,0,0
 801              	 .section .text._ZL20P2_10_enable_digitalv,"ax",%progbits
 802              	 .align 2
 804              	 .code 16
 805              	 .thumb_func
 807              	_ZL20P2_10_enable_digitalv:
 808              	 .stabd 46,0,0
1432:../hal/GPIO.h **** 
1433:../hal/GPIO.h **** __STATIC_INLINE void P2_9_disable_digital(void){
1434:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000200UL;
1435:../hal/GPIO.h **** }
1436:../hal/GPIO.h **** 
1437:../hal/GPIO.h **** __STATIC_INLINE void P2_9_set(void){
1438:../hal/GPIO.h ****     PORT2->OMR = 0x00000200UL;
1439:../hal/GPIO.h **** }
1440:../hal/GPIO.h **** 
1441:../hal/GPIO.h **** __STATIC_INLINE void P2_9_reset(void){
1442:../hal/GPIO.h ****     PORT2->OMR = 0x02000000UL;
1443:../hal/GPIO.h **** }
1444:../hal/GPIO.h **** 
1445:../hal/GPIO.h **** __STATIC_INLINE void P2_9_toggle(void){
1446:../hal/GPIO.h ****     PORT2->OMR = 0x02000200UL;
1447:../hal/GPIO.h **** }
1448:../hal/GPIO.h **** 
1449:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_9_read(void){
1450:../hal/GPIO.h ****     return(PORT2->IN & 0x00000200UL);
1451:../hal/GPIO.h **** }
1452:../hal/GPIO.h **** 
1453:../hal/GPIO.h **** __STATIC_INLINE void P2_9_enable_pps(void){
1454:../hal/GPIO.h ****     PORT2->PPS |= 0x00000200UL;
1455:../hal/GPIO.h **** }
1456:../hal/GPIO.h **** 
1457:../hal/GPIO.h **** __STATIC_INLINE void P2_9_disable_pps(void){
1458:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000200UL;
1459:../hal/GPIO.h **** }
1460:../hal/GPIO.h **** 
1461:../hal/GPIO.h **** __STATIC_INLINE void P2_10_set_mode(uint8_t mode){
1462:../hal/GPIO.h ****     PORT2->IOCR8 &= ~0x00f80000UL;
1463:../hal/GPIO.h ****     PORT2->IOCR8 |= mode << 16;
1464:../hal/GPIO.h **** }
1465:../hal/GPIO.h **** 
1466:../hal/GPIO.h **** __STATIC_INLINE void P2_10_set_hwsel(uint32_t config){
1467:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00300000UL;
1468:../hal/GPIO.h ****     PORT2->HWSEL |= config << 20;
1469:../hal/GPIO.h **** }
1470:../hal/GPIO.h **** 
1471:../hal/GPIO.h **** __STATIC_INLINE void P2_10_set_standard_hysteresis(){
1472:../hal/GPIO.h ****     PORT2->PHCR1 &= ~0x00000400UL;
1473:../hal/GPIO.h **** }
1474:../hal/GPIO.h **** 
1475:../hal/GPIO.h **** __STATIC_INLINE void P2_10_set_large_hysteresis(){
1476:../hal/GPIO.h ****     PORT2->PHCR1 |= 0x00000400UL;
1477:../hal/GPIO.h **** }
1478:../hal/GPIO.h **** 
1479:../hal/GPIO.h **** __STATIC_INLINE void P2_10_enable_digital(void){
 810              	.LM26:
 811              	.LFBB5:
 812 0000 80B5     	 push {r7,lr}
 813 0002 00AF     	 add r7,sp,#0
1480:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000400UL;
 815              	.LM27:
 816 0004 034B     	 ldr r3,.L18
 817 0006 034A     	 ldr r2,.L18
 818 0008 126E     	 ldr r2,[r2,#96]
 819 000a 0349     	 ldr r1,.L18+4
 820 000c 0A40     	 and r2,r1
 821 000e 1A66     	 str r2,[r3,#96]
1481:../hal/GPIO.h **** }
 823              	.LM28:
 824 0010 BD46     	 mov sp,r7
 825              	 
 826 0012 80BD     	 pop {r7,pc}
 827              	.L19:
 828              	 .align 2
 829              	.L18:
 830 0014 00020440 	 .word 1074004480
 831 0018 FFFBFFFF 	 .word -1025
 833              	.Lscope5:
 835              	 .stabd 78,0,0
 836              	 .section .text._ZL20P2_11_enable_digitalv,"ax",%progbits
 837              	 .align 2
 839              	 .code 16
 840              	 .thumb_func
 842              	_ZL20P2_11_enable_digitalv:
 843              	 .stabd 46,0,0
1482:../hal/GPIO.h **** 
1483:../hal/GPIO.h **** __STATIC_INLINE void P2_10_disable_digital(void){
1484:../hal/GPIO.h ****     PORT2->PDISC |= 0x00000400UL;
1485:../hal/GPIO.h **** }
1486:../hal/GPIO.h **** 
1487:../hal/GPIO.h **** __STATIC_INLINE void P2_10_set(void){
1488:../hal/GPIO.h ****     PORT2->OMR = 0x00000400UL;
1489:../hal/GPIO.h **** }
1490:../hal/GPIO.h **** 
1491:../hal/GPIO.h **** __STATIC_INLINE void P2_10_reset(void){
1492:../hal/GPIO.h ****     PORT2->OMR = 0x04000000UL;
1493:../hal/GPIO.h **** }
1494:../hal/GPIO.h **** 
1495:../hal/GPIO.h **** __STATIC_INLINE void P2_10_toggle(void){
1496:../hal/GPIO.h ****     PORT2->OMR = 0x04000400UL;
1497:../hal/GPIO.h **** }
1498:../hal/GPIO.h **** 
1499:../hal/GPIO.h **** __STATIC_INLINE uint32_t P2_10_read(void){
1500:../hal/GPIO.h ****     return(PORT2->IN & 0x00000400UL);
1501:../hal/GPIO.h **** }
1502:../hal/GPIO.h **** 
1503:../hal/GPIO.h **** __STATIC_INLINE void P2_10_enable_pps(void){
1504:../hal/GPIO.h ****     PORT2->PPS |= 0x00000400UL;
1505:../hal/GPIO.h **** }
1506:../hal/GPIO.h **** 
1507:../hal/GPIO.h **** __STATIC_INLINE void P2_10_disable_pps(void){
1508:../hal/GPIO.h ****     PORT2->PPS &= ~0x00000400UL;
1509:../hal/GPIO.h **** }
1510:../hal/GPIO.h **** 
1511:../hal/GPIO.h **** __STATIC_INLINE void P2_11_set_mode(uint8_t mode){
1512:../hal/GPIO.h ****     PORT2->IOCR8 &= ~0xf8000000UL;
1513:../hal/GPIO.h ****     PORT2->IOCR8 |= mode << 24;
1514:../hal/GPIO.h **** }
1515:../hal/GPIO.h **** 
1516:../hal/GPIO.h **** __STATIC_INLINE void P2_11_set_hwsel(uint32_t config){
1517:../hal/GPIO.h ****     PORT2->HWSEL &= ~0x00c00000UL;
1518:../hal/GPIO.h ****     PORT2->HWSEL |= config << 22;
1519:../hal/GPIO.h **** }
1520:../hal/GPIO.h **** 
1521:../hal/GPIO.h **** __STATIC_INLINE void P2_11_set_standard_hysteresis(){
1522:../hal/GPIO.h ****     PORT2->PHCR1 &= ~0x00004000UL;
1523:../hal/GPIO.h **** }
1524:../hal/GPIO.h **** 
1525:../hal/GPIO.h **** __STATIC_INLINE void P2_11_set_large_hysteresis(){
1526:../hal/GPIO.h ****     PORT2->PHCR1 |= 0x00004000UL;
1527:../hal/GPIO.h **** }
1528:../hal/GPIO.h **** 
1529:../hal/GPIO.h **** __STATIC_INLINE void P2_11_enable_digital(void){
 845              	.LM29:
 846              	.LFBB6:
 847 0000 80B5     	 push {r7,lr}
 848 0002 00AF     	 add r7,sp,#0
1530:../hal/GPIO.h ****     PORT2->PDISC &= ~0x00000800UL;
 850              	.LM30:
 851 0004 034B     	 ldr r3,.L21
 852 0006 034A     	 ldr r2,.L21
 853 0008 126E     	 ldr r2,[r2,#96]
 854 000a 0349     	 ldr r1,.L21+4
 855 000c 0A40     	 and r2,r1
 856 000e 1A66     	 str r2,[r3,#96]
1531:../hal/GPIO.h **** }
 858              	.LM31:
 859 0010 BD46     	 mov sp,r7
 860              	 
 861 0012 80BD     	 pop {r7,pc}
 862              	.L22:
 863              	 .align 2
 864              	.L21:
 865 0014 00020440 	 .word 1074004480
 866 0018 FFF7FFFF 	 .word -2049
 868              	.Lscope6:
 870              	 .stabd 78,0,0
 871              	 .section .text._ZL20__gthread_key_deletei,"ax",%progbits
 872              	 .align 2
 875              	 .code 16
 876              	 .thumb_func
 878              	_ZL20__gthread_key_deletei:
 879              	 .stabd 46,0,0
 881              	.Ltext3:
   1:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Compile this one with gcc.  */
   3:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Copyright (C) 1997-2014 Free Software Foundation, Inc.
   4:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
   5:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** This file is part of GCC.
   6:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
   7:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** version.
  11:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  12:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** for more details.
  16:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  17:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  21:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  26:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  29:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  31:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_key_t;
  32:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_once_t;
  33:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_mutex_t;
  34:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  36:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx)
  39:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  41:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((unused))
  42:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  43:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #ifdef _LIBOBJC
  44:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  45:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Thread local storage for a single thread */
  46:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static void *thread_local_storage = NULL;
  47:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  48:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend initialization functions */
  49:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  50:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Initialize the threads subsystem.  */
  51:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  52:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  54:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  55:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
  56:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  57:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  58:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Close the threads subsystem.  */
  59:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  60:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  62:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  63:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
  64:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  65:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  66:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend thread functions */
  67:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  68:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Create a new thread of execution.  */
  69:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline objc_thread_t
  70:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  72:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  73:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return NULL;
  74:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  75:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  76:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Set the current thread's priority.  */
  77:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  78:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  80:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
  81:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
  82:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  83:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  84:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Return the current thread's priority.  */
  85:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
  86:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  88:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  90:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  91:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Yield our process time to another thread.  */
  92:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline void
  93:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_yield (void)
  94:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
  95:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return;
  96:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
  97:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
  98:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Terminate the current thread.  */
  99:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 100:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_exit (void)
 101:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 102:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support available */
 103:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* Should we really exit the program */
 104:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return -1;
 106:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 107:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 108:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline objc_thread_t
 110:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_id (void)
 111:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 112:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* No thread support, use 1.  */
 113:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return (objc_thread_t) 1;
 114:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 115:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 116:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 118:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 120:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   thread_local_storage = value;
 121:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 122:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 123:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 124:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline void *
 126:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 128:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return thread_local_storage;
 129:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 130:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 131:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend mutex functions */
 132:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 133:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Allocate a mutex.  */
 134:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 135:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 137:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 138:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 139:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 140:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Deallocate a mutex.  */
 141:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 142:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 144:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 145:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 146:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 147:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Grab a lock on a mutex.  */
 148:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 149:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 151:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 153:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 154:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 155:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 157:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 159:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 161:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 162:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 163:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Unlock the mutex */
 164:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 165:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 167:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 168:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 169:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 170:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Backend condition mutex functions */
 171:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 172:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Allocate a condition.  */
 173:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 174:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 176:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 177:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 178:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 179:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Deallocate a condition.  */
 180:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 181:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 183:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 184:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 185:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 186:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Wait on the condition */
 187:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 188:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 191:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 192:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 193:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 194:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 196:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 198:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 199:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 200:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 201:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 203:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 205:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 206:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 207:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 208:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** #else /* _LIBOBJC */
 209:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 210:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 211:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_active_p (void)
 212:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 213:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 214:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 215:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 216:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int
 217:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 219:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 220:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 221:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 222:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 225:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 226:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 227:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** 
 228:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** static int _GLIBCXX_UNUSED
 229:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** {
 883              	.LM32:
 884              	.LFBB7:
 885 0000 80B5     	 push {r7,lr}
 886 0002 82B0     	 sub sp,sp,#8
 887 0004 00AF     	 add r7,sp,#0
 888 0006 7860     	 str r0,[r7,#4]
 231:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h ****   return 0;
 890              	.LM33:
 891 0008 0023     	 mov r3,#0
 232:c:\davev4-64bit\dave-4.3.2\eclipse\arm-gcc-49\arm-none-eabi\include\c++\4.9.3\arm-none-eabi\armv6-m\bits\gthr-default.h **** }
 893              	.LM34:
 894 000a 181C     	 mov r0,r3
 895 000c BD46     	 mov sp,r7
 896 000e 02B0     	 add sp,sp,#8
 897              	 
 898 0010 80BD     	 pop {r7,pc}
 900              	.Lscope7:
 902              	 .stabd 78,0,0
 903              	 .global frameData
 904 0012 C046     	 .section .bss.frameData,"aw",%nobits
 905              	 .align 2
 908              	frameData:
 909 0000 00000000 	 .space 4
 910              	 .section .text._Z5delayj,"ax",%progbits
 911              	 .align 2
 914              	 .global _Z5delayj
 915              	 .code 16
 916              	 .thumb_func
 918              	_Z5delayj:
 919              	 .stabd 46,0,0
 921              	.Ltext4:
   1:../main.cpp   **** /*
   2:../main.cpp   ****  * main.c
   3:../main.cpp   ****  *
   4:../main.cpp   ****  */
   5:../main.cpp   **** 
   6:../main.cpp   **** #include <DAVE.h>
   7:../main.cpp   **** 
   8:../main.cpp   **** #include <inttypes.h>
   9:../main.cpp   **** #include <stdio.h>
  10:../main.cpp   **** #include <stddef.h>
  11:../main.cpp   **** #include <stdlib.h>
  12:../main.cpp   **** #include "xmc_gpio.h"
  13:../main.cpp   **** 
  14:../main.cpp   **** #include "hal/PinBase.h"
  15:../main.cpp   **** #include "hal/ShiftRegister.h"
  16:../main.cpp   **** #include "hal/ShiftRegisterArray.h"
  17:../main.cpp   **** #include "hal/GPIO.h"
  18:../main.cpp   **** #include "declarations.h"
  19:../main.cpp   **** #include "cube/Cube.h"
  20:../main.cpp   **** #include "cube/Floor.h"
  21:../main.cpp   **** #include "framesdata.h"
  22:../main.cpp   **** 
  23:../main.cpp   **** void delay(unsigned len)
  24:../main.cpp   **** {
 923              	.LM35:
 924              	.LFBB8:
 925 0000 80B5     	 push {r7,lr}
 926 0002 82B0     	 sub sp,sp,#8
 927 0004 00AF     	 add r7,sp,#0
 928 0006 7860     	 str r0,[r7,#4]
 929              	.L26:
  25:../main.cpp   **** 	while(len--);
 931              	.LM36:
 932 0008 7B68     	 ldr r3,[r7,#4]
 933 000a 5A1E     	 sub r2,r3,#1
 934 000c 7A60     	 str r2,[r7,#4]
 935 000e 5A1E     	 sub r2,r3,#1
 936 0010 9341     	 sbc r3,r3,r2
 937 0012 DBB2     	 uxtb r3,r3
 938 0014 002B     	 cmp r3,#0
 939 0016 F7D1     	 bne .L26
  26:../main.cpp   **** }
 941              	.LM37:
 942 0018 BD46     	 mov sp,r7
 943 001a 02B0     	 add sp,sp,#8
 944              	 
 945 001c 80BD     	 pop {r7,pc}
 947              	.Lscope8:
 949              	 .stabd 78,0,0
 950              	 .global __aeabi_uidiv
 951 001e C046     	 .section .text._Z15initApplicationv,"ax",%progbits
 952              	 .align 2
 954              	 .global _Z15initApplicationv
 955              	 .code 16
 956              	 .thumb_func
 958              	_Z15initApplicationv:
 959              	 .stabd 46,0,0
  27:../main.cpp   **** 
  28:../main.cpp   **** void initApplication() {
 961              	.LM38:
 962              	.LFBB9:
 963 0000 80B5     	 push {r7,lr}
 964 0002 00AF     	 add r7,sp,#0
  29:../main.cpp   **** 
  30:../main.cpp   **** 	// Clock configuration
  31:../main.cpp   **** 	SCU_GENERAL->PASSWD = 0x000000C0UL; // disable bit protection
 966              	.LM39:
 967 0004 544B     	 ldr r3,.L29
 968 0006 C022     	 mov r2,#192
 969 0008 5A62     	 str r2,[r3,#36]
  32:../main.cpp   **** 	SCU_CLK->CLKCR = 0x3FF00400UL; // MCLK = 8MHz, PCLK = 8MHz
 971              	.LM40:
 972 000a 544B     	 ldr r3,.L29+4
 973 000c 544A     	 ldr r2,.L29+8
 974 000e 1A60     	 str r2,[r3]
  33:../main.cpp   **** 	while((SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk));
 976              	.LM41:
 977 0010 C046     	 mov r8,r8
 978              	.L28:
 980              	.LM42:
 981 0012 524B     	 ldr r3,.L29+4
 982 0014 1A68     	 ldr r2,[r3]
 983 0016 8023     	 mov r3,#128
 984 0018 DB05     	 lsl r3,r3,#23
 985 001a 1340     	 and r3,r2
 986 001c 5A1E     	 sub r2,r3,#1
 987 001e 9341     	 sbc r3,r3,r2
 988 0020 DBB2     	 uxtb r3,r3
 989 0022 002B     	 cmp r3,#0
 990 0024 F5D1     	 bne .L28
  34:../main.cpp   **** 	SCU_GENERAL->PASSWD = 0x000000C3UL; // enable bit protection
 992              	.LM43:
 993 0026 4C4B     	 ldr r3,.L29
 994 0028 C322     	 mov r2,#195
 995 002a 5A62     	 str r2,[r3,#36]
  35:../main.cpp   **** 	SystemCoreClockUpdate();
 997              	.LM44:
 998 002c FFF7FEFF 	 bl SystemCoreClockUpdate
  36:../main.cpp   **** 
  37:../main.cpp   **** 	// Konfiguriere Pin1.0 als Ausgang
  38:../main.cpp   **** 	PORT1->IOCR0 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 0 * 8);		//RED LED PIN 1.0
 1000              	.LM45:
 1001 0030 4C4B     	 ldr r3,.L29+12
 1002 0032 4C4A     	 ldr r2,.L29+12
 1003 0034 1269     	 ldr r2,[r2,#16]
 1004 0036 8021     	 mov r1,#128
 1005 0038 0A43     	 orr r2,r1
 1006 003a 1A61     	 str r2,[r3,#16]
  39:../main.cpp   **** 	PORT1->IOCR0 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 1 * 8);		//RED LED PIN 1.1
 1008              	.LM46:
 1009 003c 494B     	 ldr r3,.L29+12
 1010 003e 494A     	 ldr r2,.L29+12
 1011 0040 1269     	 ldr r2,[r2,#16]
 1012 0042 8021     	 mov r1,#128
 1013 0044 0902     	 lsl r1,r1,#8
 1014 0046 0A43     	 orr r2,r1
 1015 0048 1A61     	 str r2,[r3,#16]
  40:../main.cpp   **** 
  41:../main.cpp   **** 	PORT2->IOCR8 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 2 * 8); 		//1 Floor PIN 2.10
 1017              	.LM47:
 1018 004a 474B     	 ldr r3,.L29+16
 1019 004c 464A     	 ldr r2,.L29+16
 1020 004e 9269     	 ldr r2,[r2,#24]
 1021 0050 8021     	 mov r1,#128
 1022 0052 0904     	 lsl r1,r1,#16
 1023 0054 0A43     	 orr r2,r1
 1024 0056 9A61     	 str r2,[r3,#24]
  42:../main.cpp   **** 	PORT2->IOCR8 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 3 * 8); 		//2 Floor PIN 2.11
 1026              	.LM48:
 1027 0058 434B     	 ldr r3,.L29+16
 1028 005a 434A     	 ldr r2,.L29+16
 1029 005c 9269     	 ldr r2,[r2,#24]
 1030 005e 8021     	 mov r1,#128
 1031 0060 0906     	 lsl r1,r1,#24
 1032 0062 0A43     	 orr r2,r1
 1033 0064 9A61     	 str r2,[r3,#24]
  43:../main.cpp   **** 	PORT0->IOCR4 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 2 * 8); 		//3 Floor PIN 0.6
 1035              	.LM49:
 1036 0066 414B     	 ldr r3,.L29+20
 1037 0068 404A     	 ldr r2,.L29+20
 1038 006a 5269     	 ldr r2,[r2,#20]
 1039 006c 8021     	 mov r1,#128
 1040 006e 0904     	 lsl r1,r1,#16
 1041 0070 0A43     	 orr r2,r1
 1042 0072 5A61     	 str r2,[r3,#20]
  44:../main.cpp   **** 	PORT0->IOCR4 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 3 * 8); 		//4 Floor PIN 0.7
 1044              	.LM50:
 1045 0074 3D4B     	 ldr r3,.L29+20
 1046 0076 3D4A     	 ldr r2,.L29+20
 1047 0078 5269     	 ldr r2,[r2,#20]
 1048 007a 8021     	 mov r1,#128
 1049 007c 0906     	 lsl r1,r1,#24
 1050 007e 0A43     	 orr r2,r1
 1051 0080 5A61     	 str r2,[r3,#20]
  45:../main.cpp   **** 
  46:../main.cpp   **** 	PORT0->IOCR0 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 0 * 8);		//DATA1 PIN 0.0
 1053              	.LM51:
 1054 0082 3A4B     	 ldr r3,.L29+20
 1055 0084 394A     	 ldr r2,.L29+20
 1056 0086 1269     	 ldr r2,[r2,#16]
 1057 0088 8021     	 mov r1,#128
 1058 008a 0A43     	 orr r2,r1
 1059 008c 1A61     	 str r2,[r3,#16]
  47:../main.cpp   **** 	PORT0->IOCR4 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 1 * 8);		//DATA2 PIN 0.5
 1061              	.LM52:
 1062 008e 374B     	 ldr r3,.L29+20
 1063 0090 364A     	 ldr r2,.L29+20
 1064 0092 5269     	 ldr r2,[r2,#20]
 1065 0094 8021     	 mov r1,#128
 1066 0096 0902     	 lsl r1,r1,#8
 1067 0098 0A43     	 orr r2,r1
 1068 009a 5A61     	 str r2,[r3,#20]
  48:../main.cpp   **** 
  49:../main.cpp   **** 	PORT0->IOCR8 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 1 * 8);		//CLK PIN 0.9
 1070              	.LM53:
 1071 009c 334B     	 ldr r3,.L29+20
 1072 009e 334A     	 ldr r2,.L29+20
 1073 00a0 9269     	 ldr r2,[r2,#24]
 1074 00a2 8021     	 mov r1,#128
 1075 00a4 0902     	 lsl r1,r1,#8
 1076 00a6 0A43     	 orr r2,r1
 1077 00a8 9A61     	 str r2,[r3,#24]
  50:../main.cpp   **** 	PORT0->IOCR12 |= (XMC_GPIO_MODE_OUTPUT_PUSH_PULL << 2 * 8);		//CLK PIN 0.14
 1079              	.LM54:
 1080 00aa 304B     	 ldr r3,.L29+20
 1081 00ac 2F4A     	 ldr r2,.L29+20
 1082 00ae D269     	 ldr r2,[r2,#28]
 1083 00b0 8021     	 mov r1,#128
 1084 00b2 0904     	 lsl r1,r1,#16
 1085 00b4 0A43     	 orr r2,r1
 1086 00b6 DA61     	 str r2,[r3,#28]
  51:../main.cpp   **** 
  52:../main.cpp   **** 	// Konfiguriere Pin1.15 als Eingang ohne PullUp
  53:../main.cpp   **** 	//PORT1->IOCR12 |= (XMC_GPIO_MODE_INPUT_TRISTATE <<3*8);
  54:../main.cpp   **** 
  55:../main.cpp   **** 	// SystemTimer auf 10ms konfigurieren
  56:../main.cpp   **** 	SysTick_Config(SystemCoreClock / 100);
 1088              	.LM55:
 1089 00b8 2D4B     	 ldr r3,.L29+24
 1090 00ba 1B68     	 ldr r3,[r3]
 1091 00bc 181C     	 mov r0,r3
 1092 00be 6421     	 mov r1,#100
 1093 00c0 FFF7FEFF 	 bl __aeabi_uidiv
 1094 00c4 031C     	 mov r3,r0
 1095 00c6 181C     	 mov r0,r3
 1096 00c8 FFF7FEFF 	 bl SysTick_Config
  57:../main.cpp   **** 
  58:../main.cpp   **** 	P2_7_enable_digital();
 1098              	.LM56:
 1099 00cc FFF7FEFF 	 bl _ZL19P2_7_enable_digitalv
  59:../main.cpp   **** 	P2_9_enable_digital();
 1101              	.LM57:
 1102 00d0 FFF7FEFF 	 bl _ZL19P2_9_enable_digitalv
  60:../main.cpp   **** 	P2_10_enable_digital();
 1104              	.LM58:
 1105 00d4 FFF7FEFF 	 bl _ZL20P2_10_enable_digitalv
  61:../main.cpp   **** 	P2_11_enable_digital();
 1107              	.LM59:
 1108 00d8 FFF7FEFF 	 bl _ZL20P2_11_enable_digitalv
  62:../main.cpp   **** 
  63:../main.cpp   **** 	CLR_BIT(PORT0->OUT, PIN_DATA_1);
 1110              	.LM60:
 1111 00dc 234B     	 ldr r3,.L29+20
 1112 00de 234A     	 ldr r2,.L29+20
 1113 00e0 1268     	 ldr r2,[r2]
 1114 00e2 0121     	 mov r1,#1
 1115 00e4 8A43     	 bic r2,r1
 1116 00e6 1A60     	 str r2,[r3]
  64:../main.cpp   **** 	CLR_BIT(PORT0->OUT, PIN_DATA_2);
 1118              	.LM61:
 1119 00e8 204B     	 ldr r3,.L29+20
 1120 00ea 204A     	 ldr r2,.L29+20
 1121 00ec 1268     	 ldr r2,[r2]
 1122 00ee 2021     	 mov r1,#32
 1123 00f0 8A43     	 bic r2,r1
 1124 00f2 1A60     	 str r2,[r3]
  65:../main.cpp   **** 	CLR_BIT(PORT0->OUT, PIN_CLK);
 1126              	.LM62:
 1127 00f4 1D4B     	 ldr r3,.L29+20
 1128 00f6 1D4A     	 ldr r2,.L29+20
 1129 00f8 1268     	 ldr r2,[r2]
 1130 00fa 1E49     	 ldr r1,.L29+28
 1131 00fc 0A40     	 and r2,r1
 1132 00fe 1A60     	 str r2,[r3]
  66:../main.cpp   **** 	CLR_BIT(PORT0->OUT, PIN_VCC);
 1134              	.LM63:
 1135 0100 1A4B     	 ldr r3,.L29+20
 1136 0102 1A4A     	 ldr r2,.L29+20
 1137 0104 1268     	 ldr r2,[r2]
 1138 0106 1C49     	 ldr r1,.L29+32
 1139 0108 0A40     	 and r2,r1
 1140 010a 1A60     	 str r2,[r3]
  67:../main.cpp   **** 
  68:../main.cpp   **** 	CLR_BIT(PORT2->OUT, PIN_1_FLOOR);
 1142              	.LM64:
 1143 010c 164B     	 ldr r3,.L29+16
 1144 010e 164A     	 ldr r2,.L29+16
 1145 0110 1268     	 ldr r2,[r2]
 1146 0112 1A49     	 ldr r1,.L29+36
 1147 0114 0A40     	 and r2,r1
 1148 0116 1A60     	 str r2,[r3]
  69:../main.cpp   **** 	CLR_BIT(PORT2->OUT, PIN_2_FLOOR);
 1150              	.LM65:
 1151 0118 134B     	 ldr r3,.L29+16
 1152 011a 134A     	 ldr r2,.L29+16
 1153 011c 1268     	 ldr r2,[r2]
 1154 011e 1849     	 ldr r1,.L29+40
 1155 0120 0A40     	 and r2,r1
 1156 0122 1A60     	 str r2,[r3]
  70:../main.cpp   **** 	CLR_BIT(PORT0->OUT, PIN_3_FLOOR);
 1158              	.LM66:
 1159 0124 114B     	 ldr r3,.L29+20
 1160 0126 114A     	 ldr r2,.L29+20
 1161 0128 1268     	 ldr r2,[r2]
 1162 012a 4021     	 mov r1,#64
 1163 012c 8A43     	 bic r2,r1
 1164 012e 1A60     	 str r2,[r3]
  71:../main.cpp   **** 	CLR_BIT(PORT0->OUT, PIN_4_FLOOR);
 1166              	.LM67:
 1167 0130 0E4B     	 ldr r3,.L29+20
 1168 0132 0E4A     	 ldr r2,.L29+20
 1169 0134 1268     	 ldr r2,[r2]
 1170 0136 8021     	 mov r1,#128
 1171 0138 8A43     	 bic r2,r1
 1172 013a 1A60     	 str r2,[r3]
  72:../main.cpp   **** 
  73:../main.cpp   **** 	delay(50000);
 1174              	.LM68:
 1175 013c 114B     	 ldr r3,.L29+44
 1176 013e 181C     	 mov r0,r3
 1177 0140 FFF7FEFF 	 bl _Z5delayj
  74:../main.cpp   **** 	SET_BIT(PORT0->OUT, PIN_VCC);
 1179              	.LM69:
 1180 0144 094B     	 ldr r3,.L29+20
 1181 0146 094A     	 ldr r2,.L29+20
 1182 0148 1268     	 ldr r2,[r2]
 1183 014a 8021     	 mov r1,#128
 1184 014c C901     	 lsl r1,r1,#7
 1185 014e 0A43     	 orr r2,r1
 1186 0150 1A60     	 str r2,[r3]
  75:../main.cpp   **** }
 1188              	.LM70:
 1189 0152 BD46     	 mov sp,r7
 1190              	 
 1191 0154 80BD     	 pop {r7,pc}
 1192              	.L30:
 1193 0156 C046     	 .align 2
 1194              	.L29:
 1195 0158 00000140 	 .word 1073807360
 1196 015c 00030140 	 .word 1073808128
 1197 0160 0004F03F 	 .word 1072694272
 1198 0164 00010440 	 .word 1074004224
 1199 0168 00020440 	 .word 1074004480
 1200 016c 00000440 	 .word 1074003968
 1201 0170 00000000 	 .word SystemCoreClock
 1202 0174 FFFDFFFF 	 .word -513
 1203 0178 FFBFFFFF 	 .word -16385
 1204 017c FFFBFFFF 	 .word -1025
 1205 0180 FFF7FFFF 	 .word -2049
 1206 0184 50C30000 	 .word 50000
 1208              	.Lscope9:
 1210              	 .stabd 78,0,0
 1211              	 .section .text.main,"ax",%progbits
 1212              	 .align 2
 1214              	 .global main
 1215              	 .code 16
 1216              	 .thumb_func
 1218              	main:
 1219              	 .stabd 46,0,0
  76:../main.cpp   **** 
  77:../main.cpp   **** 
  78:../main.cpp   **** int main(void) {
 1221              	.LM71:
 1222              	.LFBB10:
 1223 0000 90B5     	 push {r4,r7,lr}
 1224 0002 ABB0     	 sub sp,sp,#172
 1225 0004 00AF     	 add r7,sp,#0
 1226              	.LBB2:
  79:../main.cpp   **** 	DAVE_STATUS_t status;
  80:../main.cpp   **** 
  81:../main.cpp   **** 	status = DAVE_Init(); /* Initialization of DAVE APPs  */
 1228              	.LM72:
 1229 0006 9F23     	 mov r3,#159
 1230 0008 FC18     	 add r4,r7,r3
 1231 000a FFF7FEFF 	 bl DAVE_Init
 1232 000e 031C     	 mov r3,r0
 1233 0010 2370     	 strb r3,[r4]
  82:../main.cpp   **** 
  83:../main.cpp   **** 	if (status != DAVE_STATUS_SUCCESS) {
 1235              	.LM73:
 1236 0012 9F23     	 mov r3,#159
 1237 0014 FB18     	 add r3,r7,r3
 1238 0016 1B78     	 ldrb r3,[r3]
 1239 0018 002B     	 cmp r3,#0
 1240 001a 00D0     	 beq .L32
 1241              	.L33:
 1243              	.LM74:
 1244 001c FEE7     	 b .L33
 1245              	.L32:
  84:../main.cpp   **** 		/* Placeholder for error handler code. The while loop below can be replaced with an user error ha
  85:../main.cpp   **** 		XMC_DEBUG("DAVE APPs initialization failed\n");
  86:../main.cpp   **** 		while (1U) {
  87:../main.cpp   **** 
  88:../main.cpp   **** 		}
  89:../main.cpp   **** 	}
  90:../main.cpp   **** 
  91:../main.cpp   **** 	initApplication();
 1247              	.LM75:
 1248 001e FFF7FEFF 	 bl _Z15initApplicationv
  92:../main.cpp   **** 
  93:../main.cpp   **** 	//PinBase pin(&(PORT0->OUT), PIN_3_FLOOR);
  94:../main.cpp   **** 	//pin.high();
  95:../main.cpp   **** 
  96:../main.cpp   **** 	AccessPoint clk;
  97:../main.cpp   **** 	clk.port = &PORT0->OUT;
 1250              	.LM76:
 1251 0022 9423     	 mov r3,#148
 1252 0024 FB18     	 add r3,r7,r3
 1253 0026 904A     	 ldr r2,.L39
 1254 0028 1A60     	 str r2,[r3]
  98:../main.cpp   **** 	clk.pin = PIN_CLK;
 1256              	.LM77:
 1257 002a 9423     	 mov r3,#148
 1258 002c FB18     	 add r3,r7,r3
 1259 002e 0922     	 mov r2,#9
 1260 0030 5A60     	 str r2,[r3,#4]
  99:../main.cpp   **** 
 100:../main.cpp   **** 	AccessPoint data1;
 101:../main.cpp   **** 	data1.port = &PORT0->OUT;
 1262              	.LM78:
 1263 0032 8C23     	 mov r3,#140
 1264 0034 FB18     	 add r3,r7,r3
 1265 0036 8C4A     	 ldr r2,.L39
 1266 0038 1A60     	 str r2,[r3]
 102:../main.cpp   **** 	data1.pin = PIN_DATA_1;
 1268              	.LM79:
 1269 003a 8C23     	 mov r3,#140
 1270 003c FB18     	 add r3,r7,r3
 1271 003e 0022     	 mov r2,#0
 1272 0040 5A60     	 str r2,[r3,#4]
 103:../main.cpp   **** 
 104:../main.cpp   **** 	AccessPoint data2;
 105:../main.cpp   **** 	data2.port = &PORT0->OUT;
 1274              	.LM80:
 1275 0042 8423     	 mov r3,#132
 1276 0044 FB18     	 add r3,r7,r3
 1277 0046 884A     	 ldr r2,.L39
 1278 0048 1A60     	 str r2,[r3]
 106:../main.cpp   **** 	data2.pin = PIN_DATA_2;
 1280              	.LM81:
 1281 004a 8423     	 mov r3,#132
 1282 004c FB18     	 add r3,r7,r3
 1283 004e 0522     	 mov r2,#5
 1284 0050 5A60     	 str r2,[r3,#4]
 107:../main.cpp   **** 
 108:../main.cpp   **** 	ShiftRegister shiftRegister1(&clk, &data1);
 1286              	.LM82:
 1287 0052 7823     	 mov r3,#120
 1288 0054 F918     	 add r1,r7,r3
 1289 0056 9423     	 mov r3,#148
 1290 0058 FA18     	 add r2,r7,r3
 1291 005a 8C23     	 mov r3,#140
 1292 005c FB18     	 add r3,r7,r3
 1293 005e 081C     	 mov r0,r1
 1294 0060 111C     	 mov r1,r2
 1295 0062 1A1C     	 mov r2,r3
 1296 0064 FFF7FEFF 	 bl _ZN13ShiftRegisterC1EP13__AccessPointS1_
 109:../main.cpp   **** 	ShiftRegister shiftRegister2(&clk, &data2);
 1298              	.LM83:
 1299 0068 6C23     	 mov r3,#108
 1300 006a F918     	 add r1,r7,r3
 1301 006c 9423     	 mov r3,#148
 1302 006e FA18     	 add r2,r7,r3
 1303 0070 8423     	 mov r3,#132
 1304 0072 FB18     	 add r3,r7,r3
 1305 0074 081C     	 mov r0,r1
 1306 0076 111C     	 mov r1,r2
 1307 0078 1A1C     	 mov r2,r3
 1308 007a FFF7FEFF 	 bl _ZN13ShiftRegisterC1EP13__AccessPointS1_
 110:../main.cpp   **** 
 111:../main.cpp   **** 	ShiftRegisterArray shiftRegisterArray(&clk);
 1310              	.LM84:
 1311 007e 5423     	 mov r3,#84
 1312 0080 FA18     	 add r2,r7,r3
 1313 0082 9423     	 mov r3,#148
 1314 0084 FB18     	 add r3,r7,r3
 1315 0086 101C     	 mov r0,r2
 1316 0088 191C     	 mov r1,r3
 1317 008a FFF7FEFF 	 bl _ZN18ShiftRegisterArrayC1EP13__AccessPoint
 112:../main.cpp   **** 	shiftRegisterArray.addShiftRegister(&shiftRegister1);
 1319              	.LM85:
 1320 008e 5423     	 mov r3,#84
 1321 0090 FA18     	 add r2,r7,r3
 1322 0092 7823     	 mov r3,#120
 1323 0094 FB18     	 add r3,r7,r3
 1324 0096 101C     	 mov r0,r2
 1325 0098 191C     	 mov r1,r3
 1326 009a FFF7FEFF 	 bl _ZN18ShiftRegisterArray16addShiftRegisterEP13ShiftRegister
 113:../main.cpp   **** 	shiftRegisterArray.addShiftRegister(&shiftRegister2);
 1328              	.LM86:
 1329 009e 5423     	 mov r3,#84
 1330 00a0 FA18     	 add r2,r7,r3
 1331 00a2 6C23     	 mov r3,#108
 1332 00a4 FB18     	 add r3,r7,r3
 1333 00a6 101C     	 mov r0,r2
 1334 00a8 191C     	 mov r1,r3
 1335 00aa FFF7FEFF 	 bl _ZN18ShiftRegisterArray16addShiftRegisterEP13ShiftRegister
 114:../main.cpp   **** 
 115:../main.cpp   **** 	//Cube cube;
 116:../main.cpp   **** 
 117:../main.cpp   **** 	Floor floor1(&PORT2->OUT, PIN_1_FLOOR);
 1337              	.LM87:
 1338 00ae 4023     	 mov r3,#64
 1339 00b0 FB18     	 add r3,r7,r3
 1340 00b2 6E4A     	 ldr r2,.L39+4
 1341 00b4 181C     	 mov r0,r3
 1342 00b6 111C     	 mov r1,r2
 1343 00b8 0A22     	 mov r2,#10
 1344 00ba FFF7FEFF 	 bl _ZN5FloorC1EPVmm
 118:../main.cpp   **** 	floor1.setRegisterArray(&shiftRegisterArray);
 1346              	.LM88:
 1347 00be 4023     	 mov r3,#64
 1348 00c0 FA18     	 add r2,r7,r3
 1349 00c2 5423     	 mov r3,#84
 1350 00c4 FB18     	 add r3,r7,r3
 1351 00c6 101C     	 mov r0,r2
 1352 00c8 191C     	 mov r1,r3
 1353 00ca FFF7FEFF 	 bl _ZN5Floor16setRegisterArrayEP18ShiftRegisterArray
 119:../main.cpp   **** 
 120:../main.cpp   **** 	Floor floor2(&PORT2->OUT, PIN_2_FLOOR);
 1355              	.LM89:
 1356 00ce 2C23     	 mov r3,#44
 1357 00d0 FB18     	 add r3,r7,r3
 1358 00d2 664A     	 ldr r2,.L39+4
 1359 00d4 181C     	 mov r0,r3
 1360 00d6 111C     	 mov r1,r2
 1361 00d8 0B22     	 mov r2,#11
 1362 00da FFF7FEFF 	 bl _ZN5FloorC1EPVmm
 121:../main.cpp   **** 	floor2.setRegisterArray(&shiftRegisterArray);
 1364              	.LM90:
 1365 00de 2C23     	 mov r3,#44
 1366 00e0 FA18     	 add r2,r7,r3
 1367 00e2 5423     	 mov r3,#84
 1368 00e4 FB18     	 add r3,r7,r3
 1369 00e6 101C     	 mov r0,r2
 1370 00e8 191C     	 mov r1,r3
 1371 00ea FFF7FEFF 	 bl _ZN5Floor16setRegisterArrayEP18ShiftRegisterArray
 122:../main.cpp   **** 
 123:../main.cpp   **** 	Floor floor3(&PORT0->OUT, PIN_3_FLOOR);
 1373              	.LM91:
 1374 00ee 1823     	 mov r3,#24
 1375 00f0 FB18     	 add r3,r7,r3
 1376 00f2 5D4A     	 ldr r2,.L39
 1377 00f4 181C     	 mov r0,r3
 1378 00f6 111C     	 mov r1,r2
 1379 00f8 0622     	 mov r2,#6
 1380 00fa FFF7FEFF 	 bl _ZN5FloorC1EPVmm
 124:../main.cpp   **** 	floor3.setRegisterArray(&shiftRegisterArray);
 1382              	.LM92:
 1383 00fe 1823     	 mov r3,#24
 1384 0100 FA18     	 add r2,r7,r3
 1385 0102 5423     	 mov r3,#84
 1386 0104 FB18     	 add r3,r7,r3
 1387 0106 101C     	 mov r0,r2
 1388 0108 191C     	 mov r1,r3
 1389 010a FFF7FEFF 	 bl _ZN5Floor16setRegisterArrayEP18ShiftRegisterArray
 125:../main.cpp   **** 
 126:../main.cpp   **** 	Floor floor4(&PORT0->OUT, PIN_4_FLOOR);
 1391              	.LM93:
 1392 010e 3B1D     	 add r3,r7,#4
 1393 0110 554A     	 ldr r2,.L39
 1394 0112 181C     	 mov r0,r3
 1395 0114 111C     	 mov r1,r2
 1396 0116 0722     	 mov r2,#7
 1397 0118 FFF7FEFF 	 bl _ZN5FloorC1EPVmm
 127:../main.cpp   **** 	floor4.setRegisterArray(&shiftRegisterArray);
 1399              	.LM94:
 1400 011c 3A1D     	 add r2,r7,#4
 1401 011e 5423     	 mov r3,#84
 1402 0120 FB18     	 add r3,r7,r3
 1403 0122 101C     	 mov r0,r2
 1404 0124 191C     	 mov r1,r3
 1405 0126 FFF7FEFF 	 bl _ZN5Floor16setRegisterArrayEP18ShiftRegisterArray
 128:../main.cpp   **** 
 129:../main.cpp   **** //	cube.addFloor(&floor1);
 130:../main.cpp   **** //	cube.addFloor(&floor2);
 131:../main.cpp   **** //	cube.addFloor(&floor3);
 132:../main.cpp   **** //	cube.addFloor(&floor4);
 133:../main.cpp   **** 
 134:../main.cpp   **** 	//Frame frame;
 135:../main.cpp   **** 	//frame.init(frameData);
 136:../main.cpp   **** 	//cube.play(&frame);
 137:../main.cpp   **** 
 138:../main.cpp   **** 	floor1.begin();
 1407              	.LM95:
 1408 012a 4023     	 mov r3,#64
 1409 012c FB18     	 add r3,r7,r3
 1410 012e 181C     	 mov r0,r3
 1411 0130 FFF7FEFF 	 bl _ZN5Floor5beginEv
 139:../main.cpp   **** 	floor1.push((uint8_t)0xA5);
 1413              	.LM96:
 1414 0134 4023     	 mov r3,#64
 1415 0136 FB18     	 add r3,r7,r3
 1416 0138 181C     	 mov r0,r3
 1417 013a A521     	 mov r1,#165
 1418 013c FFF7FEFF 	 bl _ZN5Floor4pushEh
 140:../main.cpp   **** 	floor1.end();
 1420              	.LM97:
 1421 0140 4023     	 mov r3,#64
 1422 0142 FB18     	 add r3,r7,r3
 1423 0144 181C     	 mov r0,r3
 1424 0146 FFF7FEFF 	 bl _ZN5Floor3endEv
 141:../main.cpp   **** 
 142:../main.cpp   **** 	int i = 0;
 1426              	.LM98:
 1427 014a 0023     	 mov r3,#0
 1428 014c A422     	 mov r2,#164
 1429 014e BA18     	 add r2,r7,r2
 1430 0150 1360     	 str r3,[r2]
 1431              	.L38:
 143:../main.cpp   **** 	Floor* curentFloor;
 144:../main.cpp   **** 	while(1U){
 145:../main.cpp   **** 
 146:../main.cpp   **** 		if(i == 0){
 1433              	.LM99:
 1434 0152 A423     	 mov r3,#164
 1435 0154 FB18     	 add r3,r7,r3
 1436 0156 1B68     	 ldr r3,[r3]
 1437 0158 002B     	 cmp r3,#0
 1438 015a 05D1     	 bne .L34
 147:../main.cpp   **** 			curentFloor = &floor1;
 1440              	.LM100:
 1441 015c 4023     	 mov r3,#64
 1442 015e FB18     	 add r3,r7,r3
 1443 0160 A022     	 mov r2,#160
 1444 0162 BA18     	 add r2,r7,r2
 1445 0164 1360     	 str r3,[r2]
 1446 0166 23E0     	 b .L35
 1447              	.L34:
 148:../main.cpp   **** 		} else if(i == 2){
 1449              	.LM101:
 1450 0168 A423     	 mov r3,#164
 1451 016a FB18     	 add r3,r7,r3
 1452 016c 1B68     	 ldr r3,[r3]
 1453 016e 022B     	 cmp r3,#2
 1454 0170 05D1     	 bne .L36
 149:../main.cpp   **** 			curentFloor = &floor2;
 1456              	.LM102:
 1457 0172 2C23     	 mov r3,#44
 1458 0174 FB18     	 add r3,r7,r3
 1459 0176 A022     	 mov r2,#160
 1460 0178 BA18     	 add r2,r7,r2
 1461 017a 1360     	 str r3,[r2]
 1462 017c 18E0     	 b .L35
 1463              	.L36:
 150:../main.cpp   **** 		} else if(i == 4){
 1465              	.LM103:
 1466 017e A423     	 mov r3,#164
 1467 0180 FB18     	 add r3,r7,r3
 1468 0182 1B68     	 ldr r3,[r3]
 1469 0184 042B     	 cmp r3,#4
 1470 0186 05D1     	 bne .L37
 151:../main.cpp   **** 			curentFloor = &floor3;
 1472              	.LM104:
 1473 0188 1823     	 mov r3,#24
 1474 018a FB18     	 add r3,r7,r3
 1475 018c A022     	 mov r2,#160
 1476 018e BA18     	 add r2,r7,r2
 1477 0190 1360     	 str r3,[r2]
 1478 0192 0DE0     	 b .L35
 1479              	.L37:
 152:../main.cpp   **** 		} else if(i == 6){
 1481              	.LM105:
 1482 0194 A423     	 mov r3,#164
 1483 0196 FB18     	 add r3,r7,r3
 1484 0198 1B68     	 ldr r3,[r3]
 1485 019a 062B     	 cmp r3,#6
 1486 019c 08D1     	 bne .L35
 153:../main.cpp   **** 			curentFloor = &floor4;
 1488              	.LM106:
 1489 019e 3B1D     	 add r3,r7,#4
 1490 01a0 A022     	 mov r2,#160
 1491 01a2 BA18     	 add r2,r7,r2
 1492 01a4 1360     	 str r3,[r2]
 154:../main.cpp   **** 			i = -1;
 1494              	.LM107:
 1495 01a6 0123     	 mov r3,#1
 1496 01a8 5B42     	 neg r3,r3
 1497 01aa A422     	 mov r2,#164
 1498 01ac BA18     	 add r2,r7,r2
 1499 01ae 1360     	 str r3,[r2]
 1500              	.L35:
 155:../main.cpp   **** 		}
 156:../main.cpp   **** 
 157:../main.cpp   **** 
 158:../main.cpp   **** 		curentFloor->delay(150000 / 2);
 1502              	.LM108:
 1503 01b0 A023     	 mov r3,#160
 1504 01b2 FB18     	 add r3,r7,r3
 1505 01b4 1B68     	 ldr r3,[r3]
 1506 01b6 0C33     	 add r3,r3,#12
 1507 01b8 2D4A     	 ldr r2,.L39+8
 1508 01ba 181C     	 mov r0,r3
 1509 01bc 111C     	 mov r1,r2
 1510 01be FFF7FEFF 	 bl _ZN7XObject5delayEj
 159:../main.cpp   **** 
 160:../main.cpp   **** 		curentFloor->off();
 1512              	.LM109:
 1513 01c2 A023     	 mov r3,#160
 1514 01c4 FB18     	 add r3,r7,r3
 1515 01c6 1B68     	 ldr r3,[r3]
 1516 01c8 181C     	 mov r0,r3
 1517 01ca FFF7FEFF 	 bl _ZN5Floor3offEv
 161:../main.cpp   **** 		curentFloor->push((uint8_t)0xA5 + i);
 1519              	.LM110:
 1520 01ce A423     	 mov r3,#164
 1521 01d0 FB18     	 add r3,r7,r3
 1522 01d2 1B68     	 ldr r3,[r3]
 1523 01d4 DBB2     	 uxtb r3,r3
 1524 01d6 5B3B     	 sub r3,r3,#91
 1525 01d8 DBB2     	 uxtb r3,r3
 1526 01da A022     	 mov r2,#160
 1527 01dc BA18     	 add r2,r7,r2
 1528 01de 1268     	 ldr r2,[r2]
 1529 01e0 101C     	 mov r0,r2
 1530 01e2 191C     	 mov r1,r3
 1531 01e4 FFF7FEFF 	 bl _ZN5Floor4pushEh
 162:../main.cpp   **** 		curentFloor->on();
 1533              	.LM111:
 1534 01e8 A023     	 mov r3,#160
 1535 01ea FB18     	 add r3,r7,r3
 1536 01ec 1B68     	 ldr r3,[r3]
 1537 01ee 181C     	 mov r0,r3
 1538 01f0 FFF7FEFF 	 bl _ZN5Floor2onEv
 163:../main.cpp   **** 
 164:../main.cpp   **** 		curentFloor->delay(150000 / 2);
 1540              	.LM112:
 1541 01f4 A023     	 mov r3,#160
 1542 01f6 FB18     	 add r3,r7,r3
 1543 01f8 1B68     	 ldr r3,[r3]
 1544 01fa 0C33     	 add r3,r3,#12
 1545 01fc 1C4A     	 ldr r2,.L39+8
 1546 01fe 181C     	 mov r0,r3
 1547 0200 111C     	 mov r1,r2
 1548 0202 FFF7FEFF 	 bl _ZN7XObject5delayEj
 165:../main.cpp   **** 
 166:../main.cpp   **** 		curentFloor->off();
 1550              	.LM113:
 1551 0206 A023     	 mov r3,#160
 1552 0208 FB18     	 add r3,r7,r3
 1553 020a 1B68     	 ldr r3,[r3]
 1554 020c 181C     	 mov r0,r3
 1555 020e FFF7FEFF 	 bl _ZN5Floor3offEv
 167:../main.cpp   **** 		curentFloor->push((uint8_t)0x5A + i);
 1557              	.LM114:
 1558 0212 A423     	 mov r3,#164
 1559 0214 FB18     	 add r3,r7,r3
 1560 0216 1B68     	 ldr r3,[r3]
 1561 0218 DBB2     	 uxtb r3,r3
 1562 021a 5A33     	 add r3,r3,#90
 1563 021c DBB2     	 uxtb r3,r3
 1564 021e A022     	 mov r2,#160
 1565 0220 BA18     	 add r2,r7,r2
 1566 0222 1268     	 ldr r2,[r2]
 1567 0224 101C     	 mov r0,r2
 1568 0226 191C     	 mov r1,r3
 1569 0228 FFF7FEFF 	 bl _ZN5Floor4pushEh
 168:../main.cpp   **** 		curentFloor->on();
 1571              	.LM115:
 1572 022c A023     	 mov r3,#160
 1573 022e FB18     	 add r3,r7,r3
 1574 0230 1B68     	 ldr r3,[r3]
 1575 0232 181C     	 mov r0,r3
 1576 0234 FFF7FEFF 	 bl _ZN5Floor2onEv
 169:../main.cpp   **** 
 170:../main.cpp   **** 		curentFloor->delay(150000 / 2);
 1578              	.LM116:
 1579 0238 A023     	 mov r3,#160
 1580 023a FB18     	 add r3,r7,r3
 1581 023c 1B68     	 ldr r3,[r3]
 1582 023e 0C33     	 add r3,r3,#12
 1583 0240 0B4A     	 ldr r2,.L39+8
 1584 0242 181C     	 mov r0,r3
 1585 0244 111C     	 mov r1,r2
 1586 0246 FFF7FEFF 	 bl _ZN7XObject5delayEj
 171:../main.cpp   **** 
 172:../main.cpp   **** 		curentFloor->off();
 1588              	.LM117:
 1589 024a A023     	 mov r3,#160
 1590 024c FB18     	 add r3,r7,r3
 1591 024e 1B68     	 ldr r3,[r3]
 1592 0250 181C     	 mov r0,r3
 1593 0252 FFF7FEFF 	 bl _ZN5Floor3offEv
 173:../main.cpp   **** 
 174:../main.cpp   **** 		i++;
 1595              	.LM118:
 1596 0256 A423     	 mov r3,#164
 1597 0258 FB18     	 add r3,r7,r3
 1598 025a 1B68     	 ldr r3,[r3]
 1599 025c 0133     	 add r3,r3,#1
 1600 025e A422     	 mov r2,#164
 1601 0260 BA18     	 add r2,r7,r2
 1602 0262 1360     	 str r3,[r2]
 1603 0264 75E7     	 b .L38
 1604              	.L40:
 1605 0266 C046     	 .align 2
 1606              	.L39:
 1607 0268 00000440 	 .word 1074003968
 1608 026c 00020440 	 .word 1074004480
 1609 0270 F8240100 	 .word 75000
 1610              	.LBE2:
 1627              	.Lscope10:
 1629              	 .stabd 78,0,0
 1630              	 .section .text.SysTick_Handler,"ax",%progbits
 1631              	 .align 2
 1633              	 .global SysTick_Handler
 1634              	 .code 16
 1635              	 .thumb_func
 1637              	SysTick_Handler:
 1638              	 .stabd 46,0,0
 175:../main.cpp   **** 
 176:../main.cpp   **** 	}
 177:../main.cpp   **** }
 178:../main.cpp   **** 
 179:../main.cpp   **** extern "C" void SysTick_Handler(void) {
 1640              	.LM119:
 1641              	.LFBB11:
 1642 0000 80B5     	 push {r7,lr}
 1643 0002 00AF     	 add r7,sp,#0
 1644              	.LBB3:
 180:../main.cpp   **** 	// Application SysTick
 181:../main.cpp   **** 	static int counter = 0;
 182:../main.cpp   **** 	counter++;
 1646              	.LM120:
 1647 0004 0E4B     	 ldr r3,.L44
 1648 0006 1B68     	 ldr r3,[r3]
 1649 0008 5A1C     	 add r2,r3,#1
 1650 000a 0D4B     	 ldr r3,.L44
 1651 000c 1A60     	 str r2,[r3]
 183:../main.cpp   **** 	if (counter == 50) {
 1653              	.LM121:
 1654 000e 0C4B     	 ldr r3,.L44
 1655 0010 1B68     	 ldr r3,[r3]
 1656 0012 322B     	 cmp r3,#50
 1657 0014 05D1     	 bne .L42
 184:../main.cpp   **** 		//SET_BIT(PORT1->OUT, 0);
 185:../main.cpp   **** 		CLR_BIT(PORT1->OUT, 1);
 1659              	.LM122:
 1660 0016 0B4B     	 ldr r3,.L44+4
 1661 0018 0A4A     	 ldr r2,.L44+4
 1662 001a 1268     	 ldr r2,[r2]
 1663 001c 0221     	 mov r1,#2
 1664 001e 8A43     	 bic r2,r1
 1665 0020 1A60     	 str r2,[r3]
 1666              	.L42:
 186:../main.cpp   **** 	}
 187:../main.cpp   **** 	if (counter > 100) {
 1668              	.LM123:
 1669 0022 074B     	 ldr r3,.L44
 1670 0024 1B68     	 ldr r3,[r3]
 1671 0026 642B     	 cmp r3,#100
 1672 0028 08DD     	 ble .L41
 188:../main.cpp   **** 		//CLR_BIT(PORT1->OUT, 0);
 189:../main.cpp   **** 		SET_BIT(PORT1->OUT, 1);
 1674              	.LM124:
 1675 002a 064B     	 ldr r3,.L44+4
 1676 002c 054A     	 ldr r2,.L44+4
 1677 002e 1268     	 ldr r2,[r2]
 1678 0030 0221     	 mov r1,#2
 1679 0032 0A43     	 orr r2,r1
 1680 0034 1A60     	 str r2,[r3]
 190:../main.cpp   **** 		counter = 0;
 1682              	.LM125:
 1683 0036 024B     	 ldr r3,.L44
 1684 0038 0022     	 mov r2,#0
 1685 003a 1A60     	 str r2,[r3]
 1686              	.L41:
 1687              	.LBE3:
 191:../main.cpp   **** 	}
 192:../main.cpp   **** }
 1689              	.LM126:
 1690 003c BD46     	 mov sp,r7
 1691              	 
 1692 003e 80BD     	 pop {r7,pc}
 1693              	.L45:
 1694              	 .align 2
 1695              	.L44:
 1696 0040 00000000 	 .word _ZZ15SysTick_HandlerE7counter
 1697 0044 00010440 	 .word 1074004224
 1702              	.Lscope11:
 1704              	 .stabd 78,0,0
 1705              	 .section .rodata
 1706              	 .align 2
 1707              	.LC3:
 1708 0000 30784135 	 .ascii "0xA5,0x5A;0xA5,0x5A;0xA5,0x5A\000"
 1708      2C307835 
 1708      413B3078 
 1708      41352C30 
 1708      7835413B 
 1709 001e 0000     	 .section .text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 1710              	 .align 2
 1714              	 .code 16
 1715              	 .thumb_func
 1717              	_Z41__static_initialization_and_destruction_0ii:
 1718              	 .stabd 46,0,0
 1720              	.LM127:
 1721              	.LFBB12:
 1722 0000 80B5     	 push {r7,lr}
 1723 0002 84B0     	 sub sp,sp,#16
 1724 0004 00AF     	 add r7,sp,#0
 1725 0006 7860     	 str r0,[r7,#4]
 1726 0008 3960     	 str r1,[r7]
 1728              	.LM128:
 1729 000a 7B68     	 ldr r3,[r7,#4]
 1730 000c 012B     	 cmp r3,#1
 1731 000e 1ED1     	 bne .L46
 1733              	.LM129:
 1734 0010 3B68     	 ldr r3,[r7]
 1735 0012 104A     	 ldr r2,.L48
 1736 0014 9342     	 cmp r3,r2
 1737 0016 1AD1     	 bne .L46
 1739              	.Ltext5:
   1:../framesdata.h **** /*
   2:../framesdata.h ****  * frames.h
   3:../framesdata.h ****  *
   4:../framesdata.h ****  *  Created on: Dec 30, 2016
   5:../framesdata.h ****  *      Author: alex
   6:../framesdata.h ****  */
   7:../framesdata.h **** 
   8:../framesdata.h **** #ifndef FRAMESDATA_H_
   9:../framesdata.h **** #define FRAMESDATA_H_
  10:../framesdata.h **** 
  11:../framesdata.h **** #include <string>
  12:../framesdata.h **** 
  13:../framesdata.h **** std::string frameData = "0xA5,0x5A;0xA5,0x5A;0xA5,0x5A";
 1741              	.LM130:
 1742 0018 0C23     	 mov r3,#12
 1743 001a FB18     	 add r3,r7,r3
 1744 001c 181C     	 mov r0,r3
 1745 001e FFF7FEFF 	 bl _ZNSaIcEC1Ev
 1746 0022 0D49     	 ldr r1,.L48+4
 1747 0024 0D4A     	 ldr r2,.L48+8
 1748 0026 0C23     	 mov r3,#12
 1749 0028 FB18     	 add r3,r7,r3
 1750 002a 081C     	 mov r0,r1
 1751 002c 111C     	 mov r1,r2
 1752 002e 1A1C     	 mov r2,r3
 1753 0030 FFF7FEFF 	 bl _ZNSsC1EPKcRKSaIcE
 1754 0034 0C23     	 mov r3,#12
 1755 0036 FB18     	 add r3,r7,r3
 1756 0038 181C     	 mov r0,r3
 1757 003a FFF7FEFF 	 bl _ZNSaIcED1Ev
 1758 003e 0649     	 ldr r1,.L48+4
 1759 0040 074A     	 ldr r2,.L48+12
 1760 0042 084B     	 ldr r3,.L48+16
 1761 0044 081C     	 mov r0,r1
 1762 0046 111C     	 mov r1,r2
 1763 0048 1A1C     	 mov r2,r3
 1764 004a FFF7FEFF 	 bl __aeabi_atexit
 1765              	.L46:
 1767              	.Ltext6:
 1769              	.LM131:
 1770 004e BD46     	 mov sp,r7
 1771 0050 04B0     	 add sp,sp,#16
 1772              	 
 1773 0052 80BD     	 pop {r7,pc}
 1774              	.L49:
 1775              	 .align 2
 1776              	.L48:
 1777 0054 FFFF0000 	 .word 65535
 1778 0058 00000000 	 .word frameData
 1779 005c 00000000 	 .word .LC3
 1780 0060 00000000 	 .word _ZNSsD1Ev
 1781 0064 00000000 	 .word __dso_handle
 1783              	.Lscope12:
 1785              	 .stabd 78,0,0
 1786              	 .section .text._GLOBAL__sub_I_frameData,"ax",%progbits
 1787              	 .align 2
 1789              	 .code 16
 1790              	 .thumb_func
 1792              	_GLOBAL__sub_I_frameData:
 1793              	 .stabd 46,0,0
 1795              	.LM132:
 1796              	.LFBB13:
 1797 0000 80B5     	 push {r7,lr}
 1798 0002 00AF     	 add r7,sp,#0
 1800              	.LM133:
 1801 0004 034B     	 ldr r3,.L51
 1802 0006 0120     	 mov r0,#1
 1803 0008 191C     	 mov r1,r3
 1804 000a FFF7FEFF 	 bl _Z41__static_initialization_and_destruction_0ii
 1805 000e BD46     	 mov sp,r7
 1806              	 
 1807 0010 80BD     	 pop {r7,pc}
 1808              	.L52:
 1809 0012 C046     	 .align 2
 1810              	.L51:
 1811 0014 FFFF0000 	 .word 65535
 1813              	.Lscope13:
 1815              	 .stabd 78,0,0
 1816              	 .section .init_array,"aw",%init_array
 1817              	 .align 2
 1818 0000 00000000 	 .word _GLOBAL__sub_I_frameData(target1)
 1819              	 .section .bss._ZZ15SysTick_HandlerE7counter,"aw",%nobits
 1820              	 .align 2
 1823              	_ZZ15SysTick_HandlerE7counter:
 1824 0000 00000000 	 .space 4
 1826              	 .text
 1828              	.Letext0:
 1829              	 .hidden __dso_handle
 1830              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
    {standard input}:512    .text.NVIC_SetPriority:00000000 $t
    {standard input}:519    .text.NVIC_SetPriority:00000000 NVIC_SetPriority
    {standard input}:653    .text.NVIC_SetPriority:000000cc $d
    {standard input}:660    .text.SysTick_Config:00000000 $t
    {standard input}:666    .text.SysTick_Config:00000000 SysTick_Config
    {standard input}:724    .text.SysTick_Config:00000040 $d
    {standard input}:731    .text._ZL19P2_7_enable_digitalv:00000000 $t
    {standard input}:736    .text._ZL19P2_7_enable_digitalv:00000000 _ZL19P2_7_enable_digitalv
    {standard input}:761    .text._ZL19P2_7_enable_digitalv:00000014 $d
    {standard input}:767    .text._ZL19P2_9_enable_digitalv:00000000 $t
    {standard input}:772    .text._ZL19P2_9_enable_digitalv:00000000 _ZL19P2_9_enable_digitalv
    {standard input}:795    .text._ZL19P2_9_enable_digitalv:00000014 $d
    {standard input}:802    .text._ZL20P2_10_enable_digitalv:00000000 $t
    {standard input}:807    .text._ZL20P2_10_enable_digitalv:00000000 _ZL20P2_10_enable_digitalv
    {standard input}:830    .text._ZL20P2_10_enable_digitalv:00000014 $d
    {standard input}:837    .text._ZL20P2_11_enable_digitalv:00000000 $t
    {standard input}:842    .text._ZL20P2_11_enable_digitalv:00000000 _ZL20P2_11_enable_digitalv
    {standard input}:865    .text._ZL20P2_11_enable_digitalv:00000014 $d
    {standard input}:872    .text._ZL20__gthread_key_deletei:00000000 $t
    {standard input}:878    .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
    {standard input}:908    .bss.frameData:00000000 frameData
    {standard input}:905    .bss.frameData:00000000 $d
    {standard input}:911    .text._Z5delayj:00000000 $t
    {standard input}:918    .text._Z5delayj:00000000 _Z5delayj
    {standard input}:952    .text._Z15initApplicationv:00000000 $t
    {standard input}:958    .text._Z15initApplicationv:00000000 _Z15initApplicationv
    {standard input}:1195   .text._Z15initApplicationv:00000158 $d
    {standard input}:1212   .text.main:00000000 $t
    {standard input}:1218   .text.main:00000000 main
    {standard input}:1607   .text.main:00000268 $d
    {standard input}:1631   .text.SysTick_Handler:00000000 $t
    {standard input}:1637   .text.SysTick_Handler:00000000 SysTick_Handler
    {standard input}:1696   .text.SysTick_Handler:00000040 $d
    {standard input}:1823   .bss._ZZ15SysTick_HandlerE7counter:00000000 _ZZ15SysTick_HandlerE7counter
    {standard input}:1706   .rodata:00000000 $d
    {standard input}:1710   .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
    {standard input}:1717   .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
    {standard input}:1777   .text._Z41__static_initialization_and_destruction_0ii:00000054 $d
    {standard input}:1787   .text._GLOBAL__sub_I_frameData:00000000 $t
    {standard input}:1792   .text._GLOBAL__sub_I_frameData:00000000 _GLOBAL__sub_I_frameData
    {standard input}:1811   .text._GLOBAL__sub_I_frameData:00000014 $d
    {standard input}:1817   .init_array:00000000 $d
    {standard input}:1820   .bss._ZZ15SysTick_HandlerE7counter:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClockUpdate
SystemCoreClock
DAVE_Init
_ZN13ShiftRegisterC1EP13__AccessPointS1_
_ZN18ShiftRegisterArrayC1EP13__AccessPoint
_ZN18ShiftRegisterArray16addShiftRegisterEP13ShiftRegister
_ZN5FloorC1EPVmm
_ZN5Floor16setRegisterArrayEP18ShiftRegisterArray
_ZN5Floor5beginEv
_ZN5Floor4pushEh
_ZN5Floor3endEv
_ZN7XObject5delayEj
_ZN5Floor3offEv
_ZN5Floor2onEv
_ZNSaIcEC1Ev
_ZNSsC1EPKcRKSaIcE
_ZNSaIcED1Ev
__aeabi_atexit
_ZNSsD1Ev
__dso_handle
