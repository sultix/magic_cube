   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_rtc.c"
  16              	 .text
  17              	.Ltext0:
 297              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
 298              	 .align 2
 300              	 .code 16
 301              	 .thumb_func
 303              	XMC_SCU_GetMirrorStatus:
 304              	 .stabd 46,0,0
 306              	.Ltext1:
   1:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
   2:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @date 2016-03-09
   4:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
   5:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @cond
   6:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
   9:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                                             
  12:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 
  18:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 
  21:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  36:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Change History
  37:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * --------------
  38:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  39:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  42:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  46:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  53:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 2015-11-30:
  54:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *      
  56:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 2016-03-09:
  57:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *      
  59:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @endcond 
  60:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  61:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
  62:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #define XMC_SCU_H
  64:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  
  65:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**************************************************************************************************
  66:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * HEADER FILES
  67:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
  68:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #include <xmc_common.h>
  69:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
  70:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
  71:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @{
  73:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
  74:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  
  75:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
  76:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @addtogroup SCU
  77:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  79:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * SCU provides the following features,
  82:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Power control
  83:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC4 
  84:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Hibernate control 
  85:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
  86:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Reset control
  87:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Clock control
  88:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  90:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC4
  92:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
  94:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
  96:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Clock driver features:
  97:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC4
  99:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
 107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC1
 108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
 111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Reset driver features:
 113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC4
 114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
 117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC1
 118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif <br>
 121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Interrupt driver features:
 123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC4
 128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Hibernate driver features:
 129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Trap driver features:
 135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Parity driver features:
 138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Power driver features:
 142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
 144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Miscellaneous features:
 146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC4
 148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
 152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \if XMC1
 153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  \endif
 157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @{
 158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  
 160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**************************************************************************************************
 161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * MACROS
 162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
 163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**************************************************************************************************
 165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * ENUMS
 166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
 167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****                                   processing another request. */
 177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**************************************************************************************************
 181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * DATA TYPES
 182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
 183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**************************************************************************************************
 190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
 192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #else
 198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #endif
 200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**************************************************************************************************
 202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * API Prototypes
 203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  **************************************************************************************************
 204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #ifdef __cplusplus
 206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** extern "C" {
 207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #endif
 208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** }
 234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** }
 259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                parameters of clock setup.
 266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC1
 272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC4
 281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * the cause of reset. 
 383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** }
 395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None 
 397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** }
 411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  
 412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   return SystemCoreClock;
 428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** }
 429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  
 443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC1
 454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * bit fields are handled internally.
 459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC4
 461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * 
 466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  
 474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    to identify the peripheral.
 478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return None
 480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * peripherals that support clock gating.
 485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC1
 487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC4
 492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC1
 513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \if XMC4
 516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \endif
 518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * It is recommended to use this API before
 519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** #endif
 526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** 
 528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** /**
 529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *                    using \a OR operation.
 533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  *
 534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * \par<b>Description</b><br>
 535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****  */
 543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** {
 308              	.LM0:
 309              	.LFBB1:
 310 0000 80B5     	 push {r7,lr}
 311 0002 00AF     	 add r7,sp,#0
 545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
 313              	.LM1:
 314 0004 024B     	 ldr r3,.L3
 315 0006 9B6C     	 ldr r3,[r3,#72]
 546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/MagicCube/Libraries/XMCLib/inc/xmc_scu.h **** }
 317              	.LM2:
 318 0008 181C     	 mov r0,r3
 319 000a BD46     	 mov sp,r7
 320              	 
 321 000c 80BD     	 pop {r7,pc}
 322              	.L4:
 323 000e C046     	 .align 2
 324              	.L3:
 325 0010 00000140 	 .word 1073807360
 327              	.Lscope1:
 329              	 .stabd 78,0,0
 330              	 .section .text.XMC_RTC_Start,"ax",%progbits
 331              	 .align 2
 333              	 .global XMC_RTC_Start
 334              	 .code 16
 335              	 .thumb_func
 337              	XMC_RTC_Start:
 338              	 .stabd 46,0,0
 340              	.Ltext2:
   1:../Libraries/XMCLib/src/xmc_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../Libraries/XMCLib/src/xmc_rtc.c ****  * @date 2015-05-19
   4:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_rtc.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_rtc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_rtc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc_rtc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_rtc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  39:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_rtc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  44:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  45:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2016-05-19:
  46:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Added XMC_RTC_SetTimeStdFormat() and XMC_RTC_SetAlarmStdFormat()
  47:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  48:../Libraries/XMCLib/src/xmc_rtc.c ****  * @endcond 
  49:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  50:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  51:../Libraries/XMCLib/src/xmc_rtc.c **** 
  52:../Libraries/XMCLib/src/xmc_rtc.c **** /**
  53:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  54:../Libraries/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  55:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  56:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  57:../Libraries/XMCLib/src/xmc_rtc.c **** 
  58:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  59:../Libraries/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  60:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  61:../Libraries/XMCLib/src/xmc_rtc.c ****  
  62:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  63:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  64:../Libraries/XMCLib/src/xmc_rtc.c **** 
  65:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_rtc.c ****  * MACROS
  67:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  68:../Libraries/XMCLib/src/xmc_rtc.c **** 
  69:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (59U)   /**< RTC time : Maximum seconds */
  70:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (59U)   /**< RTC time : Maximum minutes */
  71:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (23U)   /**< RTC time : Maximum hours */
  72:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  73:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  74:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  75:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  76:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  77:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  78:../Libraries/XMCLib/src/xmc_rtc.c **** 
  79:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  80:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  81:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  82:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  83:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  84:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  85:../Libraries/XMCLib/src/xmc_rtc.c **** 
  86:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
  88:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  89:../Libraries/XMCLib/src/xmc_rtc.c **** 
  90:../Libraries/XMCLib/src/xmc_rtc.c **** /*
  91:../Libraries/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
  92:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  93:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
  94:../Libraries/XMCLib/src/xmc_rtc.c **** {
 342              	.LM3:
 343              	.LFBB2:
 344 0000 80B5     	 push {r7,lr}
 345 0002 00AF     	 add r7,sp,#0
  95:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 347              	.LM4:
 348 0004 C046     	 mov r8,r8
 349              	.L6:
 351              	.LM5:
 352 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 353 000a 021C     	 mov r2,r0
 354 000c 0123     	 mov r3,#1
 355 000e 1340     	 and r3,r2
 356 0010 F9D1     	 bne .L6
  96:../Libraries/XMCLib/src/xmc_rtc.c ****   {
  97:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
  98:../Libraries/XMCLib/src/xmc_rtc.c ****   }
  99:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
 358              	.LM6:
 359 0012 044B     	 ldr r3,.L7
 360 0014 034A     	 ldr r2,.L7
 361 0016 5268     	 ldr r2,[r2,#4]
 362 0018 0121     	 mov r1,#1
 363 001a 0A43     	 orr r2,r1
 364 001c 5A60     	 str r2,[r3,#4]
 100:../Libraries/XMCLib/src/xmc_rtc.c **** }
 366              	.LM7:
 367 001e BD46     	 mov sp,r7
 368              	 
 369 0020 80BD     	 pop {r7,pc}
 370              	.L8:
 371 0022 C046     	 .align 2
 372              	.L7:
 373 0024 000A0140 	 .word 1073809920
 375              	.Lscope2:
 377              	 .stabd 78,0,0
 378              	 .section .text.XMC_RTC_Stop,"ax",%progbits
 379              	 .align 2
 381              	 .global XMC_RTC_Stop
 382              	 .code 16
 383              	 .thumb_func
 385              	XMC_RTC_Stop:
 386              	 .stabd 46,0,0
 101:../Libraries/XMCLib/src/xmc_rtc.c **** 
 102:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 103:../Libraries/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 104:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 105:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 106:../Libraries/XMCLib/src/xmc_rtc.c **** {
 388              	.LM8:
 389              	.LFBB3:
 390 0000 80B5     	 push {r7,lr}
 391 0002 00AF     	 add r7,sp,#0
 107:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 393              	.LM9:
 394 0004 C046     	 mov r8,r8
 395              	.L10:
 397              	.LM10:
 398 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 399 000a 021C     	 mov r2,r0
 400 000c 0123     	 mov r3,#1
 401 000e 1340     	 and r3,r2
 402 0010 F9D1     	 bne .L10
 108:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 109:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 110:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 111:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
 404              	.LM11:
 405 0012 044B     	 ldr r3,.L11
 406 0014 034A     	 ldr r2,.L11
 407 0016 5268     	 ldr r2,[r2,#4]
 408 0018 0121     	 mov r1,#1
 409 001a 8A43     	 bic r2,r1
 410 001c 5A60     	 str r2,[r3,#4]
 112:../Libraries/XMCLib/src/xmc_rtc.c **** }
 412              	.LM12:
 413 001e BD46     	 mov sp,r7
 414              	 
 415 0020 80BD     	 pop {r7,pc}
 416              	.L12:
 417 0022 C046     	 .align 2
 418              	.L11:
 419 0024 000A0140 	 .word 1073809920
 421              	.Lscope3:
 423              	 .stabd 78,0,0
 424              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 425              	 .align 2
 428              	 .global XMC_RTC_SetPrescaler
 429              	 .code 16
 430              	 .thumb_func
 432              	XMC_RTC_SetPrescaler:
 433              	 .stabd 46,0,0
 113:../Libraries/XMCLib/src/xmc_rtc.c **** 
 114:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 115:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 116:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 117:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 118:../Libraries/XMCLib/src/xmc_rtc.c **** {
 435              	.LM13:
 436              	.LFBB4:
 437 0000 80B5     	 push {r7,lr}
 438 0002 82B0     	 sub sp,sp,#8
 439 0004 00AF     	 add r7,sp,#0
 440 0006 021C     	 mov r2,r0
 441 0008 BB1D     	 add r3,r7,#6
 442 000a 1A80     	 strh r2,[r3]
 119:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 120:../Libraries/XMCLib/src/xmc_rtc.c ****   
 121:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 444              	.LM14:
 445 000c C046     	 mov r8,r8
 446              	.L14:
 448              	.LM15:
 449 000e FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 450 0012 021C     	 mov r2,r0
 451 0014 0123     	 mov r3,#1
 452 0016 1340     	 and r3,r2
 453 0018 F9D1     	 bne .L14
 122:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 123:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 124:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 125:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 455              	.LM16:
 456 001a 064B     	 ldr r3,.L15
 457 001c 054A     	 ldr r2,.L15
 458 001e 5268     	 ldr r2,[r2,#4]
 459 0020 1204     	 lsl r2,r2,#16
 460 0022 110C     	 lsr r1,r2,#16
 126:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 462              	.LM17:
 463 0024 BA1D     	 add r2,r7,#6
 464 0026 1288     	 ldrh r2,[r2]
 465 0028 1204     	 lsl r2,r2,#16
 125:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 467              	.LM18:
 468 002a 0A43     	 orr r2,r1
 469 002c 5A60     	 str r2,[r3,#4]
 127:../Libraries/XMCLib/src/xmc_rtc.c **** }
 471              	.LM19:
 472 002e BD46     	 mov sp,r7
 473 0030 02B0     	 add sp,sp,#8
 474              	 
 475 0032 80BD     	 pop {r7,pc}
 476              	.L16:
 477              	 .align 2
 478              	.L15:
 479 0034 000A0140 	 .word 1073809920
 481              	.Lscope4:
 483              	 .stabd 78,0,0
 484              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 485              	 .align 2
 488              	 .global XMC_RTC_SetTime
 489              	 .code 16
 490              	 .thumb_func
 492              	XMC_RTC_SetTime:
 493              	 .stabd 46,0,0
 128:../Libraries/XMCLib/src/xmc_rtc.c **** 
 129:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 130:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 131:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 132:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 133:../Libraries/XMCLib/src/xmc_rtc.c **** {
 495              	.LM20:
 496              	.LFBB5:
 497 0000 80B5     	 push {r7,lr}
 498 0002 82B0     	 sub sp,sp,#8
 499 0004 00AF     	 add r7,sp,#0
 500 0006 7860     	 str r0,[r7,#4]
 134:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 135:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 136:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 137:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month day value", ((uint32_t)time->days < XMC_RTC_MAXDAYS));
 138:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 139:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 140:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 141:../Libraries/XMCLib/src/xmc_rtc.c **** 
 142:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 143:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 144:../Libraries/XMCLib/src/xmc_rtc.c ****       { 
 145:../Libraries/XMCLib/src/xmc_rtc.c ****          /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 146:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 147:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 148:../Libraries/XMCLib/src/xmc_rtc.c ****       
 149:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 150:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 151:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 152:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 153:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	     
 154:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 155:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 156:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_R
 502              	.LM21:
 503 0008 C046     	 mov r8,r8
 504              	.L18:
 506              	.LM22:
 507 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 508 000e 021C     	 mov r2,r0
 509 0010 1823     	 mov r3,#24
 510 0012 1340     	 and r3,r2
 511 0014 F9D1     	 bne .L18
 157:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 158:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 159:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 160:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 513              	.LM23:
 514 0016 054A     	 ldr r2,.L19
 515 0018 7B68     	 ldr r3,[r7,#4]
 516 001a 1B68     	 ldr r3,[r3]
 517 001c 1362     	 str r3,[r2,#32]
 161:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 519              	.LM24:
 520 001e 034A     	 ldr r2,.L19
 521 0020 7B68     	 ldr r3,[r7,#4]
 522 0022 5B68     	 ldr r3,[r3,#4]
 523 0024 5362     	 str r3,[r2,#36]
 162:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 163:../Libraries/XMCLib/src/xmc_rtc.c **** }
 525              	.LM25:
 526 0026 BD46     	 mov sp,r7
 527 0028 02B0     	 add sp,sp,#8
 528              	 
 529 002a 80BD     	 pop {r7,pc}
 530              	.L20:
 531              	 .align 2
 532              	.L19:
 533 002c 000A0140 	 .word 1073809920
 535              	.Lscope5:
 537              	 .stabd 78,0,0
 538              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 539              	 .align 2
 542              	 .global XMC_RTC_GetTime
 543              	 .code 16
 544              	 .thumb_func
 546              	XMC_RTC_GetTime:
 547              	 .stabd 46,0,0
 164:../Libraries/XMCLib/src/xmc_rtc.c **** 
 165:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 166:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 167:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 168:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 169:../Libraries/XMCLib/src/xmc_rtc.c **** {
 549              	.LM26:
 550              	.LFBB6:
 551 0000 80B5     	 push {r7,lr}
 552 0002 82B0     	 sub sp,sp,#8
 553 0004 00AF     	 add r7,sp,#0
 554 0006 7860     	 str r0,[r7,#4]
 170:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 556              	.LM27:
 557 0008 054B     	 ldr r3,.L22
 558 000a 1A6A     	 ldr r2,[r3,#32]
 559 000c 7B68     	 ldr r3,[r7,#4]
 560 000e 1A60     	 str r2,[r3]
 171:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 562              	.LM28:
 563 0010 034B     	 ldr r3,.L22
 564 0012 5A6A     	 ldr r2,[r3,#36]
 565 0014 7B68     	 ldr r3,[r7,#4]
 566 0016 5A60     	 str r2,[r3,#4]
 172:../Libraries/XMCLib/src/xmc_rtc.c **** }
 568              	.LM29:
 569 0018 BD46     	 mov sp,r7
 570 001a 02B0     	 add sp,sp,#8
 571              	 
 572 001c 80BD     	 pop {r7,pc}
 573              	.L23:
 574 001e C046     	 .align 2
 575              	.L22:
 576 0020 000A0140 	 .word 1073809920
 578              	.Lscope6:
 580              	 .stabd 78,0,0
 581              	 .section .text.XMC_RTC_SetTimeStdFormat,"ax",%progbits
 582              	 .align 2
 585              	 .global XMC_RTC_SetTimeStdFormat
 586              	 .code 16
 587              	 .thumb_func
 589              	XMC_RTC_SetTimeStdFormat:
 590              	 .stabd 46,0,0
 173:../Libraries/XMCLib/src/xmc_rtc.c **** 
 174:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 175:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module time values in standard format
 176:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 177:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTimeStdFormat(const struct tm *const stdtime)
 178:../Libraries/XMCLib/src/xmc_rtc.c **** {
 592              	.LM30:
 593              	.LFBB7:
 594 0000 80B5     	 push {r7,lr}
 595 0002 84B0     	 sub sp,sp,#16
 596 0004 00AF     	 add r7,sp,#0
 597 0006 7860     	 str r0,[r7,#4]
 179:../Libraries/XMCLib/src/xmc_rtc.c **** 
 180:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 181:../Libraries/XMCLib/src/xmc_rtc.c **** 
 182:../Libraries/XMCLib/src/xmc_rtc.c ****   time.seconds = stdtime->tm_sec;
 599              	.LM31:
 600 0008 7B68     	 ldr r3,[r7,#4]
 601 000a 1B68     	 ldr r3,[r3]
 602 000c DBB2     	 uxtb r3,r3
 603 000e 1A1C     	 add r2,r3,#0
 604 0010 3F23     	 mov r3,#63
 605 0012 1340     	 and r3,r2
 606 0014 DAB2     	 uxtb r2,r3
 607 0016 0823     	 mov r3,#8
 608 0018 FB18     	 add r3,r7,r3
 609 001a 3F21     	 mov r1,#63
 610 001c 0A40     	 and r2,r1
 611 001e 101C     	 mov r0,r2
 612 0020 1A78     	 ldrb r2,[r3]
 613 0022 3F21     	 mov r1,#63
 614 0024 8A43     	 bic r2,r1
 615 0026 111C     	 add r1,r2,#0
 616 0028 021C     	 add r2,r0,#0
 617 002a 0A43     	 orr r2,r1
 618 002c 1A70     	 strb r2,[r3]
 183:../Libraries/XMCLib/src/xmc_rtc.c ****   time.minutes = stdtime->tm_min;
 620              	.LM32:
 621 002e 7B68     	 ldr r3,[r7,#4]
 622 0030 5B68     	 ldr r3,[r3,#4]
 623 0032 DBB2     	 uxtb r3,r3
 624 0034 1A1C     	 add r2,r3,#0
 625 0036 3F23     	 mov r3,#63
 626 0038 1340     	 and r3,r2
 627 003a DAB2     	 uxtb r2,r3
 628 003c 0823     	 mov r3,#8
 629 003e FB18     	 add r3,r7,r3
 630 0040 3F21     	 mov r1,#63
 631 0042 0A40     	 and r2,r1
 632 0044 101C     	 mov r0,r2
 633 0046 5A78     	 ldrb r2,[r3,#1]
 634 0048 3F21     	 mov r1,#63
 635 004a 8A43     	 bic r2,r1
 636 004c 111C     	 add r1,r2,#0
 637 004e 021C     	 add r2,r0,#0
 638 0050 0A43     	 orr r2,r1
 639 0052 5A70     	 strb r2,[r3,#1]
 184:../Libraries/XMCLib/src/xmc_rtc.c ****   time.hours = stdtime->tm_hour;
 641              	.LM33:
 642 0054 7B68     	 ldr r3,[r7,#4]
 643 0056 9B68     	 ldr r3,[r3,#8]
 644 0058 DBB2     	 uxtb r3,r3
 645 005a 1A1C     	 add r2,r3,#0
 646 005c 1F23     	 mov r3,#31
 647 005e 1340     	 and r3,r2
 648 0060 DAB2     	 uxtb r2,r3
 649 0062 0823     	 mov r3,#8
 650 0064 FB18     	 add r3,r7,r3
 651 0066 1F21     	 mov r1,#31
 652 0068 0A40     	 and r2,r1
 653 006a 101C     	 mov r0,r2
 654 006c 9A78     	 ldrb r2,[r3,#2]
 655 006e 1F21     	 mov r1,#31
 656 0070 8A43     	 bic r2,r1
 657 0072 111C     	 add r1,r2,#0
 658 0074 021C     	 add r2,r0,#0
 659 0076 0A43     	 orr r2,r1
 660 0078 9A70     	 strb r2,[r3,#2]
 185:../Libraries/XMCLib/src/xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 662              	.LM34:
 663 007a 7B68     	 ldr r3,[r7,#4]
 664 007c DB68     	 ldr r3,[r3,#12]
 665 007e DBB2     	 uxtb r3,r3
 666 0080 013B     	 sub r3,r3,#1
 667 0082 DBB2     	 uxtb r3,r3
 668 0084 1A1C     	 add r2,r3,#0
 669 0086 1F23     	 mov r3,#31
 670 0088 1340     	 and r3,r2
 671 008a DAB2     	 uxtb r2,r3
 672 008c 0823     	 mov r3,#8
 673 008e FB18     	 add r3,r7,r3
 674 0090 1F21     	 mov r1,#31
 675 0092 0A40     	 and r2,r1
 676 0094 101C     	 mov r0,r2
 677 0096 DA78     	 ldrb r2,[r3,#3]
 678 0098 1F21     	 mov r1,#31
 679 009a 8A43     	 bic r2,r1
 680 009c 111C     	 add r1,r2,#0
 681 009e 021C     	 add r2,r0,#0
 682 00a0 0A43     	 orr r2,r1
 683 00a2 DA70     	 strb r2,[r3,#3]
 186:../Libraries/XMCLib/src/xmc_rtc.c ****   time.month = stdtime->tm_mon;
 685              	.LM35:
 686 00a4 7B68     	 ldr r3,[r7,#4]
 687 00a6 1B69     	 ldr r3,[r3,#16]
 688 00a8 DBB2     	 uxtb r3,r3
 689 00aa 1A1C     	 add r2,r3,#0
 690 00ac 0F23     	 mov r3,#15
 691 00ae 1340     	 and r3,r2
 692 00b0 DAB2     	 uxtb r2,r3
 693 00b2 0823     	 mov r3,#8
 694 00b4 FB18     	 add r3,r7,r3
 695 00b6 0F21     	 mov r1,#15
 696 00b8 0A40     	 and r2,r1
 697 00ba 101C     	 mov r0,r2
 698 00bc 5A79     	 ldrb r2,[r3,#5]
 699 00be 0F21     	 mov r1,#15
 700 00c0 8A43     	 bic r2,r1
 701 00c2 111C     	 add r1,r2,#0
 702 00c4 021C     	 add r2,r0,#0
 703 00c6 0A43     	 orr r2,r1
 704 00c8 5A71     	 strb r2,[r3,#5]
 187:../Libraries/XMCLib/src/xmc_rtc.c ****   time.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 706              	.LM36:
 707 00ca 7B68     	 ldr r3,[r7,#4]
 708 00cc 5B69     	 ldr r3,[r3,#20]
 709 00ce 9BB2     	 uxth r3,r3
 710 00d0 104A     	 ldr r2,.L25
 711 00d2 9446     	 mov ip,r2
 712 00d4 6344     	 add r3,r3,ip
 713 00d6 9AB2     	 uxth r2,r3
 714 00d8 0823     	 mov r3,#8
 715 00da FB18     	 add r3,r7,r3
 716 00dc DA80     	 strh r2,[r3,#6]
 188:../Libraries/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 718              	.LM37:
 719 00de 7B68     	 ldr r3,[r7,#4]
 720 00e0 9B69     	 ldr r3,[r3,#24]
 721 00e2 DBB2     	 uxtb r3,r3
 722 00e4 1A1C     	 add r2,r3,#0
 723 00e6 0723     	 mov r3,#7
 724 00e8 1340     	 and r3,r2
 725 00ea DAB2     	 uxtb r2,r3
 726 00ec 0823     	 mov r3,#8
 727 00ee FB18     	 add r3,r7,r3
 728 00f0 0721     	 mov r1,#7
 729 00f2 0A40     	 and r2,r1
 730 00f4 101C     	 mov r0,r2
 731 00f6 1A79     	 ldrb r2,[r3,#4]
 732 00f8 0721     	 mov r1,#7
 733 00fa 8A43     	 bic r2,r1
 734 00fc 111C     	 add r1,r2,#0
 735 00fe 021C     	 add r2,r0,#0
 736 0100 0A43     	 orr r2,r1
 737 0102 1A71     	 strb r2,[r3,#4]
 189:../Libraries/XMCLib/src/xmc_rtc.c **** 
 190:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetTime(&time);
 739              	.LM38:
 740 0104 0823     	 mov r3,#8
 741 0106 FB18     	 add r3,r7,r3
 742 0108 181C     	 mov r0,r3
 743 010a FFF7FEFF 	 bl XMC_RTC_SetTime
 191:../Libraries/XMCLib/src/xmc_rtc.c **** }
 745              	.LM39:
 746 010e BD46     	 mov sp,r7
 747 0110 04B0     	 add sp,sp,#16
 748              	 
 749 0112 80BD     	 pop {r7,pc}
 750              	.L26:
 751              	 .align 2
 752              	.L25:
 753 0114 6C070000 	 .word 1900
 758              	.Lscope7:
 760              	 .stabd 78,0,0
 761              	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 762              	 .align 2
 765              	 .global XMC_RTC_GetTimeStdFormat
 766              	 .code 16
 767              	 .thumb_func
 769              	XMC_RTC_GetTimeStdFormat:
 770              	 .stabd 46,0,0
 192:../Libraries/XMCLib/src/xmc_rtc.c **** 
 193:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 194:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 195:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 196:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 197:../Libraries/XMCLib/src/xmc_rtc.c **** {
 772              	.LM40:
 773              	.LFBB8:
 774 0000 80B5     	 push {r7,lr}
 775 0002 84B0     	 sub sp,sp,#16
 776 0004 00AF     	 add r7,sp,#0
 777 0006 7860     	 str r0,[r7,#4]
 198:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 199:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 779              	.LM41:
 780 0008 244B     	 ldr r3,.L28
 781 000a 1A6A     	 ldr r2,[r3,#32]
 782 000c 0823     	 mov r3,#8
 783 000e FB18     	 add r3,r7,r3
 784 0010 1A60     	 str r2,[r3]
 200:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 786              	.LM42:
 787 0012 224B     	 ldr r3,.L28
 788 0014 5A6A     	 ldr r2,[r3,#36]
 789 0016 0823     	 mov r3,#8
 790 0018 FB18     	 add r3,r7,r3
 791 001a 5A60     	 str r2,[r3,#4]
 201:../Libraries/XMCLib/src/xmc_rtc.c ****   
 202:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 793              	.LM43:
 794 001c 0823     	 mov r3,#8
 795 001e FB18     	 add r3,r7,r3
 796 0020 1B78     	 ldrb r3,[r3]
 797 0022 9B06     	 lsl r3,r3,#26
 798 0024 9B0E     	 lsr r3,r3,#26
 799 0026 DBB2     	 uxtb r3,r3
 800 0028 1A1C     	 mov r2,r3
 801 002a 7B68     	 ldr r3,[r7,#4]
 802 002c 1A60     	 str r2,[r3]
 203:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 804              	.LM44:
 805 002e 0823     	 mov r3,#8
 806 0030 FB18     	 add r3,r7,r3
 807 0032 5B78     	 ldrb r3,[r3,#1]
 808 0034 9B06     	 lsl r3,r3,#26
 809 0036 9B0E     	 lsr r3,r3,#26
 810 0038 DBB2     	 uxtb r3,r3
 811 003a 1A1C     	 mov r2,r3
 812 003c 7B68     	 ldr r3,[r7,#4]
 813 003e 5A60     	 str r2,[r3,#4]
 204:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 815              	.LM45:
 816 0040 0823     	 mov r3,#8
 817 0042 FB18     	 add r3,r7,r3
 818 0044 9B78     	 ldrb r3,[r3,#2]
 819 0046 DB06     	 lsl r3,r3,#27
 820 0048 DB0E     	 lsr r3,r3,#27
 821 004a DBB2     	 uxtb r3,r3
 822 004c 1A1C     	 mov r2,r3
 823 004e 7B68     	 ldr r3,[r7,#4]
 824 0050 9A60     	 str r2,[r3,#8]
 205:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 826              	.LM46:
 827 0052 0823     	 mov r3,#8
 828 0054 FB18     	 add r3,r7,r3
 829 0056 DB78     	 ldrb r3,[r3,#3]
 830 0058 DB06     	 lsl r3,r3,#27
 831 005a DB0E     	 lsr r3,r3,#27
 832 005c DBB2     	 uxtb r3,r3
 833 005e 5A1C     	 add r2,r3,#1
 834 0060 7B68     	 ldr r3,[r7,#4]
 835 0062 DA60     	 str r2,[r3,#12]
 206:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 837              	.LM47:
 838 0064 0823     	 mov r3,#8
 839 0066 FB18     	 add r3,r7,r3
 840 0068 5B79     	 ldrb r3,[r3,#5]
 841 006a 1B07     	 lsl r3,r3,#28
 842 006c 1B0F     	 lsr r3,r3,#28
 843 006e DBB2     	 uxtb r3,r3
 844 0070 1A1C     	 mov r2,r3
 845 0072 7B68     	 ldr r3,[r7,#4]
 846 0074 1A61     	 str r2,[r3,#16]
 207:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 848              	.LM48:
 849 0076 0823     	 mov r3,#8
 850 0078 FB18     	 add r3,r7,r3
 851 007a DB88     	 ldrh r3,[r3,#6]
 852 007c 084A     	 ldr r2,.L28+4
 853 007e 9A18     	 add r2,r3,r2
 854 0080 7B68     	 ldr r3,[r7,#4]
 855 0082 5A61     	 str r2,[r3,#20]
 208:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 857              	.LM49:
 858 0084 0823     	 mov r3,#8
 859 0086 FB18     	 add r3,r7,r3
 860 0088 1B79     	 ldrb r3,[r3,#4]
 861 008a 5B07     	 lsl r3,r3,#29
 862 008c 5B0F     	 lsr r3,r3,#29
 863 008e DBB2     	 uxtb r3,r3
 864 0090 1A1C     	 mov r2,r3
 865 0092 7B68     	 ldr r3,[r7,#4]
 866 0094 9A61     	 str r2,[r3,#24]
 209:../Libraries/XMCLib/src/xmc_rtc.c **** }
 868              	.LM50:
 869 0096 BD46     	 mov sp,r7
 870 0098 04B0     	 add sp,sp,#16
 871              	 
 872 009a 80BD     	 pop {r7,pc}
 873              	.L29:
 874              	 .align 2
 875              	.L28:
 876 009c 000A0140 	 .word 1073809920
 877 00a0 94F8FFFF 	 .word -1900
 882              	.Lscope8:
 884              	 .stabd 78,0,0
 885              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 886              	 .align 2
 889              	 .global XMC_RTC_SetAlarm
 890              	 .code 16
 891              	 .thumb_func
 893              	XMC_RTC_SetAlarm:
 894              	 .stabd 46,0,0
 210:../Libraries/XMCLib/src/xmc_rtc.c **** 
 211:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 212:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 213:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 214:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 215:../Libraries/XMCLib/src/xmc_rtc.c **** {
 896              	.LM51:
 897              	.LFBB9:
 898 0000 80B5     	 push {r7,lr}
 899 0002 82B0     	 sub sp,sp,#8
 900 0004 00AF     	 add r7,sp,#0
 901 0006 7860     	 str r0,[r7,#4]
 216:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 217:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 218:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 219:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong days value", ((uint32_t)alarm->days < XMC_RTC_MAXDAYS));
 220:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 221:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 222:../Libraries/XMCLib/src/xmc_rtc.c **** 
 223:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 224:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 225:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 226:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 227:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 228:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 229:../Libraries/XMCLib/src/xmc_rtc.c ****       
 230:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 231:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 232:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 233:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 234:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 235:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 236:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 237:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_
 903              	.LM52:
 904 0008 C046     	 mov r8,r8
 905              	.L31:
 907              	.LM53:
 908 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 909 000e 021C     	 mov r2,r0
 910 0010 0623     	 mov r3,#6
 911 0012 1340     	 and r3,r2
 912 0014 F9D1     	 bne .L31
 238:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 239:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 240:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 241:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 914              	.LM54:
 915 0016 054A     	 ldr r2,.L32
 916 0018 7B68     	 ldr r3,[r7,#4]
 917 001a 1B68     	 ldr r3,[r3]
 918 001c 9361     	 str r3,[r2,#24]
 242:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 920              	.LM55:
 921 001e 034A     	 ldr r2,.L32
 922 0020 7B68     	 ldr r3,[r7,#4]
 923 0022 5B68     	 ldr r3,[r3,#4]
 924 0024 D361     	 str r3,[r2,#28]
 243:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 244:../Libraries/XMCLib/src/xmc_rtc.c **** }
 926              	.LM56:
 927 0026 BD46     	 mov sp,r7
 928 0028 02B0     	 add sp,sp,#8
 929              	 
 930 002a 80BD     	 pop {r7,pc}
 931              	.L33:
 932              	 .align 2
 933              	.L32:
 934 002c 000A0140 	 .word 1073809920
 936              	.Lscope9:
 938              	 .stabd 78,0,0
 939              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 940              	 .align 2
 943              	 .global XMC_RTC_GetAlarm
 944              	 .code 16
 945              	 .thumb_func
 947              	XMC_RTC_GetAlarm:
 948              	 .stabd 46,0,0
 245:../Libraries/XMCLib/src/xmc_rtc.c **** 
 246:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 247:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 248:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 249:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 250:../Libraries/XMCLib/src/xmc_rtc.c **** {
 950              	.LM57:
 951              	.LFBB10:
 952 0000 80B5     	 push {r7,lr}
 953 0002 82B0     	 sub sp,sp,#8
 954 0004 00AF     	 add r7,sp,#0
 955 0006 7860     	 str r0,[r7,#4]
 251:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 957              	.LM58:
 958 0008 054B     	 ldr r3,.L35
 959 000a 9A69     	 ldr r2,[r3,#24]
 960 000c 7B68     	 ldr r3,[r7,#4]
 961 000e 1A60     	 str r2,[r3]
 252:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 963              	.LM59:
 964 0010 034B     	 ldr r3,.L35
 965 0012 DA69     	 ldr r2,[r3,#28]
 966 0014 7B68     	 ldr r3,[r7,#4]
 967 0016 5A60     	 str r2,[r3,#4]
 253:../Libraries/XMCLib/src/xmc_rtc.c **** }
 969              	.LM60:
 970 0018 BD46     	 mov sp,r7
 971 001a 02B0     	 add sp,sp,#8
 972              	 
 973 001c 80BD     	 pop {r7,pc}
 974              	.L36:
 975 001e C046     	 .align 2
 976              	.L35:
 977 0020 000A0140 	 .word 1073809920
 979              	.Lscope10:
 981              	 .stabd 78,0,0
 982              	 .section .text.XMC_RTC_SetAlarmStdFormat,"ax",%progbits
 983              	 .align 2
 986              	 .global XMC_RTC_SetAlarmStdFormat
 987              	 .code 16
 988              	 .thumb_func
 990              	XMC_RTC_SetAlarmStdFormat:
 991              	 .stabd 46,0,0
 254:../Libraries/XMCLib/src/xmc_rtc.c **** 
 255:../Libraries/XMCLib/src/xmc_rtc.c **** 
 256:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 257:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value in standard format
 258:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 259:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarmStdFormat(const struct tm *const stdtime)
 260:../Libraries/XMCLib/src/xmc_rtc.c **** {
 993              	.LM61:
 994              	.LFBB11:
 995 0000 80B5     	 push {r7,lr}
 996 0002 84B0     	 sub sp,sp,#16
 997 0004 00AF     	 add r7,sp,#0
 998 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 262:../Libraries/XMCLib/src/xmc_rtc.c ****   
 263:../Libraries/XMCLib/src/xmc_rtc.c **** 
 264:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.seconds = stdtime->tm_sec;
 1000              	.LM62:
 1001 0008 7B68     	 ldr r3,[r7,#4]
 1002 000a 1B68     	 ldr r3,[r3]
 1003 000c DBB2     	 uxtb r3,r3
 1004 000e 1A1C     	 add r2,r3,#0
 1005 0010 3F23     	 mov r3,#63
 1006 0012 1340     	 and r3,r2
 1007 0014 DAB2     	 uxtb r2,r3
 1008 0016 0823     	 mov r3,#8
 1009 0018 FB18     	 add r3,r7,r3
 1010 001a 3F21     	 mov r1,#63
 1011 001c 0A40     	 and r2,r1
 1012 001e 101C     	 mov r0,r2
 1013 0020 1A78     	 ldrb r2,[r3]
 1014 0022 3F21     	 mov r1,#63
 1015 0024 8A43     	 bic r2,r1
 1016 0026 111C     	 add r1,r2,#0
 1017 0028 021C     	 add r2,r0,#0
 1018 002a 0A43     	 orr r2,r1
 1019 002c 1A70     	 strb r2,[r3]
 265:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.minutes = stdtime->tm_min;
 1021              	.LM63:
 1022 002e 7B68     	 ldr r3,[r7,#4]
 1023 0030 5B68     	 ldr r3,[r3,#4]
 1024 0032 DBB2     	 uxtb r3,r3
 1025 0034 1A1C     	 add r2,r3,#0
 1026 0036 3F23     	 mov r3,#63
 1027 0038 1340     	 and r3,r2
 1028 003a DAB2     	 uxtb r2,r3
 1029 003c 0823     	 mov r3,#8
 1030 003e FB18     	 add r3,r7,r3
 1031 0040 3F21     	 mov r1,#63
 1032 0042 0A40     	 and r2,r1
 1033 0044 101C     	 mov r0,r2
 1034 0046 5A78     	 ldrb r2,[r3,#1]
 1035 0048 3F21     	 mov r1,#63
 1036 004a 8A43     	 bic r2,r1
 1037 004c 111C     	 add r1,r2,#0
 1038 004e 021C     	 add r2,r0,#0
 1039 0050 0A43     	 orr r2,r1
 1040 0052 5A70     	 strb r2,[r3,#1]
 266:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.hours = stdtime->tm_hour;
 1042              	.LM64:
 1043 0054 7B68     	 ldr r3,[r7,#4]
 1044 0056 9B68     	 ldr r3,[r3,#8]
 1045 0058 DBB2     	 uxtb r3,r3
 1046 005a 1A1C     	 add r2,r3,#0
 1047 005c 1F23     	 mov r3,#31
 1048 005e 1340     	 and r3,r2
 1049 0060 DAB2     	 uxtb r2,r3
 1050 0062 0823     	 mov r3,#8
 1051 0064 FB18     	 add r3,r7,r3
 1052 0066 1F21     	 mov r1,#31
 1053 0068 0A40     	 and r2,r1
 1054 006a 101C     	 mov r0,r2
 1055 006c 9A78     	 ldrb r2,[r3,#2]
 1056 006e 1F21     	 mov r1,#31
 1057 0070 8A43     	 bic r2,r1
 1058 0072 111C     	 add r1,r2,#0
 1059 0074 021C     	 add r2,r0,#0
 1060 0076 0A43     	 orr r2,r1
 1061 0078 9A70     	 strb r2,[r3,#2]
 267:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 1063              	.LM65:
 1064 007a 7B68     	 ldr r3,[r7,#4]
 1065 007c DB68     	 ldr r3,[r3,#12]
 1066 007e DBB2     	 uxtb r3,r3
 1067 0080 013B     	 sub r3,r3,#1
 1068 0082 DBB2     	 uxtb r3,r3
 1069 0084 1A1C     	 add r2,r3,#0
 1070 0086 1F23     	 mov r3,#31
 1071 0088 1340     	 and r3,r2
 1072 008a DAB2     	 uxtb r2,r3
 1073 008c 0823     	 mov r3,#8
 1074 008e FB18     	 add r3,r7,r3
 1075 0090 1F21     	 mov r1,#31
 1076 0092 0A40     	 and r2,r1
 1077 0094 101C     	 mov r0,r2
 1078 0096 DA78     	 ldrb r2,[r3,#3]
 1079 0098 1F21     	 mov r1,#31
 1080 009a 8A43     	 bic r2,r1
 1081 009c 111C     	 add r1,r2,#0
 1082 009e 021C     	 add r2,r0,#0
 1083 00a0 0A43     	 orr r2,r1
 1084 00a2 DA70     	 strb r2,[r3,#3]
 268:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 1086              	.LM66:
 1087 00a4 7B68     	 ldr r3,[r7,#4]
 1088 00a6 1B69     	 ldr r3,[r3,#16]
 1089 00a8 DBB2     	 uxtb r3,r3
 1090 00aa 1A1C     	 add r2,r3,#0
 1091 00ac 0F23     	 mov r3,#15
 1092 00ae 1340     	 and r3,r2
 1093 00b0 DAB2     	 uxtb r2,r3
 1094 00b2 0823     	 mov r3,#8
 1095 00b4 FB18     	 add r3,r7,r3
 1096 00b6 0F21     	 mov r1,#15
 1097 00b8 0A40     	 and r2,r1
 1098 00ba 101C     	 mov r0,r2
 1099 00bc 5A79     	 ldrb r2,[r3,#5]
 1100 00be 0F21     	 mov r1,#15
 1101 00c0 8A43     	 bic r2,r1
 1102 00c2 111C     	 add r1,r2,#0
 1103 00c4 021C     	 add r2,r0,#0
 1104 00c6 0A43     	 orr r2,r1
 1105 00c8 5A71     	 strb r2,[r3,#5]
 269:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 1107              	.LM67:
 1108 00ca 7B68     	 ldr r3,[r7,#4]
 1109 00cc 5B69     	 ldr r3,[r3,#20]
 1110 00ce 9BB2     	 uxth r3,r3
 1111 00d0 074A     	 ldr r2,.L38
 1112 00d2 9446     	 mov ip,r2
 1113 00d4 6344     	 add r3,r3,ip
 1114 00d6 9AB2     	 uxth r2,r3
 1115 00d8 0823     	 mov r3,#8
 1116 00da FB18     	 add r3,r7,r3
 1117 00dc DA80     	 strh r2,[r3,#6]
 270:../Libraries/XMCLib/src/xmc_rtc.c **** 
 271:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetAlarm(&alarm);
 1119              	.LM68:
 1120 00de 0823     	 mov r3,#8
 1121 00e0 FB18     	 add r3,r7,r3
 1122 00e2 181C     	 mov r0,r3
 1123 00e4 FFF7FEFF 	 bl XMC_RTC_SetAlarm
 272:../Libraries/XMCLib/src/xmc_rtc.c **** }
 1125              	.LM69:
 1126 00e8 BD46     	 mov sp,r7
 1127 00ea 04B0     	 add sp,sp,#16
 1128              	 
 1129 00ec 80BD     	 pop {r7,pc}
 1130              	.L39:
 1131 00ee C046     	 .align 2
 1132              	.L38:
 1133 00f0 6C070000 	 .word 1900
 1138              	.Lscope11:
 1140              	 .stabd 78,0,0
 1141              	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 1142              	 .align 2
 1145              	 .global XMC_RTC_GetAlarmStdFormat
 1146              	 .code 16
 1147              	 .thumb_func
 1149              	XMC_RTC_GetAlarmStdFormat:
 1150              	 .stabd 46,0,0
 273:../Libraries/XMCLib/src/xmc_rtc.c **** 
 274:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 275:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 276:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 277:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 278:../Libraries/XMCLib/src/xmc_rtc.c **** {
 1152              	.LM70:
 1153              	.LFBB12:
 1154 0000 80B5     	 push {r7,lr}
 1155 0002 84B0     	 sub sp,sp,#16
 1156 0004 00AF     	 add r7,sp,#0
 1157 0006 7860     	 str r0,[r7,#4]
 279:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 280:../Libraries/XMCLib/src/xmc_rtc.c ****   
 281:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 1159              	.LM71:
 1160 0008 204B     	 ldr r3,.L41
 1161 000a 9A69     	 ldr r2,[r3,#24]
 1162 000c 0823     	 mov r3,#8
 1163 000e FB18     	 add r3,r7,r3
 1164 0010 1A60     	 str r2,[r3]
 282:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 1166              	.LM72:
 1167 0012 1E4B     	 ldr r3,.L41
 1168 0014 DA69     	 ldr r2,[r3,#28]
 1169 0016 0823     	 mov r3,#8
 1170 0018 FB18     	 add r3,r7,r3
 1171 001a 5A60     	 str r2,[r3,#4]
 283:../Libraries/XMCLib/src/xmc_rtc.c **** 
 284:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 1173              	.LM73:
 1174 001c 0823     	 mov r3,#8
 1175 001e FB18     	 add r3,r7,r3
 1176 0020 1B78     	 ldrb r3,[r3]
 1177 0022 9B06     	 lsl r3,r3,#26
 1178 0024 9B0E     	 lsr r3,r3,#26
 1179 0026 DBB2     	 uxtb r3,r3
 1180 0028 1A1C     	 mov r2,r3
 1181 002a 7B68     	 ldr r3,[r7,#4]
 1182 002c 1A60     	 str r2,[r3]
 285:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 1184              	.LM74:
 1185 002e 0823     	 mov r3,#8
 1186 0030 FB18     	 add r3,r7,r3
 1187 0032 5B78     	 ldrb r3,[r3,#1]
 1188 0034 9B06     	 lsl r3,r3,#26
 1189 0036 9B0E     	 lsr r3,r3,#26
 1190 0038 DBB2     	 uxtb r3,r3
 1191 003a 1A1C     	 mov r2,r3
 1192 003c 7B68     	 ldr r3,[r7,#4]
 1193 003e 5A60     	 str r2,[r3,#4]
 286:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 1195              	.LM75:
 1196 0040 0823     	 mov r3,#8
 1197 0042 FB18     	 add r3,r7,r3
 1198 0044 9B78     	 ldrb r3,[r3,#2]
 1199 0046 DB06     	 lsl r3,r3,#27
 1200 0048 DB0E     	 lsr r3,r3,#27
 1201 004a DBB2     	 uxtb r3,r3
 1202 004c 1A1C     	 mov r2,r3
 1203 004e 7B68     	 ldr r3,[r7,#4]
 1204 0050 9A60     	 str r2,[r3,#8]
 287:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 1206              	.LM76:
 1207 0052 0823     	 mov r3,#8
 1208 0054 FB18     	 add r3,r7,r3
 1209 0056 DB78     	 ldrb r3,[r3,#3]
 1210 0058 DB06     	 lsl r3,r3,#27
 1211 005a DB0E     	 lsr r3,r3,#27
 1212 005c DBB2     	 uxtb r3,r3
 1213 005e 5A1C     	 add r2,r3,#1
 1214 0060 7B68     	 ldr r3,[r7,#4]
 1215 0062 DA60     	 str r2,[r3,#12]
 288:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 1217              	.LM77:
 1218 0064 0823     	 mov r3,#8
 1219 0066 FB18     	 add r3,r7,r3
 1220 0068 5B79     	 ldrb r3,[r3,#5]
 1221 006a 1B07     	 lsl r3,r3,#28
 1222 006c 1B0F     	 lsr r3,r3,#28
 1223 006e DBB2     	 uxtb r3,r3
 1224 0070 1A1C     	 mov r2,r3
 1225 0072 7B68     	 ldr r3,[r7,#4]
 1226 0074 1A61     	 str r2,[r3,#16]
 289:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 1228              	.LM78:
 1229 0076 0823     	 mov r3,#8
 1230 0078 FB18     	 add r3,r7,r3
 1231 007a DB88     	 ldrh r3,[r3,#6]
 1232 007c 044A     	 ldr r2,.L41+4
 1233 007e 9A18     	 add r2,r3,r2
 1234 0080 7B68     	 ldr r3,[r7,#4]
 1235 0082 5A61     	 str r2,[r3,#20]
 290:../Libraries/XMCLib/src/xmc_rtc.c **** }
 1237              	.LM79:
 1238 0084 BD46     	 mov sp,r7
 1239 0086 04B0     	 add sp,sp,#16
 1240              	 
 1241 0088 80BD     	 pop {r7,pc}
 1242              	.L42:
 1243 008a C046     	 .align 2
 1244              	.L41:
 1245 008c 000A0140 	 .word 1073809920
 1246 0090 94F8FFFF 	 .word -1900
 1251              	.Lscope12:
 1253              	 .stabd 78,0,0
 1254              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 1255              	 .align 2
 1257              	 .global XMC_RTC_GetEventStatus
 1258              	 .code 16
 1259              	 .thumb_func
 1261              	XMC_RTC_GetEventStatus:
 1262              	 .stabd 46,0,0
 291:../Libraries/XMCLib/src/xmc_rtc.c **** 
 292:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 293:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 294:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 295:../Libraries/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 296:../Libraries/XMCLib/src/xmc_rtc.c **** {
 1264              	.LM80:
 1265              	.LFBB13:
 1266 0000 80B5     	 push {r7,lr}
 1267 0002 00AF     	 add r7,sp,#0
 297:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 1269              	.LM81:
 1270 0004 024B     	 ldr r3,.L45
 1271 0006 DB68     	 ldr r3,[r3,#12]
 298:../Libraries/XMCLib/src/xmc_rtc.c **** }
 1273              	.LM82:
 1274 0008 181C     	 mov r0,r3
 1275 000a BD46     	 mov sp,r7
 1276              	 
 1277 000c 80BD     	 pop {r7,pc}
 1278              	.L46:
 1279 000e C046     	 .align 2
 1280              	.L45:
 1281 0010 000A0140 	 .word 1073809920
 1283              	.Lscope13:
 1285              	 .stabd 78,0,0
 1286              	 .text
 1288              	.Letext0:
 1289              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:298    .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:303    .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:325    .text.XMC_SCU_GetMirrorStatus:00000010 $d
    {standard input}:331    .text.XMC_RTC_Start:00000000 $t
    {standard input}:337    .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:373    .text.XMC_RTC_Start:00000024 $d
    {standard input}:379    .text.XMC_RTC_Stop:00000000 $t
    {standard input}:385    .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:419    .text.XMC_RTC_Stop:00000024 $d
    {standard input}:425    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:432    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:479    .text.XMC_RTC_SetPrescaler:00000034 $d
    {standard input}:485    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:492    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:533    .text.XMC_RTC_SetTime:0000002c $d
    {standard input}:539    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:546    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:576    .text.XMC_RTC_GetTime:00000020 $d
    {standard input}:582    .text.XMC_RTC_SetTimeStdFormat:00000000 $t
    {standard input}:589    .text.XMC_RTC_SetTimeStdFormat:00000000 XMC_RTC_SetTimeStdFormat
    {standard input}:753    .text.XMC_RTC_SetTimeStdFormat:00000114 $d
    {standard input}:762    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:769    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:876    .text.XMC_RTC_GetTimeStdFormat:0000009c $d
    {standard input}:886    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:893    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:934    .text.XMC_RTC_SetAlarm:0000002c $d
    {standard input}:940    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:947    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:977    .text.XMC_RTC_GetAlarm:00000020 $d
    {standard input}:983    .text.XMC_RTC_SetAlarmStdFormat:00000000 $t
    {standard input}:990    .text.XMC_RTC_SetAlarmStdFormat:00000000 XMC_RTC_SetAlarmStdFormat
    {standard input}:1133   .text.XMC_RTC_SetAlarmStdFormat:000000f0 $d
    {standard input}:1142   .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:1149   .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:1245   .text.XMC_RTC_GetAlarmStdFormat:0000008c $d
    {standard input}:1255   .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:1261   .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:1281   .text.XMC_RTC_GetEventStatus:00000010 $d

NO UNDEFINED SYMBOLS
